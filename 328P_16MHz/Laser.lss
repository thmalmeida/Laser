
Laser.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000018a  00800100  000029b4  00002a48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000029b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007a  0080028a  0080028a  00002bd2  2**0
                  ALLOC
  3 .stab         00004320  00000000  00000000  00002bd4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000048f6  00000000  00000000  00006ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000200  00000000  00000000  0000b7ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000253  00000000  00000000  0000b9ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002b10  00000000  00000000  0000bc3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001782  00000000  00000000  0000e74d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000014a9  00000000  00000000  0000fecf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000220  00000000  00000000  00011378  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000031a  00000000  00000000  00011598  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000a92  00000000  00000000  000118b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00012344  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__ctors_end>
       4:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
       8:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
       c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      10:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      14:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      18:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      1c:	0c 94 e2 0d 	jmp	0x1bc4	; 0x1bc4 <__vector_7>
      20:	0c 94 d8 0d 	jmp	0x1bb0	; 0x1bb0 <__vector_8>
      24:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      28:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      2c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      30:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      34:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      38:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      3c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      40:	0c 94 a6 12 	jmp	0x254c	; 0x254c <__vector_16>
      44:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      48:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      4c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      50:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      54:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      58:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      5c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      60:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      64:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>

00000068 <port_to_mode_PGM>:
      68:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

00000072 <port_to_output_PGM>:
      72:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

0000007c <port_to_input_PGM>:
      7c:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

00000086 <digital_pin_to_port_PGM>:
      86:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      96:	03 03 03 03 02 02                                   ......

0000009c <digital_pin_to_bit_mask_PGM>:
      9c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      ac:	04 08 10 20 40 80                                   ... @.

000000b2 <digital_pin_to_timer_PGM>:
      b2:	00 00 00 07 00 02 01 00 00 03 04 06 00 00 00 00     ................
      c2:	00 00 00 00                                         ....

000000c6 <__ctors_start>:
      c6:	08 0e       	add	r0, r24

000000c8 <__ctors_end>:
      c8:	11 24       	eor	r1, r1
      ca:	1f be       	out	0x3f, r1	; 63
      cc:	cf ef       	ldi	r28, 0xFF	; 255
      ce:	d4 e0       	ldi	r29, 0x04	; 4
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_copy_data>:
      d4:	12 e0       	ldi	r17, 0x02	; 2
      d6:	a0 e0       	ldi	r26, 0x00	; 0
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	e4 eb       	ldi	r30, 0xB4	; 180
      dc:	f9 e2       	ldi	r31, 0x29	; 41
      de:	02 c0       	rjmp	.+4      	; 0xe4 <.do_copy_data_start>

000000e0 <.do_copy_data_loop>:
      e0:	05 90       	lpm	r0, Z+
      e2:	0d 92       	st	X+, r0

000000e4 <.do_copy_data_start>:
      e4:	aa 38       	cpi	r26, 0x8A	; 138
      e6:	b1 07       	cpc	r27, r17
      e8:	d9 f7       	brne	.-10     	; 0xe0 <.do_copy_data_loop>

000000ea <__do_clear_bss>:
      ea:	13 e0       	ldi	r17, 0x03	; 3
      ec:	aa e8       	ldi	r26, 0x8A	; 138
      ee:	b2 e0       	ldi	r27, 0x02	; 2
      f0:	01 c0       	rjmp	.+2      	; 0xf4 <.do_clear_bss_start>

000000f2 <.do_clear_bss_loop>:
      f2:	1d 92       	st	X+, r1

000000f4 <.do_clear_bss_start>:
      f4:	a4 30       	cpi	r26, 0x04	; 4
      f6:	b1 07       	cpc	r27, r17
      f8:	e1 f7       	brne	.-8      	; 0xf2 <.do_clear_bss_loop>

000000fa <__do_global_ctors>:
      fa:	10 e0       	ldi	r17, 0x00	; 0
      fc:	c8 ec       	ldi	r28, 0xC8	; 200
      fe:	d0 e0       	ldi	r29, 0x00	; 0
     100:	04 c0       	rjmp	.+8      	; 0x10a <.do_global_ctors_start>

00000102 <.do_global_ctors_loop>:
     102:	22 97       	sbiw	r28, 0x02	; 2
     104:	fe 01       	movw	r30, r28
     106:	0e 94 d4 14 	call	0x29a8	; 0x29a8 <__tablejump__>

0000010a <.do_global_ctors_start>:
     10a:	c6 3c       	cpi	r28, 0xC6	; 198
     10c:	d1 07       	cpc	r29, r17
     10e:	c9 f7       	brne	.-14     	; 0x102 <.do_global_ctors_loop>
     110:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <main>
     114:	0c 94 d8 14 	jmp	0x29b0	; 0x29b0 <_exit>

00000118 <__bad_interrupt>:
     118:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011c <__fixunssfsi>:
     11c:	ef 92       	push	r14
     11e:	ff 92       	push	r15
     120:	0f 93       	push	r16
     122:	1f 93       	push	r17
     124:	7b 01       	movw	r14, r22
     126:	8c 01       	movw	r16, r24
     128:	20 e0       	ldi	r18, 0x00	; 0
     12a:	30 e0       	ldi	r19, 0x00	; 0
     12c:	40 e0       	ldi	r20, 0x00	; 0
     12e:	5f e4       	ldi	r21, 0x4F	; 79
     130:	0e 94 3a 04 	call	0x874	; 0x874 <__gesf2>
     134:	88 23       	and	r24, r24
     136:	8c f0       	brlt	.+34     	; 0x15a <__fixunssfsi+0x3e>
     138:	c8 01       	movw	r24, r16
     13a:	b7 01       	movw	r22, r14
     13c:	20 e0       	ldi	r18, 0x00	; 0
     13e:	30 e0       	ldi	r19, 0x00	; 0
     140:	40 e0       	ldi	r20, 0x00	; 0
     142:	5f e4       	ldi	r21, 0x4F	; 79
     144:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
     148:	0e 94 53 05 	call	0xaa6	; 0xaa6 <__fixsfsi>
     14c:	9b 01       	movw	r18, r22
     14e:	ac 01       	movw	r20, r24
     150:	20 50       	subi	r18, 0x00	; 0
     152:	30 40       	sbci	r19, 0x00	; 0
     154:	40 40       	sbci	r20, 0x00	; 0
     156:	50 48       	sbci	r21, 0x80	; 128
     158:	06 c0       	rjmp	.+12     	; 0x166 <__fixunssfsi+0x4a>
     15a:	c8 01       	movw	r24, r16
     15c:	b7 01       	movw	r22, r14
     15e:	0e 94 53 05 	call	0xaa6	; 0xaa6 <__fixsfsi>
     162:	9b 01       	movw	r18, r22
     164:	ac 01       	movw	r20, r24
     166:	b9 01       	movw	r22, r18
     168:	ca 01       	movw	r24, r20
     16a:	1f 91       	pop	r17
     16c:	0f 91       	pop	r16
     16e:	ff 90       	pop	r15
     170:	ef 90       	pop	r14
     172:	08 95       	ret

00000174 <_fpadd_parts>:
     174:	a0 e0       	ldi	r26, 0x00	; 0
     176:	b0 e0       	ldi	r27, 0x00	; 0
     178:	e0 ec       	ldi	r30, 0xC0	; 192
     17a:	f0 e0       	ldi	r31, 0x00	; 0
     17c:	0c 94 9b 14 	jmp	0x2936	; 0x2936 <__prologue_saves__>
     180:	dc 01       	movw	r26, r24
     182:	2b 01       	movw	r4, r22
     184:	fa 01       	movw	r30, r20
     186:	9c 91       	ld	r25, X
     188:	92 30       	cpi	r25, 0x02	; 2
     18a:	08 f4       	brcc	.+2      	; 0x18e <_fpadd_parts+0x1a>
     18c:	39 c1       	rjmp	.+626    	; 0x400 <_fpadd_parts+0x28c>
     18e:	eb 01       	movw	r28, r22
     190:	88 81       	ld	r24, Y
     192:	82 30       	cpi	r24, 0x02	; 2
     194:	08 f4       	brcc	.+2      	; 0x198 <_fpadd_parts+0x24>
     196:	33 c1       	rjmp	.+614    	; 0x3fe <_fpadd_parts+0x28a>
     198:	94 30       	cpi	r25, 0x04	; 4
     19a:	69 f4       	brne	.+26     	; 0x1b6 <_fpadd_parts+0x42>
     19c:	84 30       	cpi	r24, 0x04	; 4
     19e:	09 f0       	breq	.+2      	; 0x1a2 <_fpadd_parts+0x2e>
     1a0:	2f c1       	rjmp	.+606    	; 0x400 <_fpadd_parts+0x28c>
     1a2:	11 96       	adiw	r26, 0x01	; 1
     1a4:	9c 91       	ld	r25, X
     1a6:	11 97       	sbiw	r26, 0x01	; 1
     1a8:	89 81       	ldd	r24, Y+1	; 0x01
     1aa:	98 17       	cp	r25, r24
     1ac:	09 f4       	brne	.+2      	; 0x1b0 <_fpadd_parts+0x3c>
     1ae:	28 c1       	rjmp	.+592    	; 0x400 <_fpadd_parts+0x28c>
     1b0:	a6 e6       	ldi	r26, 0x66	; 102
     1b2:	b1 e0       	ldi	r27, 0x01	; 1
     1b4:	25 c1       	rjmp	.+586    	; 0x400 <_fpadd_parts+0x28c>
     1b6:	84 30       	cpi	r24, 0x04	; 4
     1b8:	09 f4       	brne	.+2      	; 0x1bc <_fpadd_parts+0x48>
     1ba:	21 c1       	rjmp	.+578    	; 0x3fe <_fpadd_parts+0x28a>
     1bc:	82 30       	cpi	r24, 0x02	; 2
     1be:	a9 f4       	brne	.+42     	; 0x1ea <_fpadd_parts+0x76>
     1c0:	92 30       	cpi	r25, 0x02	; 2
     1c2:	09 f0       	breq	.+2      	; 0x1c6 <_fpadd_parts+0x52>
     1c4:	1d c1       	rjmp	.+570    	; 0x400 <_fpadd_parts+0x28c>
     1c6:	9a 01       	movw	r18, r20
     1c8:	ad 01       	movw	r20, r26
     1ca:	88 e0       	ldi	r24, 0x08	; 8
     1cc:	ea 01       	movw	r28, r20
     1ce:	09 90       	ld	r0, Y+
     1d0:	ae 01       	movw	r20, r28
     1d2:	e9 01       	movw	r28, r18
     1d4:	09 92       	st	Y+, r0
     1d6:	9e 01       	movw	r18, r28
     1d8:	81 50       	subi	r24, 0x01	; 1
     1da:	c1 f7       	brne	.-16     	; 0x1cc <_fpadd_parts+0x58>
     1dc:	e2 01       	movw	r28, r4
     1de:	89 81       	ldd	r24, Y+1	; 0x01
     1e0:	11 96       	adiw	r26, 0x01	; 1
     1e2:	9c 91       	ld	r25, X
     1e4:	89 23       	and	r24, r25
     1e6:	81 83       	std	Z+1, r24	; 0x01
     1e8:	08 c1       	rjmp	.+528    	; 0x3fa <_fpadd_parts+0x286>
     1ea:	92 30       	cpi	r25, 0x02	; 2
     1ec:	09 f4       	brne	.+2      	; 0x1f0 <_fpadd_parts+0x7c>
     1ee:	07 c1       	rjmp	.+526    	; 0x3fe <_fpadd_parts+0x28a>
     1f0:	12 96       	adiw	r26, 0x02	; 2
     1f2:	2d 90       	ld	r2, X+
     1f4:	3c 90       	ld	r3, X
     1f6:	13 97       	sbiw	r26, 0x03	; 3
     1f8:	eb 01       	movw	r28, r22
     1fa:	8a 81       	ldd	r24, Y+2	; 0x02
     1fc:	9b 81       	ldd	r25, Y+3	; 0x03
     1fe:	14 96       	adiw	r26, 0x04	; 4
     200:	ad 90       	ld	r10, X+
     202:	bd 90       	ld	r11, X+
     204:	cd 90       	ld	r12, X+
     206:	dc 90       	ld	r13, X
     208:	17 97       	sbiw	r26, 0x07	; 7
     20a:	ec 80       	ldd	r14, Y+4	; 0x04
     20c:	fd 80       	ldd	r15, Y+5	; 0x05
     20e:	0e 81       	ldd	r16, Y+6	; 0x06
     210:	1f 81       	ldd	r17, Y+7	; 0x07
     212:	91 01       	movw	r18, r2
     214:	28 1b       	sub	r18, r24
     216:	39 0b       	sbc	r19, r25
     218:	b9 01       	movw	r22, r18
     21a:	37 ff       	sbrs	r19, 7
     21c:	04 c0       	rjmp	.+8      	; 0x226 <_fpadd_parts+0xb2>
     21e:	66 27       	eor	r22, r22
     220:	77 27       	eor	r23, r23
     222:	62 1b       	sub	r22, r18
     224:	73 0b       	sbc	r23, r19
     226:	60 32       	cpi	r22, 0x20	; 32
     228:	71 05       	cpc	r23, r1
     22a:	0c f0       	brlt	.+2      	; 0x22e <_fpadd_parts+0xba>
     22c:	61 c0       	rjmp	.+194    	; 0x2f0 <_fpadd_parts+0x17c>
     22e:	12 16       	cp	r1, r18
     230:	13 06       	cpc	r1, r19
     232:	6c f5       	brge	.+90     	; 0x28e <_fpadd_parts+0x11a>
     234:	37 01       	movw	r6, r14
     236:	48 01       	movw	r8, r16
     238:	06 2e       	mov	r0, r22
     23a:	04 c0       	rjmp	.+8      	; 0x244 <_fpadd_parts+0xd0>
     23c:	96 94       	lsr	r9
     23e:	87 94       	ror	r8
     240:	77 94       	ror	r7
     242:	67 94       	ror	r6
     244:	0a 94       	dec	r0
     246:	d2 f7       	brpl	.-12     	; 0x23c <_fpadd_parts+0xc8>
     248:	21 e0       	ldi	r18, 0x01	; 1
     24a:	30 e0       	ldi	r19, 0x00	; 0
     24c:	40 e0       	ldi	r20, 0x00	; 0
     24e:	50 e0       	ldi	r21, 0x00	; 0
     250:	04 c0       	rjmp	.+8      	; 0x25a <_fpadd_parts+0xe6>
     252:	22 0f       	add	r18, r18
     254:	33 1f       	adc	r19, r19
     256:	44 1f       	adc	r20, r20
     258:	55 1f       	adc	r21, r21
     25a:	6a 95       	dec	r22
     25c:	d2 f7       	brpl	.-12     	; 0x252 <_fpadd_parts+0xde>
     25e:	21 50       	subi	r18, 0x01	; 1
     260:	30 40       	sbci	r19, 0x00	; 0
     262:	40 40       	sbci	r20, 0x00	; 0
     264:	50 40       	sbci	r21, 0x00	; 0
     266:	2e 21       	and	r18, r14
     268:	3f 21       	and	r19, r15
     26a:	40 23       	and	r20, r16
     26c:	51 23       	and	r21, r17
     26e:	21 15       	cp	r18, r1
     270:	31 05       	cpc	r19, r1
     272:	41 05       	cpc	r20, r1
     274:	51 05       	cpc	r21, r1
     276:	21 f0       	breq	.+8      	; 0x280 <_fpadd_parts+0x10c>
     278:	21 e0       	ldi	r18, 0x01	; 1
     27a:	30 e0       	ldi	r19, 0x00	; 0
     27c:	40 e0       	ldi	r20, 0x00	; 0
     27e:	50 e0       	ldi	r21, 0x00	; 0
     280:	79 01       	movw	r14, r18
     282:	8a 01       	movw	r16, r20
     284:	e6 28       	or	r14, r6
     286:	f7 28       	or	r15, r7
     288:	08 29       	or	r16, r8
     28a:	19 29       	or	r17, r9
     28c:	3c c0       	rjmp	.+120    	; 0x306 <_fpadd_parts+0x192>
     28e:	23 2b       	or	r18, r19
     290:	d1 f1       	breq	.+116    	; 0x306 <_fpadd_parts+0x192>
     292:	26 0e       	add	r2, r22
     294:	37 1e       	adc	r3, r23
     296:	35 01       	movw	r6, r10
     298:	46 01       	movw	r8, r12
     29a:	06 2e       	mov	r0, r22
     29c:	04 c0       	rjmp	.+8      	; 0x2a6 <_fpadd_parts+0x132>
     29e:	96 94       	lsr	r9
     2a0:	87 94       	ror	r8
     2a2:	77 94       	ror	r7
     2a4:	67 94       	ror	r6
     2a6:	0a 94       	dec	r0
     2a8:	d2 f7       	brpl	.-12     	; 0x29e <_fpadd_parts+0x12a>
     2aa:	21 e0       	ldi	r18, 0x01	; 1
     2ac:	30 e0       	ldi	r19, 0x00	; 0
     2ae:	40 e0       	ldi	r20, 0x00	; 0
     2b0:	50 e0       	ldi	r21, 0x00	; 0
     2b2:	04 c0       	rjmp	.+8      	; 0x2bc <_fpadd_parts+0x148>
     2b4:	22 0f       	add	r18, r18
     2b6:	33 1f       	adc	r19, r19
     2b8:	44 1f       	adc	r20, r20
     2ba:	55 1f       	adc	r21, r21
     2bc:	6a 95       	dec	r22
     2be:	d2 f7       	brpl	.-12     	; 0x2b4 <_fpadd_parts+0x140>
     2c0:	21 50       	subi	r18, 0x01	; 1
     2c2:	30 40       	sbci	r19, 0x00	; 0
     2c4:	40 40       	sbci	r20, 0x00	; 0
     2c6:	50 40       	sbci	r21, 0x00	; 0
     2c8:	2a 21       	and	r18, r10
     2ca:	3b 21       	and	r19, r11
     2cc:	4c 21       	and	r20, r12
     2ce:	5d 21       	and	r21, r13
     2d0:	21 15       	cp	r18, r1
     2d2:	31 05       	cpc	r19, r1
     2d4:	41 05       	cpc	r20, r1
     2d6:	51 05       	cpc	r21, r1
     2d8:	21 f0       	breq	.+8      	; 0x2e2 <_fpadd_parts+0x16e>
     2da:	21 e0       	ldi	r18, 0x01	; 1
     2dc:	30 e0       	ldi	r19, 0x00	; 0
     2de:	40 e0       	ldi	r20, 0x00	; 0
     2e0:	50 e0       	ldi	r21, 0x00	; 0
     2e2:	59 01       	movw	r10, r18
     2e4:	6a 01       	movw	r12, r20
     2e6:	a6 28       	or	r10, r6
     2e8:	b7 28       	or	r11, r7
     2ea:	c8 28       	or	r12, r8
     2ec:	d9 28       	or	r13, r9
     2ee:	0b c0       	rjmp	.+22     	; 0x306 <_fpadd_parts+0x192>
     2f0:	82 15       	cp	r24, r2
     2f2:	93 05       	cpc	r25, r3
     2f4:	2c f0       	brlt	.+10     	; 0x300 <_fpadd_parts+0x18c>
     2f6:	1c 01       	movw	r2, r24
     2f8:	aa 24       	eor	r10, r10
     2fa:	bb 24       	eor	r11, r11
     2fc:	65 01       	movw	r12, r10
     2fe:	03 c0       	rjmp	.+6      	; 0x306 <_fpadd_parts+0x192>
     300:	ee 24       	eor	r14, r14
     302:	ff 24       	eor	r15, r15
     304:	87 01       	movw	r16, r14
     306:	11 96       	adiw	r26, 0x01	; 1
     308:	9c 91       	ld	r25, X
     30a:	d2 01       	movw	r26, r4
     30c:	11 96       	adiw	r26, 0x01	; 1
     30e:	8c 91       	ld	r24, X
     310:	98 17       	cp	r25, r24
     312:	09 f4       	brne	.+2      	; 0x316 <_fpadd_parts+0x1a2>
     314:	45 c0       	rjmp	.+138    	; 0x3a0 <_fpadd_parts+0x22c>
     316:	99 23       	and	r25, r25
     318:	39 f0       	breq	.+14     	; 0x328 <_fpadd_parts+0x1b4>
     31a:	a8 01       	movw	r20, r16
     31c:	97 01       	movw	r18, r14
     31e:	2a 19       	sub	r18, r10
     320:	3b 09       	sbc	r19, r11
     322:	4c 09       	sbc	r20, r12
     324:	5d 09       	sbc	r21, r13
     326:	06 c0       	rjmp	.+12     	; 0x334 <_fpadd_parts+0x1c0>
     328:	a6 01       	movw	r20, r12
     32a:	95 01       	movw	r18, r10
     32c:	2e 19       	sub	r18, r14
     32e:	3f 09       	sbc	r19, r15
     330:	40 0b       	sbc	r20, r16
     332:	51 0b       	sbc	r21, r17
     334:	57 fd       	sbrc	r21, 7
     336:	08 c0       	rjmp	.+16     	; 0x348 <_fpadd_parts+0x1d4>
     338:	11 82       	std	Z+1, r1	; 0x01
     33a:	33 82       	std	Z+3, r3	; 0x03
     33c:	22 82       	std	Z+2, r2	; 0x02
     33e:	24 83       	std	Z+4, r18	; 0x04
     340:	35 83       	std	Z+5, r19	; 0x05
     342:	46 83       	std	Z+6, r20	; 0x06
     344:	57 83       	std	Z+7, r21	; 0x07
     346:	1d c0       	rjmp	.+58     	; 0x382 <_fpadd_parts+0x20e>
     348:	81 e0       	ldi	r24, 0x01	; 1
     34a:	81 83       	std	Z+1, r24	; 0x01
     34c:	33 82       	std	Z+3, r3	; 0x03
     34e:	22 82       	std	Z+2, r2	; 0x02
     350:	88 27       	eor	r24, r24
     352:	99 27       	eor	r25, r25
     354:	dc 01       	movw	r26, r24
     356:	82 1b       	sub	r24, r18
     358:	93 0b       	sbc	r25, r19
     35a:	a4 0b       	sbc	r26, r20
     35c:	b5 0b       	sbc	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	0d c0       	rjmp	.+26     	; 0x382 <_fpadd_parts+0x20e>
     368:	22 0f       	add	r18, r18
     36a:	33 1f       	adc	r19, r19
     36c:	44 1f       	adc	r20, r20
     36e:	55 1f       	adc	r21, r21
     370:	24 83       	std	Z+4, r18	; 0x04
     372:	35 83       	std	Z+5, r19	; 0x05
     374:	46 83       	std	Z+6, r20	; 0x06
     376:	57 83       	std	Z+7, r21	; 0x07
     378:	82 81       	ldd	r24, Z+2	; 0x02
     37a:	93 81       	ldd	r25, Z+3	; 0x03
     37c:	01 97       	sbiw	r24, 0x01	; 1
     37e:	93 83       	std	Z+3, r25	; 0x03
     380:	82 83       	std	Z+2, r24	; 0x02
     382:	24 81       	ldd	r18, Z+4	; 0x04
     384:	35 81       	ldd	r19, Z+5	; 0x05
     386:	46 81       	ldd	r20, Z+6	; 0x06
     388:	57 81       	ldd	r21, Z+7	; 0x07
     38a:	da 01       	movw	r26, r20
     38c:	c9 01       	movw	r24, r18
     38e:	01 97       	sbiw	r24, 0x01	; 1
     390:	a1 09       	sbc	r26, r1
     392:	b1 09       	sbc	r27, r1
     394:	8f 5f       	subi	r24, 0xFF	; 255
     396:	9f 4f       	sbci	r25, 0xFF	; 255
     398:	af 4f       	sbci	r26, 0xFF	; 255
     39a:	bf 43       	sbci	r27, 0x3F	; 63
     39c:	28 f3       	brcs	.-54     	; 0x368 <_fpadd_parts+0x1f4>
     39e:	0b c0       	rjmp	.+22     	; 0x3b6 <_fpadd_parts+0x242>
     3a0:	91 83       	std	Z+1, r25	; 0x01
     3a2:	33 82       	std	Z+3, r3	; 0x03
     3a4:	22 82       	std	Z+2, r2	; 0x02
     3a6:	ea 0c       	add	r14, r10
     3a8:	fb 1c       	adc	r15, r11
     3aa:	0c 1d       	adc	r16, r12
     3ac:	1d 1d       	adc	r17, r13
     3ae:	e4 82       	std	Z+4, r14	; 0x04
     3b0:	f5 82       	std	Z+5, r15	; 0x05
     3b2:	06 83       	std	Z+6, r16	; 0x06
     3b4:	17 83       	std	Z+7, r17	; 0x07
     3b6:	83 e0       	ldi	r24, 0x03	; 3
     3b8:	80 83       	st	Z, r24
     3ba:	24 81       	ldd	r18, Z+4	; 0x04
     3bc:	35 81       	ldd	r19, Z+5	; 0x05
     3be:	46 81       	ldd	r20, Z+6	; 0x06
     3c0:	57 81       	ldd	r21, Z+7	; 0x07
     3c2:	57 ff       	sbrs	r21, 7
     3c4:	1a c0       	rjmp	.+52     	; 0x3fa <_fpadd_parts+0x286>
     3c6:	c9 01       	movw	r24, r18
     3c8:	aa 27       	eor	r26, r26
     3ca:	97 fd       	sbrc	r25, 7
     3cc:	a0 95       	com	r26
     3ce:	ba 2f       	mov	r27, r26
     3d0:	81 70       	andi	r24, 0x01	; 1
     3d2:	90 70       	andi	r25, 0x00	; 0
     3d4:	a0 70       	andi	r26, 0x00	; 0
     3d6:	b0 70       	andi	r27, 0x00	; 0
     3d8:	56 95       	lsr	r21
     3da:	47 95       	ror	r20
     3dc:	37 95       	ror	r19
     3de:	27 95       	ror	r18
     3e0:	82 2b       	or	r24, r18
     3e2:	93 2b       	or	r25, r19
     3e4:	a4 2b       	or	r26, r20
     3e6:	b5 2b       	or	r27, r21
     3e8:	84 83       	std	Z+4, r24	; 0x04
     3ea:	95 83       	std	Z+5, r25	; 0x05
     3ec:	a6 83       	std	Z+6, r26	; 0x06
     3ee:	b7 83       	std	Z+7, r27	; 0x07
     3f0:	82 81       	ldd	r24, Z+2	; 0x02
     3f2:	93 81       	ldd	r25, Z+3	; 0x03
     3f4:	01 96       	adiw	r24, 0x01	; 1
     3f6:	93 83       	std	Z+3, r25	; 0x03
     3f8:	82 83       	std	Z+2, r24	; 0x02
     3fa:	df 01       	movw	r26, r30
     3fc:	01 c0       	rjmp	.+2      	; 0x400 <_fpadd_parts+0x28c>
     3fe:	d2 01       	movw	r26, r4
     400:	cd 01       	movw	r24, r26
     402:	cd b7       	in	r28, 0x3d	; 61
     404:	de b7       	in	r29, 0x3e	; 62
     406:	e2 e1       	ldi	r30, 0x12	; 18
     408:	0c 94 b7 14 	jmp	0x296e	; 0x296e <__epilogue_restores__>

0000040c <__subsf3>:
     40c:	a0 e2       	ldi	r26, 0x20	; 32
     40e:	b0 e0       	ldi	r27, 0x00	; 0
     410:	ec e0       	ldi	r30, 0x0C	; 12
     412:	f2 e0       	ldi	r31, 0x02	; 2
     414:	0c 94 a7 14 	jmp	0x294e	; 0x294e <__prologue_saves__+0x18>
     418:	69 83       	std	Y+1, r22	; 0x01
     41a:	7a 83       	std	Y+2, r23	; 0x02
     41c:	8b 83       	std	Y+3, r24	; 0x03
     41e:	9c 83       	std	Y+4, r25	; 0x04
     420:	2d 83       	std	Y+5, r18	; 0x05
     422:	3e 83       	std	Y+6, r19	; 0x06
     424:	4f 83       	std	Y+7, r20	; 0x07
     426:	58 87       	std	Y+8, r21	; 0x08
     428:	e9 e0       	ldi	r30, 0x09	; 9
     42a:	ee 2e       	mov	r14, r30
     42c:	f1 2c       	mov	r15, r1
     42e:	ec 0e       	add	r14, r28
     430:	fd 1e       	adc	r15, r29
     432:	ce 01       	movw	r24, r28
     434:	01 96       	adiw	r24, 0x01	; 1
     436:	b7 01       	movw	r22, r14
     438:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     43c:	8e 01       	movw	r16, r28
     43e:	0f 5e       	subi	r16, 0xEF	; 239
     440:	1f 4f       	sbci	r17, 0xFF	; 255
     442:	ce 01       	movw	r24, r28
     444:	05 96       	adiw	r24, 0x05	; 5
     446:	b8 01       	movw	r22, r16
     448:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     44c:	8a 89       	ldd	r24, Y+18	; 0x12
     44e:	91 e0       	ldi	r25, 0x01	; 1
     450:	89 27       	eor	r24, r25
     452:	8a 8b       	std	Y+18, r24	; 0x12
     454:	c7 01       	movw	r24, r14
     456:	b8 01       	movw	r22, r16
     458:	ae 01       	movw	r20, r28
     45a:	47 5e       	subi	r20, 0xE7	; 231
     45c:	5f 4f       	sbci	r21, 0xFF	; 255
     45e:	0e 94 ba 00 	call	0x174	; 0x174 <_fpadd_parts>
     462:	0e 94 6f 06 	call	0xcde	; 0xcde <__pack_f>
     466:	a0 96       	adiw	r28, 0x20	; 32
     468:	e6 e0       	ldi	r30, 0x06	; 6
     46a:	0c 94 c3 14 	jmp	0x2986	; 0x2986 <__epilogue_restores__+0x18>

0000046e <__addsf3>:
     46e:	a0 e2       	ldi	r26, 0x20	; 32
     470:	b0 e0       	ldi	r27, 0x00	; 0
     472:	ed e3       	ldi	r30, 0x3D	; 61
     474:	f2 e0       	ldi	r31, 0x02	; 2
     476:	0c 94 a7 14 	jmp	0x294e	; 0x294e <__prologue_saves__+0x18>
     47a:	69 83       	std	Y+1, r22	; 0x01
     47c:	7a 83       	std	Y+2, r23	; 0x02
     47e:	8b 83       	std	Y+3, r24	; 0x03
     480:	9c 83       	std	Y+4, r25	; 0x04
     482:	2d 83       	std	Y+5, r18	; 0x05
     484:	3e 83       	std	Y+6, r19	; 0x06
     486:	4f 83       	std	Y+7, r20	; 0x07
     488:	58 87       	std	Y+8, r21	; 0x08
     48a:	f9 e0       	ldi	r31, 0x09	; 9
     48c:	ef 2e       	mov	r14, r31
     48e:	f1 2c       	mov	r15, r1
     490:	ec 0e       	add	r14, r28
     492:	fd 1e       	adc	r15, r29
     494:	ce 01       	movw	r24, r28
     496:	01 96       	adiw	r24, 0x01	; 1
     498:	b7 01       	movw	r22, r14
     49a:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     49e:	8e 01       	movw	r16, r28
     4a0:	0f 5e       	subi	r16, 0xEF	; 239
     4a2:	1f 4f       	sbci	r17, 0xFF	; 255
     4a4:	ce 01       	movw	r24, r28
     4a6:	05 96       	adiw	r24, 0x05	; 5
     4a8:	b8 01       	movw	r22, r16
     4aa:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     4ae:	c7 01       	movw	r24, r14
     4b0:	b8 01       	movw	r22, r16
     4b2:	ae 01       	movw	r20, r28
     4b4:	47 5e       	subi	r20, 0xE7	; 231
     4b6:	5f 4f       	sbci	r21, 0xFF	; 255
     4b8:	0e 94 ba 00 	call	0x174	; 0x174 <_fpadd_parts>
     4bc:	0e 94 6f 06 	call	0xcde	; 0xcde <__pack_f>
     4c0:	a0 96       	adiw	r28, 0x20	; 32
     4c2:	e6 e0       	ldi	r30, 0x06	; 6
     4c4:	0c 94 c3 14 	jmp	0x2986	; 0x2986 <__epilogue_restores__+0x18>

000004c8 <__mulsf3>:
     4c8:	a0 e2       	ldi	r26, 0x20	; 32
     4ca:	b0 e0       	ldi	r27, 0x00	; 0
     4cc:	ea e6       	ldi	r30, 0x6A	; 106
     4ce:	f2 e0       	ldi	r31, 0x02	; 2
     4d0:	0c 94 9b 14 	jmp	0x2936	; 0x2936 <__prologue_saves__>
     4d4:	69 83       	std	Y+1, r22	; 0x01
     4d6:	7a 83       	std	Y+2, r23	; 0x02
     4d8:	8b 83       	std	Y+3, r24	; 0x03
     4da:	9c 83       	std	Y+4, r25	; 0x04
     4dc:	2d 83       	std	Y+5, r18	; 0x05
     4de:	3e 83       	std	Y+6, r19	; 0x06
     4e0:	4f 83       	std	Y+7, r20	; 0x07
     4e2:	58 87       	std	Y+8, r21	; 0x08
     4e4:	ce 01       	movw	r24, r28
     4e6:	01 96       	adiw	r24, 0x01	; 1
     4e8:	be 01       	movw	r22, r28
     4ea:	67 5f       	subi	r22, 0xF7	; 247
     4ec:	7f 4f       	sbci	r23, 0xFF	; 255
     4ee:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     4f2:	ce 01       	movw	r24, r28
     4f4:	05 96       	adiw	r24, 0x05	; 5
     4f6:	be 01       	movw	r22, r28
     4f8:	6f 5e       	subi	r22, 0xEF	; 239
     4fa:	7f 4f       	sbci	r23, 0xFF	; 255
     4fc:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     500:	99 85       	ldd	r25, Y+9	; 0x09
     502:	92 30       	cpi	r25, 0x02	; 2
     504:	88 f0       	brcs	.+34     	; 0x528 <__stack+0x29>
     506:	89 89       	ldd	r24, Y+17	; 0x11
     508:	82 30       	cpi	r24, 0x02	; 2
     50a:	c8 f0       	brcs	.+50     	; 0x53e <__stack+0x3f>
     50c:	94 30       	cpi	r25, 0x04	; 4
     50e:	19 f4       	brne	.+6      	; 0x516 <__stack+0x17>
     510:	82 30       	cpi	r24, 0x02	; 2
     512:	51 f4       	brne	.+20     	; 0x528 <__stack+0x29>
     514:	04 c0       	rjmp	.+8      	; 0x51e <__stack+0x1f>
     516:	84 30       	cpi	r24, 0x04	; 4
     518:	29 f4       	brne	.+10     	; 0x524 <__stack+0x25>
     51a:	92 30       	cpi	r25, 0x02	; 2
     51c:	81 f4       	brne	.+32     	; 0x53e <__stack+0x3f>
     51e:	86 e6       	ldi	r24, 0x66	; 102
     520:	91 e0       	ldi	r25, 0x01	; 1
     522:	c6 c0       	rjmp	.+396    	; 0x6b0 <__stack+0x1b1>
     524:	92 30       	cpi	r25, 0x02	; 2
     526:	49 f4       	brne	.+18     	; 0x53a <__stack+0x3b>
     528:	20 e0       	ldi	r18, 0x00	; 0
     52a:	9a 85       	ldd	r25, Y+10	; 0x0a
     52c:	8a 89       	ldd	r24, Y+18	; 0x12
     52e:	98 13       	cpse	r25, r24
     530:	21 e0       	ldi	r18, 0x01	; 1
     532:	2a 87       	std	Y+10, r18	; 0x0a
     534:	ce 01       	movw	r24, r28
     536:	09 96       	adiw	r24, 0x09	; 9
     538:	bb c0       	rjmp	.+374    	; 0x6b0 <__stack+0x1b1>
     53a:	82 30       	cpi	r24, 0x02	; 2
     53c:	49 f4       	brne	.+18     	; 0x550 <__stack+0x51>
     53e:	20 e0       	ldi	r18, 0x00	; 0
     540:	9a 85       	ldd	r25, Y+10	; 0x0a
     542:	8a 89       	ldd	r24, Y+18	; 0x12
     544:	98 13       	cpse	r25, r24
     546:	21 e0       	ldi	r18, 0x01	; 1
     548:	2a 8b       	std	Y+18, r18	; 0x12
     54a:	ce 01       	movw	r24, r28
     54c:	41 96       	adiw	r24, 0x11	; 17
     54e:	b0 c0       	rjmp	.+352    	; 0x6b0 <__stack+0x1b1>
     550:	2d 84       	ldd	r2, Y+13	; 0x0d
     552:	3e 84       	ldd	r3, Y+14	; 0x0e
     554:	4f 84       	ldd	r4, Y+15	; 0x0f
     556:	58 88       	ldd	r5, Y+16	; 0x10
     558:	6d 88       	ldd	r6, Y+21	; 0x15
     55a:	7e 88       	ldd	r7, Y+22	; 0x16
     55c:	8f 88       	ldd	r8, Y+23	; 0x17
     55e:	98 8c       	ldd	r9, Y+24	; 0x18
     560:	ee 24       	eor	r14, r14
     562:	ff 24       	eor	r15, r15
     564:	87 01       	movw	r16, r14
     566:	aa 24       	eor	r10, r10
     568:	bb 24       	eor	r11, r11
     56a:	65 01       	movw	r12, r10
     56c:	40 e0       	ldi	r20, 0x00	; 0
     56e:	50 e0       	ldi	r21, 0x00	; 0
     570:	60 e0       	ldi	r22, 0x00	; 0
     572:	70 e0       	ldi	r23, 0x00	; 0
     574:	e0 e0       	ldi	r30, 0x00	; 0
     576:	f0 e0       	ldi	r31, 0x00	; 0
     578:	c1 01       	movw	r24, r2
     57a:	81 70       	andi	r24, 0x01	; 1
     57c:	90 70       	andi	r25, 0x00	; 0
     57e:	89 2b       	or	r24, r25
     580:	e9 f0       	breq	.+58     	; 0x5bc <__stack+0xbd>
     582:	e6 0c       	add	r14, r6
     584:	f7 1c       	adc	r15, r7
     586:	08 1d       	adc	r16, r8
     588:	19 1d       	adc	r17, r9
     58a:	9a 01       	movw	r18, r20
     58c:	ab 01       	movw	r20, r22
     58e:	2a 0d       	add	r18, r10
     590:	3b 1d       	adc	r19, r11
     592:	4c 1d       	adc	r20, r12
     594:	5d 1d       	adc	r21, r13
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	a0 e0       	ldi	r26, 0x00	; 0
     59c:	b0 e0       	ldi	r27, 0x00	; 0
     59e:	e6 14       	cp	r14, r6
     5a0:	f7 04       	cpc	r15, r7
     5a2:	08 05       	cpc	r16, r8
     5a4:	19 05       	cpc	r17, r9
     5a6:	20 f4       	brcc	.+8      	; 0x5b0 <__stack+0xb1>
     5a8:	81 e0       	ldi	r24, 0x01	; 1
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	a0 e0       	ldi	r26, 0x00	; 0
     5ae:	b0 e0       	ldi	r27, 0x00	; 0
     5b0:	ba 01       	movw	r22, r20
     5b2:	a9 01       	movw	r20, r18
     5b4:	48 0f       	add	r20, r24
     5b6:	59 1f       	adc	r21, r25
     5b8:	6a 1f       	adc	r22, r26
     5ba:	7b 1f       	adc	r23, r27
     5bc:	aa 0c       	add	r10, r10
     5be:	bb 1c       	adc	r11, r11
     5c0:	cc 1c       	adc	r12, r12
     5c2:	dd 1c       	adc	r13, r13
     5c4:	97 fe       	sbrs	r9, 7
     5c6:	08 c0       	rjmp	.+16     	; 0x5d8 <__stack+0xd9>
     5c8:	81 e0       	ldi	r24, 0x01	; 1
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	a0 e0       	ldi	r26, 0x00	; 0
     5ce:	b0 e0       	ldi	r27, 0x00	; 0
     5d0:	a8 2a       	or	r10, r24
     5d2:	b9 2a       	or	r11, r25
     5d4:	ca 2a       	or	r12, r26
     5d6:	db 2a       	or	r13, r27
     5d8:	31 96       	adiw	r30, 0x01	; 1
     5da:	e0 32       	cpi	r30, 0x20	; 32
     5dc:	f1 05       	cpc	r31, r1
     5de:	49 f0       	breq	.+18     	; 0x5f2 <__stack+0xf3>
     5e0:	66 0c       	add	r6, r6
     5e2:	77 1c       	adc	r7, r7
     5e4:	88 1c       	adc	r8, r8
     5e6:	99 1c       	adc	r9, r9
     5e8:	56 94       	lsr	r5
     5ea:	47 94       	ror	r4
     5ec:	37 94       	ror	r3
     5ee:	27 94       	ror	r2
     5f0:	c3 cf       	rjmp	.-122    	; 0x578 <__stack+0x79>
     5f2:	fa 85       	ldd	r31, Y+10	; 0x0a
     5f4:	ea 89       	ldd	r30, Y+18	; 0x12
     5f6:	2b 89       	ldd	r18, Y+19	; 0x13
     5f8:	3c 89       	ldd	r19, Y+20	; 0x14
     5fa:	8b 85       	ldd	r24, Y+11	; 0x0b
     5fc:	9c 85       	ldd	r25, Y+12	; 0x0c
     5fe:	28 0f       	add	r18, r24
     600:	39 1f       	adc	r19, r25
     602:	2e 5f       	subi	r18, 0xFE	; 254
     604:	3f 4f       	sbci	r19, 0xFF	; 255
     606:	17 c0       	rjmp	.+46     	; 0x636 <__stack+0x137>
     608:	ca 01       	movw	r24, r20
     60a:	81 70       	andi	r24, 0x01	; 1
     60c:	90 70       	andi	r25, 0x00	; 0
     60e:	89 2b       	or	r24, r25
     610:	61 f0       	breq	.+24     	; 0x62a <__stack+0x12b>
     612:	16 95       	lsr	r17
     614:	07 95       	ror	r16
     616:	f7 94       	ror	r15
     618:	e7 94       	ror	r14
     61a:	80 e0       	ldi	r24, 0x00	; 0
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	a0 e0       	ldi	r26, 0x00	; 0
     620:	b0 e8       	ldi	r27, 0x80	; 128
     622:	e8 2a       	or	r14, r24
     624:	f9 2a       	or	r15, r25
     626:	0a 2b       	or	r16, r26
     628:	1b 2b       	or	r17, r27
     62a:	76 95       	lsr	r23
     62c:	67 95       	ror	r22
     62e:	57 95       	ror	r21
     630:	47 95       	ror	r20
     632:	2f 5f       	subi	r18, 0xFF	; 255
     634:	3f 4f       	sbci	r19, 0xFF	; 255
     636:	77 fd       	sbrc	r23, 7
     638:	e7 cf       	rjmp	.-50     	; 0x608 <__stack+0x109>
     63a:	0c c0       	rjmp	.+24     	; 0x654 <__stack+0x155>
     63c:	44 0f       	add	r20, r20
     63e:	55 1f       	adc	r21, r21
     640:	66 1f       	adc	r22, r22
     642:	77 1f       	adc	r23, r23
     644:	17 fd       	sbrc	r17, 7
     646:	41 60       	ori	r20, 0x01	; 1
     648:	ee 0c       	add	r14, r14
     64a:	ff 1c       	adc	r15, r15
     64c:	00 1f       	adc	r16, r16
     64e:	11 1f       	adc	r17, r17
     650:	21 50       	subi	r18, 0x01	; 1
     652:	30 40       	sbci	r19, 0x00	; 0
     654:	40 30       	cpi	r20, 0x00	; 0
     656:	90 e0       	ldi	r25, 0x00	; 0
     658:	59 07       	cpc	r21, r25
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	69 07       	cpc	r22, r25
     65e:	90 e4       	ldi	r25, 0x40	; 64
     660:	79 07       	cpc	r23, r25
     662:	60 f3       	brcs	.-40     	; 0x63c <__stack+0x13d>
     664:	2b 8f       	std	Y+27, r18	; 0x1b
     666:	3c 8f       	std	Y+28, r19	; 0x1c
     668:	db 01       	movw	r26, r22
     66a:	ca 01       	movw	r24, r20
     66c:	8f 77       	andi	r24, 0x7F	; 127
     66e:	90 70       	andi	r25, 0x00	; 0
     670:	a0 70       	andi	r26, 0x00	; 0
     672:	b0 70       	andi	r27, 0x00	; 0
     674:	80 34       	cpi	r24, 0x40	; 64
     676:	91 05       	cpc	r25, r1
     678:	a1 05       	cpc	r26, r1
     67a:	b1 05       	cpc	r27, r1
     67c:	61 f4       	brne	.+24     	; 0x696 <__stack+0x197>
     67e:	47 fd       	sbrc	r20, 7
     680:	0a c0       	rjmp	.+20     	; 0x696 <__stack+0x197>
     682:	e1 14       	cp	r14, r1
     684:	f1 04       	cpc	r15, r1
     686:	01 05       	cpc	r16, r1
     688:	11 05       	cpc	r17, r1
     68a:	29 f0       	breq	.+10     	; 0x696 <__stack+0x197>
     68c:	40 5c       	subi	r20, 0xC0	; 192
     68e:	5f 4f       	sbci	r21, 0xFF	; 255
     690:	6f 4f       	sbci	r22, 0xFF	; 255
     692:	7f 4f       	sbci	r23, 0xFF	; 255
     694:	40 78       	andi	r20, 0x80	; 128
     696:	1a 8e       	std	Y+26, r1	; 0x1a
     698:	fe 17       	cp	r31, r30
     69a:	11 f0       	breq	.+4      	; 0x6a0 <__stack+0x1a1>
     69c:	81 e0       	ldi	r24, 0x01	; 1
     69e:	8a 8f       	std	Y+26, r24	; 0x1a
     6a0:	4d 8f       	std	Y+29, r20	; 0x1d
     6a2:	5e 8f       	std	Y+30, r21	; 0x1e
     6a4:	6f 8f       	std	Y+31, r22	; 0x1f
     6a6:	78 a3       	std	Y+32, r23	; 0x20
     6a8:	83 e0       	ldi	r24, 0x03	; 3
     6aa:	89 8f       	std	Y+25, r24	; 0x19
     6ac:	ce 01       	movw	r24, r28
     6ae:	49 96       	adiw	r24, 0x19	; 25
     6b0:	0e 94 6f 06 	call	0xcde	; 0xcde <__pack_f>
     6b4:	a0 96       	adiw	r28, 0x20	; 32
     6b6:	e2 e1       	ldi	r30, 0x12	; 18
     6b8:	0c 94 b7 14 	jmp	0x296e	; 0x296e <__epilogue_restores__>

000006bc <__divsf3>:
     6bc:	a8 e1       	ldi	r26, 0x18	; 24
     6be:	b0 e0       	ldi	r27, 0x00	; 0
     6c0:	e4 e6       	ldi	r30, 0x64	; 100
     6c2:	f3 e0       	ldi	r31, 0x03	; 3
     6c4:	0c 94 a3 14 	jmp	0x2946	; 0x2946 <__prologue_saves__+0x10>
     6c8:	69 83       	std	Y+1, r22	; 0x01
     6ca:	7a 83       	std	Y+2, r23	; 0x02
     6cc:	8b 83       	std	Y+3, r24	; 0x03
     6ce:	9c 83       	std	Y+4, r25	; 0x04
     6d0:	2d 83       	std	Y+5, r18	; 0x05
     6d2:	3e 83       	std	Y+6, r19	; 0x06
     6d4:	4f 83       	std	Y+7, r20	; 0x07
     6d6:	58 87       	std	Y+8, r21	; 0x08
     6d8:	b9 e0       	ldi	r27, 0x09	; 9
     6da:	eb 2e       	mov	r14, r27
     6dc:	f1 2c       	mov	r15, r1
     6de:	ec 0e       	add	r14, r28
     6e0:	fd 1e       	adc	r15, r29
     6e2:	ce 01       	movw	r24, r28
     6e4:	01 96       	adiw	r24, 0x01	; 1
     6e6:	b7 01       	movw	r22, r14
     6e8:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     6ec:	8e 01       	movw	r16, r28
     6ee:	0f 5e       	subi	r16, 0xEF	; 239
     6f0:	1f 4f       	sbci	r17, 0xFF	; 255
     6f2:	ce 01       	movw	r24, r28
     6f4:	05 96       	adiw	r24, 0x05	; 5
     6f6:	b8 01       	movw	r22, r16
     6f8:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     6fc:	29 85       	ldd	r18, Y+9	; 0x09
     6fe:	22 30       	cpi	r18, 0x02	; 2
     700:	08 f4       	brcc	.+2      	; 0x704 <__divsf3+0x48>
     702:	7e c0       	rjmp	.+252    	; 0x800 <__divsf3+0x144>
     704:	39 89       	ldd	r19, Y+17	; 0x11
     706:	32 30       	cpi	r19, 0x02	; 2
     708:	10 f4       	brcc	.+4      	; 0x70e <__divsf3+0x52>
     70a:	b8 01       	movw	r22, r16
     70c:	7c c0       	rjmp	.+248    	; 0x806 <__divsf3+0x14a>
     70e:	8a 85       	ldd	r24, Y+10	; 0x0a
     710:	9a 89       	ldd	r25, Y+18	; 0x12
     712:	89 27       	eor	r24, r25
     714:	8a 87       	std	Y+10, r24	; 0x0a
     716:	24 30       	cpi	r18, 0x04	; 4
     718:	11 f0       	breq	.+4      	; 0x71e <__divsf3+0x62>
     71a:	22 30       	cpi	r18, 0x02	; 2
     71c:	31 f4       	brne	.+12     	; 0x72a <__divsf3+0x6e>
     71e:	23 17       	cp	r18, r19
     720:	09 f0       	breq	.+2      	; 0x724 <__divsf3+0x68>
     722:	6e c0       	rjmp	.+220    	; 0x800 <__divsf3+0x144>
     724:	66 e6       	ldi	r22, 0x66	; 102
     726:	71 e0       	ldi	r23, 0x01	; 1
     728:	6e c0       	rjmp	.+220    	; 0x806 <__divsf3+0x14a>
     72a:	34 30       	cpi	r19, 0x04	; 4
     72c:	39 f4       	brne	.+14     	; 0x73c <__divsf3+0x80>
     72e:	1d 86       	std	Y+13, r1	; 0x0d
     730:	1e 86       	std	Y+14, r1	; 0x0e
     732:	1f 86       	std	Y+15, r1	; 0x0f
     734:	18 8a       	std	Y+16, r1	; 0x10
     736:	1c 86       	std	Y+12, r1	; 0x0c
     738:	1b 86       	std	Y+11, r1	; 0x0b
     73a:	04 c0       	rjmp	.+8      	; 0x744 <__divsf3+0x88>
     73c:	32 30       	cpi	r19, 0x02	; 2
     73e:	21 f4       	brne	.+8      	; 0x748 <__divsf3+0x8c>
     740:	84 e0       	ldi	r24, 0x04	; 4
     742:	89 87       	std	Y+9, r24	; 0x09
     744:	b7 01       	movw	r22, r14
     746:	5f c0       	rjmp	.+190    	; 0x806 <__divsf3+0x14a>
     748:	2b 85       	ldd	r18, Y+11	; 0x0b
     74a:	3c 85       	ldd	r19, Y+12	; 0x0c
     74c:	8b 89       	ldd	r24, Y+19	; 0x13
     74e:	9c 89       	ldd	r25, Y+20	; 0x14
     750:	28 1b       	sub	r18, r24
     752:	39 0b       	sbc	r19, r25
     754:	3c 87       	std	Y+12, r19	; 0x0c
     756:	2b 87       	std	Y+11, r18	; 0x0b
     758:	ed 84       	ldd	r14, Y+13	; 0x0d
     75a:	fe 84       	ldd	r15, Y+14	; 0x0e
     75c:	0f 85       	ldd	r16, Y+15	; 0x0f
     75e:	18 89       	ldd	r17, Y+16	; 0x10
     760:	ad 88       	ldd	r10, Y+21	; 0x15
     762:	be 88       	ldd	r11, Y+22	; 0x16
     764:	cf 88       	ldd	r12, Y+23	; 0x17
     766:	d8 8c       	ldd	r13, Y+24	; 0x18
     768:	ea 14       	cp	r14, r10
     76a:	fb 04       	cpc	r15, r11
     76c:	0c 05       	cpc	r16, r12
     76e:	1d 05       	cpc	r17, r13
     770:	40 f4       	brcc	.+16     	; 0x782 <__divsf3+0xc6>
     772:	ee 0c       	add	r14, r14
     774:	ff 1c       	adc	r15, r15
     776:	00 1f       	adc	r16, r16
     778:	11 1f       	adc	r17, r17
     77a:	21 50       	subi	r18, 0x01	; 1
     77c:	30 40       	sbci	r19, 0x00	; 0
     77e:	3c 87       	std	Y+12, r19	; 0x0c
     780:	2b 87       	std	Y+11, r18	; 0x0b
     782:	20 e0       	ldi	r18, 0x00	; 0
     784:	30 e0       	ldi	r19, 0x00	; 0
     786:	40 e0       	ldi	r20, 0x00	; 0
     788:	50 e0       	ldi	r21, 0x00	; 0
     78a:	80 e0       	ldi	r24, 0x00	; 0
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	a0 e0       	ldi	r26, 0x00	; 0
     790:	b0 e4       	ldi	r27, 0x40	; 64
     792:	60 e0       	ldi	r22, 0x00	; 0
     794:	70 e0       	ldi	r23, 0x00	; 0
     796:	ea 14       	cp	r14, r10
     798:	fb 04       	cpc	r15, r11
     79a:	0c 05       	cpc	r16, r12
     79c:	1d 05       	cpc	r17, r13
     79e:	40 f0       	brcs	.+16     	; 0x7b0 <__divsf3+0xf4>
     7a0:	28 2b       	or	r18, r24
     7a2:	39 2b       	or	r19, r25
     7a4:	4a 2b       	or	r20, r26
     7a6:	5b 2b       	or	r21, r27
     7a8:	ea 18       	sub	r14, r10
     7aa:	fb 08       	sbc	r15, r11
     7ac:	0c 09       	sbc	r16, r12
     7ae:	1d 09       	sbc	r17, r13
     7b0:	b6 95       	lsr	r27
     7b2:	a7 95       	ror	r26
     7b4:	97 95       	ror	r25
     7b6:	87 95       	ror	r24
     7b8:	ee 0c       	add	r14, r14
     7ba:	ff 1c       	adc	r15, r15
     7bc:	00 1f       	adc	r16, r16
     7be:	11 1f       	adc	r17, r17
     7c0:	6f 5f       	subi	r22, 0xFF	; 255
     7c2:	7f 4f       	sbci	r23, 0xFF	; 255
     7c4:	6f 31       	cpi	r22, 0x1F	; 31
     7c6:	71 05       	cpc	r23, r1
     7c8:	31 f7       	brne	.-52     	; 0x796 <__divsf3+0xda>
     7ca:	da 01       	movw	r26, r20
     7cc:	c9 01       	movw	r24, r18
     7ce:	8f 77       	andi	r24, 0x7F	; 127
     7d0:	90 70       	andi	r25, 0x00	; 0
     7d2:	a0 70       	andi	r26, 0x00	; 0
     7d4:	b0 70       	andi	r27, 0x00	; 0
     7d6:	80 34       	cpi	r24, 0x40	; 64
     7d8:	91 05       	cpc	r25, r1
     7da:	a1 05       	cpc	r26, r1
     7dc:	b1 05       	cpc	r27, r1
     7de:	61 f4       	brne	.+24     	; 0x7f8 <__divsf3+0x13c>
     7e0:	27 fd       	sbrc	r18, 7
     7e2:	0a c0       	rjmp	.+20     	; 0x7f8 <__divsf3+0x13c>
     7e4:	e1 14       	cp	r14, r1
     7e6:	f1 04       	cpc	r15, r1
     7e8:	01 05       	cpc	r16, r1
     7ea:	11 05       	cpc	r17, r1
     7ec:	29 f0       	breq	.+10     	; 0x7f8 <__divsf3+0x13c>
     7ee:	20 5c       	subi	r18, 0xC0	; 192
     7f0:	3f 4f       	sbci	r19, 0xFF	; 255
     7f2:	4f 4f       	sbci	r20, 0xFF	; 255
     7f4:	5f 4f       	sbci	r21, 0xFF	; 255
     7f6:	20 78       	andi	r18, 0x80	; 128
     7f8:	2d 87       	std	Y+13, r18	; 0x0d
     7fa:	3e 87       	std	Y+14, r19	; 0x0e
     7fc:	4f 87       	std	Y+15, r20	; 0x0f
     7fe:	58 8b       	std	Y+16, r21	; 0x10
     800:	be 01       	movw	r22, r28
     802:	67 5f       	subi	r22, 0xF7	; 247
     804:	7f 4f       	sbci	r23, 0xFF	; 255
     806:	cb 01       	movw	r24, r22
     808:	0e 94 6f 06 	call	0xcde	; 0xcde <__pack_f>
     80c:	68 96       	adiw	r28, 0x18	; 24
     80e:	ea e0       	ldi	r30, 0x0A	; 10
     810:	0c 94 bf 14 	jmp	0x297e	; 0x297e <__epilogue_restores__+0x10>

00000814 <__gtsf2>:
     814:	a8 e1       	ldi	r26, 0x18	; 24
     816:	b0 e0       	ldi	r27, 0x00	; 0
     818:	e0 e1       	ldi	r30, 0x10	; 16
     81a:	f4 e0       	ldi	r31, 0x04	; 4
     81c:	0c 94 a7 14 	jmp	0x294e	; 0x294e <__prologue_saves__+0x18>
     820:	69 83       	std	Y+1, r22	; 0x01
     822:	7a 83       	std	Y+2, r23	; 0x02
     824:	8b 83       	std	Y+3, r24	; 0x03
     826:	9c 83       	std	Y+4, r25	; 0x04
     828:	2d 83       	std	Y+5, r18	; 0x05
     82a:	3e 83       	std	Y+6, r19	; 0x06
     82c:	4f 83       	std	Y+7, r20	; 0x07
     82e:	58 87       	std	Y+8, r21	; 0x08
     830:	89 e0       	ldi	r24, 0x09	; 9
     832:	e8 2e       	mov	r14, r24
     834:	f1 2c       	mov	r15, r1
     836:	ec 0e       	add	r14, r28
     838:	fd 1e       	adc	r15, r29
     83a:	ce 01       	movw	r24, r28
     83c:	01 96       	adiw	r24, 0x01	; 1
     83e:	b7 01       	movw	r22, r14
     840:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     844:	8e 01       	movw	r16, r28
     846:	0f 5e       	subi	r16, 0xEF	; 239
     848:	1f 4f       	sbci	r17, 0xFF	; 255
     84a:	ce 01       	movw	r24, r28
     84c:	05 96       	adiw	r24, 0x05	; 5
     84e:	b8 01       	movw	r22, r16
     850:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     854:	89 85       	ldd	r24, Y+9	; 0x09
     856:	82 30       	cpi	r24, 0x02	; 2
     858:	40 f0       	brcs	.+16     	; 0x86a <__gtsf2+0x56>
     85a:	89 89       	ldd	r24, Y+17	; 0x11
     85c:	82 30       	cpi	r24, 0x02	; 2
     85e:	28 f0       	brcs	.+10     	; 0x86a <__gtsf2+0x56>
     860:	c7 01       	movw	r24, r14
     862:	b8 01       	movw	r22, r16
     864:	0e 94 bc 07 	call	0xf78	; 0xf78 <__fpcmp_parts_f>
     868:	01 c0       	rjmp	.+2      	; 0x86c <__gtsf2+0x58>
     86a:	8f ef       	ldi	r24, 0xFF	; 255
     86c:	68 96       	adiw	r28, 0x18	; 24
     86e:	e6 e0       	ldi	r30, 0x06	; 6
     870:	0c 94 c3 14 	jmp	0x2986	; 0x2986 <__epilogue_restores__+0x18>

00000874 <__gesf2>:
     874:	a8 e1       	ldi	r26, 0x18	; 24
     876:	b0 e0       	ldi	r27, 0x00	; 0
     878:	e0 e4       	ldi	r30, 0x40	; 64
     87a:	f4 e0       	ldi	r31, 0x04	; 4
     87c:	0c 94 a7 14 	jmp	0x294e	; 0x294e <__prologue_saves__+0x18>
     880:	69 83       	std	Y+1, r22	; 0x01
     882:	7a 83       	std	Y+2, r23	; 0x02
     884:	8b 83       	std	Y+3, r24	; 0x03
     886:	9c 83       	std	Y+4, r25	; 0x04
     888:	2d 83       	std	Y+5, r18	; 0x05
     88a:	3e 83       	std	Y+6, r19	; 0x06
     88c:	4f 83       	std	Y+7, r20	; 0x07
     88e:	58 87       	std	Y+8, r21	; 0x08
     890:	89 e0       	ldi	r24, 0x09	; 9
     892:	e8 2e       	mov	r14, r24
     894:	f1 2c       	mov	r15, r1
     896:	ec 0e       	add	r14, r28
     898:	fd 1e       	adc	r15, r29
     89a:	ce 01       	movw	r24, r28
     89c:	01 96       	adiw	r24, 0x01	; 1
     89e:	b7 01       	movw	r22, r14
     8a0:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     8a4:	8e 01       	movw	r16, r28
     8a6:	0f 5e       	subi	r16, 0xEF	; 239
     8a8:	1f 4f       	sbci	r17, 0xFF	; 255
     8aa:	ce 01       	movw	r24, r28
     8ac:	05 96       	adiw	r24, 0x05	; 5
     8ae:	b8 01       	movw	r22, r16
     8b0:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     8b4:	89 85       	ldd	r24, Y+9	; 0x09
     8b6:	82 30       	cpi	r24, 0x02	; 2
     8b8:	40 f0       	brcs	.+16     	; 0x8ca <__gesf2+0x56>
     8ba:	89 89       	ldd	r24, Y+17	; 0x11
     8bc:	82 30       	cpi	r24, 0x02	; 2
     8be:	28 f0       	brcs	.+10     	; 0x8ca <__gesf2+0x56>
     8c0:	c7 01       	movw	r24, r14
     8c2:	b8 01       	movw	r22, r16
     8c4:	0e 94 bc 07 	call	0xf78	; 0xf78 <__fpcmp_parts_f>
     8c8:	01 c0       	rjmp	.+2      	; 0x8cc <__gesf2+0x58>
     8ca:	8f ef       	ldi	r24, 0xFF	; 255
     8cc:	68 96       	adiw	r28, 0x18	; 24
     8ce:	e6 e0       	ldi	r30, 0x06	; 6
     8d0:	0c 94 c3 14 	jmp	0x2986	; 0x2986 <__epilogue_restores__+0x18>

000008d4 <__ltsf2>:
     8d4:	a8 e1       	ldi	r26, 0x18	; 24
     8d6:	b0 e0       	ldi	r27, 0x00	; 0
     8d8:	e0 e7       	ldi	r30, 0x70	; 112
     8da:	f4 e0       	ldi	r31, 0x04	; 4
     8dc:	0c 94 a7 14 	jmp	0x294e	; 0x294e <__prologue_saves__+0x18>
     8e0:	69 83       	std	Y+1, r22	; 0x01
     8e2:	7a 83       	std	Y+2, r23	; 0x02
     8e4:	8b 83       	std	Y+3, r24	; 0x03
     8e6:	9c 83       	std	Y+4, r25	; 0x04
     8e8:	2d 83       	std	Y+5, r18	; 0x05
     8ea:	3e 83       	std	Y+6, r19	; 0x06
     8ec:	4f 83       	std	Y+7, r20	; 0x07
     8ee:	58 87       	std	Y+8, r21	; 0x08
     8f0:	89 e0       	ldi	r24, 0x09	; 9
     8f2:	e8 2e       	mov	r14, r24
     8f4:	f1 2c       	mov	r15, r1
     8f6:	ec 0e       	add	r14, r28
     8f8:	fd 1e       	adc	r15, r29
     8fa:	ce 01       	movw	r24, r28
     8fc:	01 96       	adiw	r24, 0x01	; 1
     8fe:	b7 01       	movw	r22, r14
     900:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     904:	8e 01       	movw	r16, r28
     906:	0f 5e       	subi	r16, 0xEF	; 239
     908:	1f 4f       	sbci	r17, 0xFF	; 255
     90a:	ce 01       	movw	r24, r28
     90c:	05 96       	adiw	r24, 0x05	; 5
     90e:	b8 01       	movw	r22, r16
     910:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     914:	89 85       	ldd	r24, Y+9	; 0x09
     916:	82 30       	cpi	r24, 0x02	; 2
     918:	40 f0       	brcs	.+16     	; 0x92a <__ltsf2+0x56>
     91a:	89 89       	ldd	r24, Y+17	; 0x11
     91c:	82 30       	cpi	r24, 0x02	; 2
     91e:	28 f0       	brcs	.+10     	; 0x92a <__ltsf2+0x56>
     920:	c7 01       	movw	r24, r14
     922:	b8 01       	movw	r22, r16
     924:	0e 94 bc 07 	call	0xf78	; 0xf78 <__fpcmp_parts_f>
     928:	01 c0       	rjmp	.+2      	; 0x92c <__ltsf2+0x58>
     92a:	81 e0       	ldi	r24, 0x01	; 1
     92c:	68 96       	adiw	r28, 0x18	; 24
     92e:	e6 e0       	ldi	r30, 0x06	; 6
     930:	0c 94 c3 14 	jmp	0x2986	; 0x2986 <__epilogue_restores__+0x18>

00000934 <__lesf2>:
     934:	a8 e1       	ldi	r26, 0x18	; 24
     936:	b0 e0       	ldi	r27, 0x00	; 0
     938:	e0 ea       	ldi	r30, 0xA0	; 160
     93a:	f4 e0       	ldi	r31, 0x04	; 4
     93c:	0c 94 a7 14 	jmp	0x294e	; 0x294e <__prologue_saves__+0x18>
     940:	69 83       	std	Y+1, r22	; 0x01
     942:	7a 83       	std	Y+2, r23	; 0x02
     944:	8b 83       	std	Y+3, r24	; 0x03
     946:	9c 83       	std	Y+4, r25	; 0x04
     948:	2d 83       	std	Y+5, r18	; 0x05
     94a:	3e 83       	std	Y+6, r19	; 0x06
     94c:	4f 83       	std	Y+7, r20	; 0x07
     94e:	58 87       	std	Y+8, r21	; 0x08
     950:	89 e0       	ldi	r24, 0x09	; 9
     952:	e8 2e       	mov	r14, r24
     954:	f1 2c       	mov	r15, r1
     956:	ec 0e       	add	r14, r28
     958:	fd 1e       	adc	r15, r29
     95a:	ce 01       	movw	r24, r28
     95c:	01 96       	adiw	r24, 0x01	; 1
     95e:	b7 01       	movw	r22, r14
     960:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     964:	8e 01       	movw	r16, r28
     966:	0f 5e       	subi	r16, 0xEF	; 239
     968:	1f 4f       	sbci	r17, 0xFF	; 255
     96a:	ce 01       	movw	r24, r28
     96c:	05 96       	adiw	r24, 0x05	; 5
     96e:	b8 01       	movw	r22, r16
     970:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     974:	89 85       	ldd	r24, Y+9	; 0x09
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	40 f0       	brcs	.+16     	; 0x98a <__lesf2+0x56>
     97a:	89 89       	ldd	r24, Y+17	; 0x11
     97c:	82 30       	cpi	r24, 0x02	; 2
     97e:	28 f0       	brcs	.+10     	; 0x98a <__lesf2+0x56>
     980:	c7 01       	movw	r24, r14
     982:	b8 01       	movw	r22, r16
     984:	0e 94 bc 07 	call	0xf78	; 0xf78 <__fpcmp_parts_f>
     988:	01 c0       	rjmp	.+2      	; 0x98c <__lesf2+0x58>
     98a:	81 e0       	ldi	r24, 0x01	; 1
     98c:	68 96       	adiw	r28, 0x18	; 24
     98e:	e6 e0       	ldi	r30, 0x06	; 6
     990:	0c 94 c3 14 	jmp	0x2986	; 0x2986 <__epilogue_restores__+0x18>

00000994 <__unordsf2>:
     994:	a8 e1       	ldi	r26, 0x18	; 24
     996:	b0 e0       	ldi	r27, 0x00	; 0
     998:	e0 ed       	ldi	r30, 0xD0	; 208
     99a:	f4 e0       	ldi	r31, 0x04	; 4
     99c:	0c 94 ab 14 	jmp	0x2956	; 0x2956 <__prologue_saves__+0x20>
     9a0:	69 83       	std	Y+1, r22	; 0x01
     9a2:	7a 83       	std	Y+2, r23	; 0x02
     9a4:	8b 83       	std	Y+3, r24	; 0x03
     9a6:	9c 83       	std	Y+4, r25	; 0x04
     9a8:	2d 83       	std	Y+5, r18	; 0x05
     9aa:	3e 83       	std	Y+6, r19	; 0x06
     9ac:	4f 83       	std	Y+7, r20	; 0x07
     9ae:	58 87       	std	Y+8, r21	; 0x08
     9b0:	ce 01       	movw	r24, r28
     9b2:	01 96       	adiw	r24, 0x01	; 1
     9b4:	be 01       	movw	r22, r28
     9b6:	67 5f       	subi	r22, 0xF7	; 247
     9b8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ba:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     9be:	ce 01       	movw	r24, r28
     9c0:	05 96       	adiw	r24, 0x05	; 5
     9c2:	be 01       	movw	r22, r28
     9c4:	6f 5e       	subi	r22, 0xEF	; 239
     9c6:	7f 4f       	sbci	r23, 0xFF	; 255
     9c8:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     9cc:	89 85       	ldd	r24, Y+9	; 0x09
     9ce:	82 30       	cpi	r24, 0x02	; 2
     9d0:	28 f0       	brcs	.+10     	; 0x9dc <__unordsf2+0x48>
     9d2:	20 e0       	ldi	r18, 0x00	; 0
     9d4:	30 e0       	ldi	r19, 0x00	; 0
     9d6:	89 89       	ldd	r24, Y+17	; 0x11
     9d8:	82 30       	cpi	r24, 0x02	; 2
     9da:	10 f4       	brcc	.+4      	; 0x9e0 <__unordsf2+0x4c>
     9dc:	21 e0       	ldi	r18, 0x01	; 1
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	82 2f       	mov	r24, r18
     9e2:	68 96       	adiw	r28, 0x18	; 24
     9e4:	e2 e0       	ldi	r30, 0x02	; 2
     9e6:	0c 94 c7 14 	jmp	0x298e	; 0x298e <__epilogue_restores__+0x20>

000009ea <__floatsisf>:
     9ea:	a8 e0       	ldi	r26, 0x08	; 8
     9ec:	b0 e0       	ldi	r27, 0x00	; 0
     9ee:	eb ef       	ldi	r30, 0xFB	; 251
     9f0:	f4 e0       	ldi	r31, 0x04	; 4
     9f2:	0c 94 a4 14 	jmp	0x2948	; 0x2948 <__prologue_saves__+0x12>
     9f6:	9b 01       	movw	r18, r22
     9f8:	ac 01       	movw	r20, r24
     9fa:	83 e0       	ldi	r24, 0x03	; 3
     9fc:	89 83       	std	Y+1, r24	; 0x01
     9fe:	da 01       	movw	r26, r20
     a00:	c9 01       	movw	r24, r18
     a02:	88 27       	eor	r24, r24
     a04:	b7 fd       	sbrc	r27, 7
     a06:	83 95       	inc	r24
     a08:	99 27       	eor	r25, r25
     a0a:	aa 27       	eor	r26, r26
     a0c:	bb 27       	eor	r27, r27
     a0e:	b8 2e       	mov	r11, r24
     a10:	21 15       	cp	r18, r1
     a12:	31 05       	cpc	r19, r1
     a14:	41 05       	cpc	r20, r1
     a16:	51 05       	cpc	r21, r1
     a18:	19 f4       	brne	.+6      	; 0xa20 <__floatsisf+0x36>
     a1a:	82 e0       	ldi	r24, 0x02	; 2
     a1c:	89 83       	std	Y+1, r24	; 0x01
     a1e:	3a c0       	rjmp	.+116    	; 0xa94 <__floatsisf+0xaa>
     a20:	88 23       	and	r24, r24
     a22:	a9 f0       	breq	.+42     	; 0xa4e <__floatsisf+0x64>
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e8       	ldi	r24, 0x80	; 128
     a30:	58 07       	cpc	r21, r24
     a32:	29 f4       	brne	.+10     	; 0xa3e <__floatsisf+0x54>
     a34:	60 e0       	ldi	r22, 0x00	; 0
     a36:	70 e0       	ldi	r23, 0x00	; 0
     a38:	80 e0       	ldi	r24, 0x00	; 0
     a3a:	9f ec       	ldi	r25, 0xCF	; 207
     a3c:	30 c0       	rjmp	.+96     	; 0xa9e <__floatsisf+0xb4>
     a3e:	ee 24       	eor	r14, r14
     a40:	ff 24       	eor	r15, r15
     a42:	87 01       	movw	r16, r14
     a44:	e2 1a       	sub	r14, r18
     a46:	f3 0a       	sbc	r15, r19
     a48:	04 0b       	sbc	r16, r20
     a4a:	15 0b       	sbc	r17, r21
     a4c:	02 c0       	rjmp	.+4      	; 0xa52 <__floatsisf+0x68>
     a4e:	79 01       	movw	r14, r18
     a50:	8a 01       	movw	r16, r20
     a52:	8e e1       	ldi	r24, 0x1E	; 30
     a54:	c8 2e       	mov	r12, r24
     a56:	d1 2c       	mov	r13, r1
     a58:	dc 82       	std	Y+4, r13	; 0x04
     a5a:	cb 82       	std	Y+3, r12	; 0x03
     a5c:	ed 82       	std	Y+5, r14	; 0x05
     a5e:	fe 82       	std	Y+6, r15	; 0x06
     a60:	0f 83       	std	Y+7, r16	; 0x07
     a62:	18 87       	std	Y+8, r17	; 0x08
     a64:	c8 01       	movw	r24, r16
     a66:	b7 01       	movw	r22, r14
     a68:	0e 94 20 06 	call	0xc40	; 0xc40 <__clzsi2>
     a6c:	01 97       	sbiw	r24, 0x01	; 1
     a6e:	18 16       	cp	r1, r24
     a70:	19 06       	cpc	r1, r25
     a72:	84 f4       	brge	.+32     	; 0xa94 <__floatsisf+0xaa>
     a74:	08 2e       	mov	r0, r24
     a76:	04 c0       	rjmp	.+8      	; 0xa80 <__floatsisf+0x96>
     a78:	ee 0c       	add	r14, r14
     a7a:	ff 1c       	adc	r15, r15
     a7c:	00 1f       	adc	r16, r16
     a7e:	11 1f       	adc	r17, r17
     a80:	0a 94       	dec	r0
     a82:	d2 f7       	brpl	.-12     	; 0xa78 <__floatsisf+0x8e>
     a84:	ed 82       	std	Y+5, r14	; 0x05
     a86:	fe 82       	std	Y+6, r15	; 0x06
     a88:	0f 83       	std	Y+7, r16	; 0x07
     a8a:	18 87       	std	Y+8, r17	; 0x08
     a8c:	c8 1a       	sub	r12, r24
     a8e:	d9 0a       	sbc	r13, r25
     a90:	dc 82       	std	Y+4, r13	; 0x04
     a92:	cb 82       	std	Y+3, r12	; 0x03
     a94:	ba 82       	std	Y+2, r11	; 0x02
     a96:	ce 01       	movw	r24, r28
     a98:	01 96       	adiw	r24, 0x01	; 1
     a9a:	0e 94 6f 06 	call	0xcde	; 0xcde <__pack_f>
     a9e:	28 96       	adiw	r28, 0x08	; 8
     aa0:	e9 e0       	ldi	r30, 0x09	; 9
     aa2:	0c 94 c0 14 	jmp	0x2980	; 0x2980 <__epilogue_restores__+0x12>

00000aa6 <__fixsfsi>:
     aa6:	ac e0       	ldi	r26, 0x0C	; 12
     aa8:	b0 e0       	ldi	r27, 0x00	; 0
     aaa:	e9 e5       	ldi	r30, 0x59	; 89
     aac:	f5 e0       	ldi	r31, 0x05	; 5
     aae:	0c 94 ab 14 	jmp	0x2956	; 0x2956 <__prologue_saves__+0x20>
     ab2:	69 83       	std	Y+1, r22	; 0x01
     ab4:	7a 83       	std	Y+2, r23	; 0x02
     ab6:	8b 83       	std	Y+3, r24	; 0x03
     ab8:	9c 83       	std	Y+4, r25	; 0x04
     aba:	ce 01       	movw	r24, r28
     abc:	01 96       	adiw	r24, 0x01	; 1
     abe:	be 01       	movw	r22, r28
     ac0:	6b 5f       	subi	r22, 0xFB	; 251
     ac2:	7f 4f       	sbci	r23, 0xFF	; 255
     ac4:	0e 94 44 07 	call	0xe88	; 0xe88 <__unpack_f>
     ac8:	8d 81       	ldd	r24, Y+5	; 0x05
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	61 f1       	breq	.+88     	; 0xb26 <__fixsfsi+0x80>
     ace:	82 30       	cpi	r24, 0x02	; 2
     ad0:	50 f1       	brcs	.+84     	; 0xb26 <__fixsfsi+0x80>
     ad2:	84 30       	cpi	r24, 0x04	; 4
     ad4:	21 f4       	brne	.+8      	; 0xade <__fixsfsi+0x38>
     ad6:	8e 81       	ldd	r24, Y+6	; 0x06
     ad8:	88 23       	and	r24, r24
     ada:	51 f1       	breq	.+84     	; 0xb30 <__fixsfsi+0x8a>
     adc:	2e c0       	rjmp	.+92     	; 0xb3a <__fixsfsi+0x94>
     ade:	2f 81       	ldd	r18, Y+7	; 0x07
     ae0:	38 85       	ldd	r19, Y+8	; 0x08
     ae2:	37 fd       	sbrc	r19, 7
     ae4:	20 c0       	rjmp	.+64     	; 0xb26 <__fixsfsi+0x80>
     ae6:	6e 81       	ldd	r22, Y+6	; 0x06
     ae8:	2f 31       	cpi	r18, 0x1F	; 31
     aea:	31 05       	cpc	r19, r1
     aec:	1c f0       	brlt	.+6      	; 0xaf4 <__fixsfsi+0x4e>
     aee:	66 23       	and	r22, r22
     af0:	f9 f0       	breq	.+62     	; 0xb30 <__fixsfsi+0x8a>
     af2:	23 c0       	rjmp	.+70     	; 0xb3a <__fixsfsi+0x94>
     af4:	8e e1       	ldi	r24, 0x1E	; 30
     af6:	90 e0       	ldi	r25, 0x00	; 0
     af8:	82 1b       	sub	r24, r18
     afa:	93 0b       	sbc	r25, r19
     afc:	29 85       	ldd	r18, Y+9	; 0x09
     afe:	3a 85       	ldd	r19, Y+10	; 0x0a
     b00:	4b 85       	ldd	r20, Y+11	; 0x0b
     b02:	5c 85       	ldd	r21, Y+12	; 0x0c
     b04:	04 c0       	rjmp	.+8      	; 0xb0e <__fixsfsi+0x68>
     b06:	56 95       	lsr	r21
     b08:	47 95       	ror	r20
     b0a:	37 95       	ror	r19
     b0c:	27 95       	ror	r18
     b0e:	8a 95       	dec	r24
     b10:	d2 f7       	brpl	.-12     	; 0xb06 <__fixsfsi+0x60>
     b12:	66 23       	and	r22, r22
     b14:	b1 f0       	breq	.+44     	; 0xb42 <__fixsfsi+0x9c>
     b16:	50 95       	com	r21
     b18:	40 95       	com	r20
     b1a:	30 95       	com	r19
     b1c:	21 95       	neg	r18
     b1e:	3f 4f       	sbci	r19, 0xFF	; 255
     b20:	4f 4f       	sbci	r20, 0xFF	; 255
     b22:	5f 4f       	sbci	r21, 0xFF	; 255
     b24:	0e c0       	rjmp	.+28     	; 0xb42 <__fixsfsi+0x9c>
     b26:	20 e0       	ldi	r18, 0x00	; 0
     b28:	30 e0       	ldi	r19, 0x00	; 0
     b2a:	40 e0       	ldi	r20, 0x00	; 0
     b2c:	50 e0       	ldi	r21, 0x00	; 0
     b2e:	09 c0       	rjmp	.+18     	; 0xb42 <__fixsfsi+0x9c>
     b30:	2f ef       	ldi	r18, 0xFF	; 255
     b32:	3f ef       	ldi	r19, 0xFF	; 255
     b34:	4f ef       	ldi	r20, 0xFF	; 255
     b36:	5f e7       	ldi	r21, 0x7F	; 127
     b38:	04 c0       	rjmp	.+8      	; 0xb42 <__fixsfsi+0x9c>
     b3a:	20 e0       	ldi	r18, 0x00	; 0
     b3c:	30 e0       	ldi	r19, 0x00	; 0
     b3e:	40 e0       	ldi	r20, 0x00	; 0
     b40:	50 e8       	ldi	r21, 0x80	; 128
     b42:	b9 01       	movw	r22, r18
     b44:	ca 01       	movw	r24, r20
     b46:	2c 96       	adiw	r28, 0x0c	; 12
     b48:	e2 e0       	ldi	r30, 0x02	; 2
     b4a:	0c 94 c7 14 	jmp	0x298e	; 0x298e <__epilogue_restores__+0x20>

00000b4e <__floatunsisf>:
     b4e:	a8 e0       	ldi	r26, 0x08	; 8
     b50:	b0 e0       	ldi	r27, 0x00	; 0
     b52:	ed ea       	ldi	r30, 0xAD	; 173
     b54:	f5 e0       	ldi	r31, 0x05	; 5
     b56:	0c 94 a3 14 	jmp	0x2946	; 0x2946 <__prologue_saves__+0x10>
     b5a:	7b 01       	movw	r14, r22
     b5c:	8c 01       	movw	r16, r24
     b5e:	61 15       	cp	r22, r1
     b60:	71 05       	cpc	r23, r1
     b62:	81 05       	cpc	r24, r1
     b64:	91 05       	cpc	r25, r1
     b66:	19 f4       	brne	.+6      	; 0xb6e <__floatunsisf+0x20>
     b68:	82 e0       	ldi	r24, 0x02	; 2
     b6a:	89 83       	std	Y+1, r24	; 0x01
     b6c:	60 c0       	rjmp	.+192    	; 0xc2e <__floatunsisf+0xe0>
     b6e:	83 e0       	ldi	r24, 0x03	; 3
     b70:	89 83       	std	Y+1, r24	; 0x01
     b72:	8e e1       	ldi	r24, 0x1E	; 30
     b74:	c8 2e       	mov	r12, r24
     b76:	d1 2c       	mov	r13, r1
     b78:	dc 82       	std	Y+4, r13	; 0x04
     b7a:	cb 82       	std	Y+3, r12	; 0x03
     b7c:	ed 82       	std	Y+5, r14	; 0x05
     b7e:	fe 82       	std	Y+6, r15	; 0x06
     b80:	0f 83       	std	Y+7, r16	; 0x07
     b82:	18 87       	std	Y+8, r17	; 0x08
     b84:	c8 01       	movw	r24, r16
     b86:	b7 01       	movw	r22, r14
     b88:	0e 94 20 06 	call	0xc40	; 0xc40 <__clzsi2>
     b8c:	fc 01       	movw	r30, r24
     b8e:	31 97       	sbiw	r30, 0x01	; 1
     b90:	f7 ff       	sbrs	r31, 7
     b92:	3b c0       	rjmp	.+118    	; 0xc0a <__floatunsisf+0xbc>
     b94:	22 27       	eor	r18, r18
     b96:	33 27       	eor	r19, r19
     b98:	2e 1b       	sub	r18, r30
     b9a:	3f 0b       	sbc	r19, r31
     b9c:	57 01       	movw	r10, r14
     b9e:	68 01       	movw	r12, r16
     ba0:	02 2e       	mov	r0, r18
     ba2:	04 c0       	rjmp	.+8      	; 0xbac <__floatunsisf+0x5e>
     ba4:	d6 94       	lsr	r13
     ba6:	c7 94       	ror	r12
     ba8:	b7 94       	ror	r11
     baa:	a7 94       	ror	r10
     bac:	0a 94       	dec	r0
     bae:	d2 f7       	brpl	.-12     	; 0xba4 <__floatunsisf+0x56>
     bb0:	40 e0       	ldi	r20, 0x00	; 0
     bb2:	50 e0       	ldi	r21, 0x00	; 0
     bb4:	60 e0       	ldi	r22, 0x00	; 0
     bb6:	70 e0       	ldi	r23, 0x00	; 0
     bb8:	81 e0       	ldi	r24, 0x01	; 1
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	a0 e0       	ldi	r26, 0x00	; 0
     bbe:	b0 e0       	ldi	r27, 0x00	; 0
     bc0:	04 c0       	rjmp	.+8      	; 0xbca <__floatunsisf+0x7c>
     bc2:	88 0f       	add	r24, r24
     bc4:	99 1f       	adc	r25, r25
     bc6:	aa 1f       	adc	r26, r26
     bc8:	bb 1f       	adc	r27, r27
     bca:	2a 95       	dec	r18
     bcc:	d2 f7       	brpl	.-12     	; 0xbc2 <__floatunsisf+0x74>
     bce:	01 97       	sbiw	r24, 0x01	; 1
     bd0:	a1 09       	sbc	r26, r1
     bd2:	b1 09       	sbc	r27, r1
     bd4:	8e 21       	and	r24, r14
     bd6:	9f 21       	and	r25, r15
     bd8:	a0 23       	and	r26, r16
     bda:	b1 23       	and	r27, r17
     bdc:	00 97       	sbiw	r24, 0x00	; 0
     bde:	a1 05       	cpc	r26, r1
     be0:	b1 05       	cpc	r27, r1
     be2:	21 f0       	breq	.+8      	; 0xbec <__floatunsisf+0x9e>
     be4:	41 e0       	ldi	r20, 0x01	; 1
     be6:	50 e0       	ldi	r21, 0x00	; 0
     be8:	60 e0       	ldi	r22, 0x00	; 0
     bea:	70 e0       	ldi	r23, 0x00	; 0
     bec:	4a 29       	or	r20, r10
     bee:	5b 29       	or	r21, r11
     bf0:	6c 29       	or	r22, r12
     bf2:	7d 29       	or	r23, r13
     bf4:	4d 83       	std	Y+5, r20	; 0x05
     bf6:	5e 83       	std	Y+6, r21	; 0x06
     bf8:	6f 83       	std	Y+7, r22	; 0x07
     bfa:	78 87       	std	Y+8, r23	; 0x08
     bfc:	8e e1       	ldi	r24, 0x1E	; 30
     bfe:	90 e0       	ldi	r25, 0x00	; 0
     c00:	8e 1b       	sub	r24, r30
     c02:	9f 0b       	sbc	r25, r31
     c04:	9c 83       	std	Y+4, r25	; 0x04
     c06:	8b 83       	std	Y+3, r24	; 0x03
     c08:	12 c0       	rjmp	.+36     	; 0xc2e <__floatunsisf+0xe0>
     c0a:	30 97       	sbiw	r30, 0x00	; 0
     c0c:	81 f0       	breq	.+32     	; 0xc2e <__floatunsisf+0xe0>
     c0e:	0e 2e       	mov	r0, r30
     c10:	04 c0       	rjmp	.+8      	; 0xc1a <__floatunsisf+0xcc>
     c12:	ee 0c       	add	r14, r14
     c14:	ff 1c       	adc	r15, r15
     c16:	00 1f       	adc	r16, r16
     c18:	11 1f       	adc	r17, r17
     c1a:	0a 94       	dec	r0
     c1c:	d2 f7       	brpl	.-12     	; 0xc12 <__floatunsisf+0xc4>
     c1e:	ed 82       	std	Y+5, r14	; 0x05
     c20:	fe 82       	std	Y+6, r15	; 0x06
     c22:	0f 83       	std	Y+7, r16	; 0x07
     c24:	18 87       	std	Y+8, r17	; 0x08
     c26:	ce 1a       	sub	r12, r30
     c28:	df 0a       	sbc	r13, r31
     c2a:	dc 82       	std	Y+4, r13	; 0x04
     c2c:	cb 82       	std	Y+3, r12	; 0x03
     c2e:	1a 82       	std	Y+2, r1	; 0x02
     c30:	ce 01       	movw	r24, r28
     c32:	01 96       	adiw	r24, 0x01	; 1
     c34:	0e 94 6f 06 	call	0xcde	; 0xcde <__pack_f>
     c38:	28 96       	adiw	r28, 0x08	; 8
     c3a:	ea e0       	ldi	r30, 0x0A	; 10
     c3c:	0c 94 bf 14 	jmp	0x297e	; 0x297e <__epilogue_restores__+0x10>

00000c40 <__clzsi2>:
     c40:	ef 92       	push	r14
     c42:	ff 92       	push	r15
     c44:	0f 93       	push	r16
     c46:	1f 93       	push	r17
     c48:	7b 01       	movw	r14, r22
     c4a:	8c 01       	movw	r16, r24
     c4c:	80 e0       	ldi	r24, 0x00	; 0
     c4e:	e8 16       	cp	r14, r24
     c50:	80 e0       	ldi	r24, 0x00	; 0
     c52:	f8 06       	cpc	r15, r24
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	08 07       	cpc	r16, r24
     c58:	80 e0       	ldi	r24, 0x00	; 0
     c5a:	18 07       	cpc	r17, r24
     c5c:	88 f4       	brcc	.+34     	; 0xc80 <__clzsi2+0x40>
     c5e:	8f ef       	ldi	r24, 0xFF	; 255
     c60:	e8 16       	cp	r14, r24
     c62:	f1 04       	cpc	r15, r1
     c64:	01 05       	cpc	r16, r1
     c66:	11 05       	cpc	r17, r1
     c68:	31 f0       	breq	.+12     	; 0xc76 <__clzsi2+0x36>
     c6a:	28 f0       	brcs	.+10     	; 0xc76 <__clzsi2+0x36>
     c6c:	88 e0       	ldi	r24, 0x08	; 8
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	a0 e0       	ldi	r26, 0x00	; 0
     c72:	b0 e0       	ldi	r27, 0x00	; 0
     c74:	17 c0       	rjmp	.+46     	; 0xca4 <__clzsi2+0x64>
     c76:	80 e0       	ldi	r24, 0x00	; 0
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	a0 e0       	ldi	r26, 0x00	; 0
     c7c:	b0 e0       	ldi	r27, 0x00	; 0
     c7e:	12 c0       	rjmp	.+36     	; 0xca4 <__clzsi2+0x64>
     c80:	80 e0       	ldi	r24, 0x00	; 0
     c82:	e8 16       	cp	r14, r24
     c84:	80 e0       	ldi	r24, 0x00	; 0
     c86:	f8 06       	cpc	r15, r24
     c88:	80 e0       	ldi	r24, 0x00	; 0
     c8a:	08 07       	cpc	r16, r24
     c8c:	81 e0       	ldi	r24, 0x01	; 1
     c8e:	18 07       	cpc	r17, r24
     c90:	28 f0       	brcs	.+10     	; 0xc9c <__clzsi2+0x5c>
     c92:	88 e1       	ldi	r24, 0x18	; 24
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	a0 e0       	ldi	r26, 0x00	; 0
     c98:	b0 e0       	ldi	r27, 0x00	; 0
     c9a:	04 c0       	rjmp	.+8      	; 0xca4 <__clzsi2+0x64>
     c9c:	80 e1       	ldi	r24, 0x10	; 16
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	a0 e0       	ldi	r26, 0x00	; 0
     ca2:	b0 e0       	ldi	r27, 0x00	; 0
     ca4:	20 e2       	ldi	r18, 0x20	; 32
     ca6:	30 e0       	ldi	r19, 0x00	; 0
     ca8:	40 e0       	ldi	r20, 0x00	; 0
     caa:	50 e0       	ldi	r21, 0x00	; 0
     cac:	28 1b       	sub	r18, r24
     cae:	39 0b       	sbc	r19, r25
     cb0:	4a 0b       	sbc	r20, r26
     cb2:	5b 0b       	sbc	r21, r27
     cb4:	04 c0       	rjmp	.+8      	; 0xcbe <__clzsi2+0x7e>
     cb6:	16 95       	lsr	r17
     cb8:	07 95       	ror	r16
     cba:	f7 94       	ror	r15
     cbc:	e7 94       	ror	r14
     cbe:	8a 95       	dec	r24
     cc0:	d2 f7       	brpl	.-12     	; 0xcb6 <__clzsi2+0x76>
     cc2:	f7 01       	movw	r30, r14
     cc4:	e2 59       	subi	r30, 0x92	; 146
     cc6:	fe 4f       	sbci	r31, 0xFE	; 254
     cc8:	80 81       	ld	r24, Z
     cca:	28 1b       	sub	r18, r24
     ccc:	31 09       	sbc	r19, r1
     cce:	41 09       	sbc	r20, r1
     cd0:	51 09       	sbc	r21, r1
     cd2:	c9 01       	movw	r24, r18
     cd4:	1f 91       	pop	r17
     cd6:	0f 91       	pop	r16
     cd8:	ff 90       	pop	r15
     cda:	ef 90       	pop	r14
     cdc:	08 95       	ret

00000cde <__pack_f>:
     cde:	df 92       	push	r13
     ce0:	ef 92       	push	r14
     ce2:	ff 92       	push	r15
     ce4:	0f 93       	push	r16
     ce6:	1f 93       	push	r17
     ce8:	fc 01       	movw	r30, r24
     cea:	e4 80       	ldd	r14, Z+4	; 0x04
     cec:	f5 80       	ldd	r15, Z+5	; 0x05
     cee:	06 81       	ldd	r16, Z+6	; 0x06
     cf0:	17 81       	ldd	r17, Z+7	; 0x07
     cf2:	d1 80       	ldd	r13, Z+1	; 0x01
     cf4:	80 81       	ld	r24, Z
     cf6:	82 30       	cpi	r24, 0x02	; 2
     cf8:	48 f4       	brcc	.+18     	; 0xd0c <__pack_f+0x2e>
     cfa:	80 e0       	ldi	r24, 0x00	; 0
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	a0 e1       	ldi	r26, 0x10	; 16
     d00:	b0 e0       	ldi	r27, 0x00	; 0
     d02:	e8 2a       	or	r14, r24
     d04:	f9 2a       	or	r15, r25
     d06:	0a 2b       	or	r16, r26
     d08:	1b 2b       	or	r17, r27
     d0a:	a5 c0       	rjmp	.+330    	; 0xe56 <__pack_f+0x178>
     d0c:	84 30       	cpi	r24, 0x04	; 4
     d0e:	09 f4       	brne	.+2      	; 0xd12 <__pack_f+0x34>
     d10:	9f c0       	rjmp	.+318    	; 0xe50 <__pack_f+0x172>
     d12:	82 30       	cpi	r24, 0x02	; 2
     d14:	21 f4       	brne	.+8      	; 0xd1e <__pack_f+0x40>
     d16:	ee 24       	eor	r14, r14
     d18:	ff 24       	eor	r15, r15
     d1a:	87 01       	movw	r16, r14
     d1c:	05 c0       	rjmp	.+10     	; 0xd28 <__pack_f+0x4a>
     d1e:	e1 14       	cp	r14, r1
     d20:	f1 04       	cpc	r15, r1
     d22:	01 05       	cpc	r16, r1
     d24:	11 05       	cpc	r17, r1
     d26:	19 f4       	brne	.+6      	; 0xd2e <__pack_f+0x50>
     d28:	e0 e0       	ldi	r30, 0x00	; 0
     d2a:	f0 e0       	ldi	r31, 0x00	; 0
     d2c:	96 c0       	rjmp	.+300    	; 0xe5a <__pack_f+0x17c>
     d2e:	62 81       	ldd	r22, Z+2	; 0x02
     d30:	73 81       	ldd	r23, Z+3	; 0x03
     d32:	9f ef       	ldi	r25, 0xFF	; 255
     d34:	62 38       	cpi	r22, 0x82	; 130
     d36:	79 07       	cpc	r23, r25
     d38:	0c f0       	brlt	.+2      	; 0xd3c <__pack_f+0x5e>
     d3a:	5b c0       	rjmp	.+182    	; 0xdf2 <__pack_f+0x114>
     d3c:	22 e8       	ldi	r18, 0x82	; 130
     d3e:	3f ef       	ldi	r19, 0xFF	; 255
     d40:	26 1b       	sub	r18, r22
     d42:	37 0b       	sbc	r19, r23
     d44:	2a 31       	cpi	r18, 0x1A	; 26
     d46:	31 05       	cpc	r19, r1
     d48:	2c f0       	brlt	.+10     	; 0xd54 <__pack_f+0x76>
     d4a:	20 e0       	ldi	r18, 0x00	; 0
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	40 e0       	ldi	r20, 0x00	; 0
     d50:	50 e0       	ldi	r21, 0x00	; 0
     d52:	2a c0       	rjmp	.+84     	; 0xda8 <__pack_f+0xca>
     d54:	b8 01       	movw	r22, r16
     d56:	a7 01       	movw	r20, r14
     d58:	02 2e       	mov	r0, r18
     d5a:	04 c0       	rjmp	.+8      	; 0xd64 <__pack_f+0x86>
     d5c:	76 95       	lsr	r23
     d5e:	67 95       	ror	r22
     d60:	57 95       	ror	r21
     d62:	47 95       	ror	r20
     d64:	0a 94       	dec	r0
     d66:	d2 f7       	brpl	.-12     	; 0xd5c <__pack_f+0x7e>
     d68:	81 e0       	ldi	r24, 0x01	; 1
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	a0 e0       	ldi	r26, 0x00	; 0
     d6e:	b0 e0       	ldi	r27, 0x00	; 0
     d70:	04 c0       	rjmp	.+8      	; 0xd7a <__pack_f+0x9c>
     d72:	88 0f       	add	r24, r24
     d74:	99 1f       	adc	r25, r25
     d76:	aa 1f       	adc	r26, r26
     d78:	bb 1f       	adc	r27, r27
     d7a:	2a 95       	dec	r18
     d7c:	d2 f7       	brpl	.-12     	; 0xd72 <__pack_f+0x94>
     d7e:	01 97       	sbiw	r24, 0x01	; 1
     d80:	a1 09       	sbc	r26, r1
     d82:	b1 09       	sbc	r27, r1
     d84:	8e 21       	and	r24, r14
     d86:	9f 21       	and	r25, r15
     d88:	a0 23       	and	r26, r16
     d8a:	b1 23       	and	r27, r17
     d8c:	00 97       	sbiw	r24, 0x00	; 0
     d8e:	a1 05       	cpc	r26, r1
     d90:	b1 05       	cpc	r27, r1
     d92:	21 f0       	breq	.+8      	; 0xd9c <__pack_f+0xbe>
     d94:	81 e0       	ldi	r24, 0x01	; 1
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	a0 e0       	ldi	r26, 0x00	; 0
     d9a:	b0 e0       	ldi	r27, 0x00	; 0
     d9c:	9a 01       	movw	r18, r20
     d9e:	ab 01       	movw	r20, r22
     da0:	28 2b       	or	r18, r24
     da2:	39 2b       	or	r19, r25
     da4:	4a 2b       	or	r20, r26
     da6:	5b 2b       	or	r21, r27
     da8:	da 01       	movw	r26, r20
     daa:	c9 01       	movw	r24, r18
     dac:	8f 77       	andi	r24, 0x7F	; 127
     dae:	90 70       	andi	r25, 0x00	; 0
     db0:	a0 70       	andi	r26, 0x00	; 0
     db2:	b0 70       	andi	r27, 0x00	; 0
     db4:	80 34       	cpi	r24, 0x40	; 64
     db6:	91 05       	cpc	r25, r1
     db8:	a1 05       	cpc	r26, r1
     dba:	b1 05       	cpc	r27, r1
     dbc:	39 f4       	brne	.+14     	; 0xdcc <__pack_f+0xee>
     dbe:	27 ff       	sbrs	r18, 7
     dc0:	09 c0       	rjmp	.+18     	; 0xdd4 <__pack_f+0xf6>
     dc2:	20 5c       	subi	r18, 0xC0	; 192
     dc4:	3f 4f       	sbci	r19, 0xFF	; 255
     dc6:	4f 4f       	sbci	r20, 0xFF	; 255
     dc8:	5f 4f       	sbci	r21, 0xFF	; 255
     dca:	04 c0       	rjmp	.+8      	; 0xdd4 <__pack_f+0xf6>
     dcc:	21 5c       	subi	r18, 0xC1	; 193
     dce:	3f 4f       	sbci	r19, 0xFF	; 255
     dd0:	4f 4f       	sbci	r20, 0xFF	; 255
     dd2:	5f 4f       	sbci	r21, 0xFF	; 255
     dd4:	e0 e0       	ldi	r30, 0x00	; 0
     dd6:	f0 e0       	ldi	r31, 0x00	; 0
     dd8:	20 30       	cpi	r18, 0x00	; 0
     dda:	a0 e0       	ldi	r26, 0x00	; 0
     ddc:	3a 07       	cpc	r19, r26
     dde:	a0 e0       	ldi	r26, 0x00	; 0
     de0:	4a 07       	cpc	r20, r26
     de2:	a0 e4       	ldi	r26, 0x40	; 64
     de4:	5a 07       	cpc	r21, r26
     de6:	10 f0       	brcs	.+4      	; 0xdec <__pack_f+0x10e>
     de8:	e1 e0       	ldi	r30, 0x01	; 1
     dea:	f0 e0       	ldi	r31, 0x00	; 0
     dec:	79 01       	movw	r14, r18
     dee:	8a 01       	movw	r16, r20
     df0:	27 c0       	rjmp	.+78     	; 0xe40 <__pack_f+0x162>
     df2:	60 38       	cpi	r22, 0x80	; 128
     df4:	71 05       	cpc	r23, r1
     df6:	64 f5       	brge	.+88     	; 0xe50 <__pack_f+0x172>
     df8:	fb 01       	movw	r30, r22
     dfa:	e1 58       	subi	r30, 0x81	; 129
     dfc:	ff 4f       	sbci	r31, 0xFF	; 255
     dfe:	d8 01       	movw	r26, r16
     e00:	c7 01       	movw	r24, r14
     e02:	8f 77       	andi	r24, 0x7F	; 127
     e04:	90 70       	andi	r25, 0x00	; 0
     e06:	a0 70       	andi	r26, 0x00	; 0
     e08:	b0 70       	andi	r27, 0x00	; 0
     e0a:	80 34       	cpi	r24, 0x40	; 64
     e0c:	91 05       	cpc	r25, r1
     e0e:	a1 05       	cpc	r26, r1
     e10:	b1 05       	cpc	r27, r1
     e12:	39 f4       	brne	.+14     	; 0xe22 <__pack_f+0x144>
     e14:	e7 fe       	sbrs	r14, 7
     e16:	0d c0       	rjmp	.+26     	; 0xe32 <__pack_f+0x154>
     e18:	80 e4       	ldi	r24, 0x40	; 64
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	a0 e0       	ldi	r26, 0x00	; 0
     e1e:	b0 e0       	ldi	r27, 0x00	; 0
     e20:	04 c0       	rjmp	.+8      	; 0xe2a <__pack_f+0x14c>
     e22:	8f e3       	ldi	r24, 0x3F	; 63
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	a0 e0       	ldi	r26, 0x00	; 0
     e28:	b0 e0       	ldi	r27, 0x00	; 0
     e2a:	e8 0e       	add	r14, r24
     e2c:	f9 1e       	adc	r15, r25
     e2e:	0a 1f       	adc	r16, r26
     e30:	1b 1f       	adc	r17, r27
     e32:	17 ff       	sbrs	r17, 7
     e34:	05 c0       	rjmp	.+10     	; 0xe40 <__pack_f+0x162>
     e36:	16 95       	lsr	r17
     e38:	07 95       	ror	r16
     e3a:	f7 94       	ror	r15
     e3c:	e7 94       	ror	r14
     e3e:	31 96       	adiw	r30, 0x01	; 1
     e40:	87 e0       	ldi	r24, 0x07	; 7
     e42:	16 95       	lsr	r17
     e44:	07 95       	ror	r16
     e46:	f7 94       	ror	r15
     e48:	e7 94       	ror	r14
     e4a:	8a 95       	dec	r24
     e4c:	d1 f7       	brne	.-12     	; 0xe42 <__pack_f+0x164>
     e4e:	05 c0       	rjmp	.+10     	; 0xe5a <__pack_f+0x17c>
     e50:	ee 24       	eor	r14, r14
     e52:	ff 24       	eor	r15, r15
     e54:	87 01       	movw	r16, r14
     e56:	ef ef       	ldi	r30, 0xFF	; 255
     e58:	f0 e0       	ldi	r31, 0x00	; 0
     e5a:	6e 2f       	mov	r22, r30
     e5c:	67 95       	ror	r22
     e5e:	66 27       	eor	r22, r22
     e60:	67 95       	ror	r22
     e62:	90 2f       	mov	r25, r16
     e64:	9f 77       	andi	r25, 0x7F	; 127
     e66:	d7 94       	ror	r13
     e68:	dd 24       	eor	r13, r13
     e6a:	d7 94       	ror	r13
     e6c:	8e 2f       	mov	r24, r30
     e6e:	86 95       	lsr	r24
     e70:	49 2f       	mov	r20, r25
     e72:	46 2b       	or	r20, r22
     e74:	58 2f       	mov	r21, r24
     e76:	5d 29       	or	r21, r13
     e78:	b7 01       	movw	r22, r14
     e7a:	ca 01       	movw	r24, r20
     e7c:	1f 91       	pop	r17
     e7e:	0f 91       	pop	r16
     e80:	ff 90       	pop	r15
     e82:	ef 90       	pop	r14
     e84:	df 90       	pop	r13
     e86:	08 95       	ret

00000e88 <__unpack_f>:
     e88:	fc 01       	movw	r30, r24
     e8a:	db 01       	movw	r26, r22
     e8c:	40 81       	ld	r20, Z
     e8e:	51 81       	ldd	r21, Z+1	; 0x01
     e90:	22 81       	ldd	r18, Z+2	; 0x02
     e92:	62 2f       	mov	r22, r18
     e94:	6f 77       	andi	r22, 0x7F	; 127
     e96:	70 e0       	ldi	r23, 0x00	; 0
     e98:	22 1f       	adc	r18, r18
     e9a:	22 27       	eor	r18, r18
     e9c:	22 1f       	adc	r18, r18
     e9e:	93 81       	ldd	r25, Z+3	; 0x03
     ea0:	89 2f       	mov	r24, r25
     ea2:	88 0f       	add	r24, r24
     ea4:	82 2b       	or	r24, r18
     ea6:	28 2f       	mov	r18, r24
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	99 1f       	adc	r25, r25
     eac:	99 27       	eor	r25, r25
     eae:	99 1f       	adc	r25, r25
     eb0:	11 96       	adiw	r26, 0x01	; 1
     eb2:	9c 93       	st	X, r25
     eb4:	11 97       	sbiw	r26, 0x01	; 1
     eb6:	21 15       	cp	r18, r1
     eb8:	31 05       	cpc	r19, r1
     eba:	a9 f5       	brne	.+106    	; 0xf26 <__unpack_f+0x9e>
     ebc:	41 15       	cp	r20, r1
     ebe:	51 05       	cpc	r21, r1
     ec0:	61 05       	cpc	r22, r1
     ec2:	71 05       	cpc	r23, r1
     ec4:	11 f4       	brne	.+4      	; 0xeca <__unpack_f+0x42>
     ec6:	82 e0       	ldi	r24, 0x02	; 2
     ec8:	37 c0       	rjmp	.+110    	; 0xf38 <__unpack_f+0xb0>
     eca:	82 e8       	ldi	r24, 0x82	; 130
     ecc:	9f ef       	ldi	r25, 0xFF	; 255
     ece:	13 96       	adiw	r26, 0x03	; 3
     ed0:	9c 93       	st	X, r25
     ed2:	8e 93       	st	-X, r24
     ed4:	12 97       	sbiw	r26, 0x02	; 2
     ed6:	9a 01       	movw	r18, r20
     ed8:	ab 01       	movw	r20, r22
     eda:	67 e0       	ldi	r22, 0x07	; 7
     edc:	22 0f       	add	r18, r18
     ede:	33 1f       	adc	r19, r19
     ee0:	44 1f       	adc	r20, r20
     ee2:	55 1f       	adc	r21, r21
     ee4:	6a 95       	dec	r22
     ee6:	d1 f7       	brne	.-12     	; 0xedc <__unpack_f+0x54>
     ee8:	83 e0       	ldi	r24, 0x03	; 3
     eea:	8c 93       	st	X, r24
     eec:	0d c0       	rjmp	.+26     	; 0xf08 <__unpack_f+0x80>
     eee:	22 0f       	add	r18, r18
     ef0:	33 1f       	adc	r19, r19
     ef2:	44 1f       	adc	r20, r20
     ef4:	55 1f       	adc	r21, r21
     ef6:	12 96       	adiw	r26, 0x02	; 2
     ef8:	8d 91       	ld	r24, X+
     efa:	9c 91       	ld	r25, X
     efc:	13 97       	sbiw	r26, 0x03	; 3
     efe:	01 97       	sbiw	r24, 0x01	; 1
     f00:	13 96       	adiw	r26, 0x03	; 3
     f02:	9c 93       	st	X, r25
     f04:	8e 93       	st	-X, r24
     f06:	12 97       	sbiw	r26, 0x02	; 2
     f08:	20 30       	cpi	r18, 0x00	; 0
     f0a:	80 e0       	ldi	r24, 0x00	; 0
     f0c:	38 07       	cpc	r19, r24
     f0e:	80 e0       	ldi	r24, 0x00	; 0
     f10:	48 07       	cpc	r20, r24
     f12:	80 e4       	ldi	r24, 0x40	; 64
     f14:	58 07       	cpc	r21, r24
     f16:	58 f3       	brcs	.-42     	; 0xeee <__unpack_f+0x66>
     f18:	14 96       	adiw	r26, 0x04	; 4
     f1a:	2d 93       	st	X+, r18
     f1c:	3d 93       	st	X+, r19
     f1e:	4d 93       	st	X+, r20
     f20:	5c 93       	st	X, r21
     f22:	17 97       	sbiw	r26, 0x07	; 7
     f24:	08 95       	ret
     f26:	2f 3f       	cpi	r18, 0xFF	; 255
     f28:	31 05       	cpc	r19, r1
     f2a:	79 f4       	brne	.+30     	; 0xf4a <__unpack_f+0xc2>
     f2c:	41 15       	cp	r20, r1
     f2e:	51 05       	cpc	r21, r1
     f30:	61 05       	cpc	r22, r1
     f32:	71 05       	cpc	r23, r1
     f34:	19 f4       	brne	.+6      	; 0xf3c <__unpack_f+0xb4>
     f36:	84 e0       	ldi	r24, 0x04	; 4
     f38:	8c 93       	st	X, r24
     f3a:	08 95       	ret
     f3c:	64 ff       	sbrs	r22, 4
     f3e:	03 c0       	rjmp	.+6      	; 0xf46 <__unpack_f+0xbe>
     f40:	81 e0       	ldi	r24, 0x01	; 1
     f42:	8c 93       	st	X, r24
     f44:	12 c0       	rjmp	.+36     	; 0xf6a <__unpack_f+0xe2>
     f46:	1c 92       	st	X, r1
     f48:	10 c0       	rjmp	.+32     	; 0xf6a <__unpack_f+0xe2>
     f4a:	2f 57       	subi	r18, 0x7F	; 127
     f4c:	30 40       	sbci	r19, 0x00	; 0
     f4e:	13 96       	adiw	r26, 0x03	; 3
     f50:	3c 93       	st	X, r19
     f52:	2e 93       	st	-X, r18
     f54:	12 97       	sbiw	r26, 0x02	; 2
     f56:	83 e0       	ldi	r24, 0x03	; 3
     f58:	8c 93       	st	X, r24
     f5a:	87 e0       	ldi	r24, 0x07	; 7
     f5c:	44 0f       	add	r20, r20
     f5e:	55 1f       	adc	r21, r21
     f60:	66 1f       	adc	r22, r22
     f62:	77 1f       	adc	r23, r23
     f64:	8a 95       	dec	r24
     f66:	d1 f7       	brne	.-12     	; 0xf5c <__unpack_f+0xd4>
     f68:	70 64       	ori	r23, 0x40	; 64
     f6a:	14 96       	adiw	r26, 0x04	; 4
     f6c:	4d 93       	st	X+, r20
     f6e:	5d 93       	st	X+, r21
     f70:	6d 93       	st	X+, r22
     f72:	7c 93       	st	X, r23
     f74:	17 97       	sbiw	r26, 0x07	; 7
     f76:	08 95       	ret

00000f78 <__fpcmp_parts_f>:
     f78:	1f 93       	push	r17
     f7a:	dc 01       	movw	r26, r24
     f7c:	fb 01       	movw	r30, r22
     f7e:	9c 91       	ld	r25, X
     f80:	92 30       	cpi	r25, 0x02	; 2
     f82:	08 f4       	brcc	.+2      	; 0xf86 <__fpcmp_parts_f+0xe>
     f84:	47 c0       	rjmp	.+142    	; 0x1014 <__fpcmp_parts_f+0x9c>
     f86:	80 81       	ld	r24, Z
     f88:	82 30       	cpi	r24, 0x02	; 2
     f8a:	08 f4       	brcc	.+2      	; 0xf8e <__fpcmp_parts_f+0x16>
     f8c:	43 c0       	rjmp	.+134    	; 0x1014 <__fpcmp_parts_f+0x9c>
     f8e:	94 30       	cpi	r25, 0x04	; 4
     f90:	51 f4       	brne	.+20     	; 0xfa6 <__fpcmp_parts_f+0x2e>
     f92:	11 96       	adiw	r26, 0x01	; 1
     f94:	1c 91       	ld	r17, X
     f96:	84 30       	cpi	r24, 0x04	; 4
     f98:	99 f5       	brne	.+102    	; 0x1000 <__fpcmp_parts_f+0x88>
     f9a:	81 81       	ldd	r24, Z+1	; 0x01
     f9c:	68 2f       	mov	r22, r24
     f9e:	70 e0       	ldi	r23, 0x00	; 0
     fa0:	61 1b       	sub	r22, r17
     fa2:	71 09       	sbc	r23, r1
     fa4:	3f c0       	rjmp	.+126    	; 0x1024 <__fpcmp_parts_f+0xac>
     fa6:	84 30       	cpi	r24, 0x04	; 4
     fa8:	21 f0       	breq	.+8      	; 0xfb2 <__fpcmp_parts_f+0x3a>
     faa:	92 30       	cpi	r25, 0x02	; 2
     fac:	31 f4       	brne	.+12     	; 0xfba <__fpcmp_parts_f+0x42>
     fae:	82 30       	cpi	r24, 0x02	; 2
     fb0:	b9 f1       	breq	.+110    	; 0x1020 <__fpcmp_parts_f+0xa8>
     fb2:	81 81       	ldd	r24, Z+1	; 0x01
     fb4:	88 23       	and	r24, r24
     fb6:	89 f1       	breq	.+98     	; 0x101a <__fpcmp_parts_f+0xa2>
     fb8:	2d c0       	rjmp	.+90     	; 0x1014 <__fpcmp_parts_f+0x9c>
     fba:	11 96       	adiw	r26, 0x01	; 1
     fbc:	1c 91       	ld	r17, X
     fbe:	11 97       	sbiw	r26, 0x01	; 1
     fc0:	82 30       	cpi	r24, 0x02	; 2
     fc2:	f1 f0       	breq	.+60     	; 0x1000 <__fpcmp_parts_f+0x88>
     fc4:	81 81       	ldd	r24, Z+1	; 0x01
     fc6:	18 17       	cp	r17, r24
     fc8:	d9 f4       	brne	.+54     	; 0x1000 <__fpcmp_parts_f+0x88>
     fca:	12 96       	adiw	r26, 0x02	; 2
     fcc:	2d 91       	ld	r18, X+
     fce:	3c 91       	ld	r19, X
     fd0:	13 97       	sbiw	r26, 0x03	; 3
     fd2:	82 81       	ldd	r24, Z+2	; 0x02
     fd4:	93 81       	ldd	r25, Z+3	; 0x03
     fd6:	82 17       	cp	r24, r18
     fd8:	93 07       	cpc	r25, r19
     fda:	94 f0       	brlt	.+36     	; 0x1000 <__fpcmp_parts_f+0x88>
     fdc:	28 17       	cp	r18, r24
     fde:	39 07       	cpc	r19, r25
     fe0:	bc f0       	brlt	.+46     	; 0x1010 <__fpcmp_parts_f+0x98>
     fe2:	14 96       	adiw	r26, 0x04	; 4
     fe4:	8d 91       	ld	r24, X+
     fe6:	9d 91       	ld	r25, X+
     fe8:	0d 90       	ld	r0, X+
     fea:	bc 91       	ld	r27, X
     fec:	a0 2d       	mov	r26, r0
     fee:	24 81       	ldd	r18, Z+4	; 0x04
     ff0:	35 81       	ldd	r19, Z+5	; 0x05
     ff2:	46 81       	ldd	r20, Z+6	; 0x06
     ff4:	57 81       	ldd	r21, Z+7	; 0x07
     ff6:	28 17       	cp	r18, r24
     ff8:	39 07       	cpc	r19, r25
     ffa:	4a 07       	cpc	r20, r26
     ffc:	5b 07       	cpc	r21, r27
     ffe:	18 f4       	brcc	.+6      	; 0x1006 <__fpcmp_parts_f+0x8e>
    1000:	11 23       	and	r17, r17
    1002:	41 f0       	breq	.+16     	; 0x1014 <__fpcmp_parts_f+0x9c>
    1004:	0a c0       	rjmp	.+20     	; 0x101a <__fpcmp_parts_f+0xa2>
    1006:	82 17       	cp	r24, r18
    1008:	93 07       	cpc	r25, r19
    100a:	a4 07       	cpc	r26, r20
    100c:	b5 07       	cpc	r27, r21
    100e:	40 f4       	brcc	.+16     	; 0x1020 <__fpcmp_parts_f+0xa8>
    1010:	11 23       	and	r17, r17
    1012:	19 f0       	breq	.+6      	; 0x101a <__fpcmp_parts_f+0xa2>
    1014:	61 e0       	ldi	r22, 0x01	; 1
    1016:	70 e0       	ldi	r23, 0x00	; 0
    1018:	05 c0       	rjmp	.+10     	; 0x1024 <__fpcmp_parts_f+0xac>
    101a:	6f ef       	ldi	r22, 0xFF	; 255
    101c:	7f ef       	ldi	r23, 0xFF	; 255
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <__fpcmp_parts_f+0xac>
    1020:	60 e0       	ldi	r22, 0x00	; 0
    1022:	70 e0       	ldi	r23, 0x00	; 0
    1024:	cb 01       	movw	r24, r22
    1026:	1f 91       	pop	r17
    1028:	08 95       	ret

0000102a <_ZN13LiquidCrystal11pulseEnableEv>:
    write4bits(value>>4);
    write4bits(value);
  }
}

void LiquidCrystal::pulseEnable(void) {
    102a:	0f 93       	push	r16
    102c:	1f 93       	push	r17
    102e:	8c 01       	movw	r16, r24
  digitalWrite(_enable_pin, LOW);
    1030:	fc 01       	movw	r30, r24
    1032:	86 81       	ldd	r24, Z+6	; 0x06
    1034:	60 e0       	ldi	r22, 0x00	; 0
    1036:	0e 94 27 14 	call	0x284e	; 0x284e <digitalWrite>
  delayMicroseconds(1);    
    103a:	81 e0       	ldi	r24, 0x01	; 1
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	0e 94 54 13 	call	0x26a8	; 0x26a8 <delayMicroseconds>
  digitalWrite(_enable_pin, HIGH);
    1042:	f8 01       	movw	r30, r16
    1044:	86 81       	ldd	r24, Z+6	; 0x06
    1046:	61 e0       	ldi	r22, 0x01	; 1
    1048:	0e 94 27 14 	call	0x284e	; 0x284e <digitalWrite>
  delayMicroseconds(1);    // enable pulse must be >450ns
    104c:	81 e0       	ldi	r24, 0x01	; 1
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	0e 94 54 13 	call	0x26a8	; 0x26a8 <delayMicroseconds>
  digitalWrite(_enable_pin, LOW);
    1054:	f8 01       	movw	r30, r16
    1056:	86 81       	ldd	r24, Z+6	; 0x06
    1058:	60 e0       	ldi	r22, 0x00	; 0
    105a:	0e 94 27 14 	call	0x284e	; 0x284e <digitalWrite>
  delayMicroseconds(100);   // commands need > 37us to settle
    105e:	84 e6       	ldi	r24, 0x64	; 100
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	0e 94 54 13 	call	0x26a8	; 0x26a8 <delayMicroseconds>
}
    1066:	1f 91       	pop	r17
    1068:	0f 91       	pop	r16
    106a:	08 95       	ret

0000106c <_ZN13LiquidCrystal10write8bitsEh>:
  }

  pulseEnable();
}

void LiquidCrystal::write8bits(uint8_t value) {
    106c:	cf 92       	push	r12
    106e:	df 92       	push	r13
    1070:	ef 92       	push	r14
    1072:	ff 92       	push	r15
    1074:	0f 93       	push	r16
    1076:	1f 93       	push	r17
    1078:	cf 93       	push	r28
    107a:	df 93       	push	r29
    107c:	d8 2e       	mov	r13, r24
    107e:	c9 2e       	mov	r12, r25
    1080:	28 2f       	mov	r18, r24
    1082:	39 2f       	mov	r19, r25
    1084:	c9 01       	movw	r24, r18
    1086:	8c 01       	movw	r16, r24
    1088:	c0 e0       	ldi	r28, 0x00	; 0
    108a:	d0 e0       	ldi	r29, 0x00	; 0
  for (int i = 0; i < 8; i++) {
    pinMode(_data_pins[i], OUTPUT);
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
    108c:	e6 2e       	mov	r14, r22
    108e:	ff 24       	eor	r15, r15
  pulseEnable();
}

void LiquidCrystal::write8bits(uint8_t value) {
  for (int i = 0; i < 8; i++) {
    pinMode(_data_pins[i], OUTPUT);
    1090:	f8 01       	movw	r30, r16
    1092:	87 81       	ldd	r24, Z+7	; 0x07
    1094:	61 e0       	ldi	r22, 0x01	; 1
    1096:	0e 94 bb 13 	call	0x2776	; 0x2776 <pinMode>
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
    109a:	b7 01       	movw	r22, r14
    109c:	0c 2e       	mov	r0, r28
    109e:	02 c0       	rjmp	.+4      	; 0x10a4 <_ZN13LiquidCrystal10write8bitsEh+0x38>
    10a0:	75 95       	asr	r23
    10a2:	67 95       	ror	r22
    10a4:	0a 94       	dec	r0
    10a6:	e2 f7       	brpl	.-8      	; 0x10a0 <_ZN13LiquidCrystal10write8bitsEh+0x34>
    10a8:	61 70       	andi	r22, 0x01	; 1
    10aa:	f8 01       	movw	r30, r16
    10ac:	87 81       	ldd	r24, Z+7	; 0x07
    10ae:	0e 94 27 14 	call	0x284e	; 0x284e <digitalWrite>

  pulseEnable();
}

void LiquidCrystal::write8bits(uint8_t value) {
  for (int i = 0; i < 8; i++) {
    10b2:	21 96       	adiw	r28, 0x01	; 1
    10b4:	0f 5f       	subi	r16, 0xFF	; 255
    10b6:	1f 4f       	sbci	r17, 0xFF	; 255
    10b8:	c8 30       	cpi	r28, 0x08	; 8
    10ba:	d1 05       	cpc	r29, r1
    10bc:	49 f7       	brne	.-46     	; 0x1090 <_ZN13LiquidCrystal10write8bitsEh+0x24>
    pinMode(_data_pins[i], OUTPUT);
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
  }
  
  pulseEnable();
    10be:	8d 2d       	mov	r24, r13
    10c0:	9c 2d       	mov	r25, r12
    10c2:	0e 94 15 08 	call	0x102a	; 0x102a <_ZN13LiquidCrystal11pulseEnableEv>
}
    10c6:	df 91       	pop	r29
    10c8:	cf 91       	pop	r28
    10ca:	1f 91       	pop	r17
    10cc:	0f 91       	pop	r16
    10ce:	ff 90       	pop	r15
    10d0:	ef 90       	pop	r14
    10d2:	df 90       	pop	r13
    10d4:	cf 90       	pop	r12
    10d6:	08 95       	ret

000010d8 <_ZN13LiquidCrystal10write4bitsEh>:
  delayMicroseconds(1);    // enable pulse must be >450ns
  digitalWrite(_enable_pin, LOW);
  delayMicroseconds(100);   // commands need > 37us to settle
}

void LiquidCrystal::write4bits(uint8_t value) {
    10d8:	cf 92       	push	r12
    10da:	df 92       	push	r13
    10dc:	ef 92       	push	r14
    10de:	ff 92       	push	r15
    10e0:	0f 93       	push	r16
    10e2:	1f 93       	push	r17
    10e4:	cf 93       	push	r28
    10e6:	df 93       	push	r29
    10e8:	d8 2e       	mov	r13, r24
    10ea:	c9 2e       	mov	r12, r25
    10ec:	28 2f       	mov	r18, r24
    10ee:	39 2f       	mov	r19, r25
    10f0:	c9 01       	movw	r24, r18
    10f2:	8c 01       	movw	r16, r24
    10f4:	c0 e0       	ldi	r28, 0x00	; 0
    10f6:	d0 e0       	ldi	r29, 0x00	; 0
  for (int i = 0; i < 4; i++) {
    pinMode(_data_pins[i], OUTPUT);
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
    10f8:	e6 2e       	mov	r14, r22
    10fa:	ff 24       	eor	r15, r15
  delayMicroseconds(100);   // commands need > 37us to settle
}

void LiquidCrystal::write4bits(uint8_t value) {
  for (int i = 0; i < 4; i++) {
    pinMode(_data_pins[i], OUTPUT);
    10fc:	f8 01       	movw	r30, r16
    10fe:	87 81       	ldd	r24, Z+7	; 0x07
    1100:	61 e0       	ldi	r22, 0x01	; 1
    1102:	0e 94 bb 13 	call	0x2776	; 0x2776 <pinMode>
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
    1106:	b7 01       	movw	r22, r14
    1108:	0c 2e       	mov	r0, r28
    110a:	02 c0       	rjmp	.+4      	; 0x1110 <_ZN13LiquidCrystal10write4bitsEh+0x38>
    110c:	75 95       	asr	r23
    110e:	67 95       	ror	r22
    1110:	0a 94       	dec	r0
    1112:	e2 f7       	brpl	.-8      	; 0x110c <_ZN13LiquidCrystal10write4bitsEh+0x34>
    1114:	61 70       	andi	r22, 0x01	; 1
    1116:	f8 01       	movw	r30, r16
    1118:	87 81       	ldd	r24, Z+7	; 0x07
    111a:	0e 94 27 14 	call	0x284e	; 0x284e <digitalWrite>
  digitalWrite(_enable_pin, LOW);
  delayMicroseconds(100);   // commands need > 37us to settle
}

void LiquidCrystal::write4bits(uint8_t value) {
  for (int i = 0; i < 4; i++) {
    111e:	21 96       	adiw	r28, 0x01	; 1
    1120:	0f 5f       	subi	r16, 0xFF	; 255
    1122:	1f 4f       	sbci	r17, 0xFF	; 255
    1124:	c4 30       	cpi	r28, 0x04	; 4
    1126:	d1 05       	cpc	r29, r1
    1128:	49 f7       	brne	.-46     	; 0x10fc <_ZN13LiquidCrystal10write4bitsEh+0x24>
    pinMode(_data_pins[i], OUTPUT);
    digitalWrite(_data_pins[i], (value >> i) & 0x01);
  }

  pulseEnable();
    112a:	8d 2d       	mov	r24, r13
    112c:	9c 2d       	mov	r25, r12
    112e:	0e 94 15 08 	call	0x102a	; 0x102a <_ZN13LiquidCrystal11pulseEnableEv>
}
    1132:	df 91       	pop	r29
    1134:	cf 91       	pop	r28
    1136:	1f 91       	pop	r17
    1138:	0f 91       	pop	r16
    113a:	ff 90       	pop	r15
    113c:	ef 90       	pop	r14
    113e:	df 90       	pop	r13
    1140:	cf 90       	pop	r12
    1142:	08 95       	ret

00001144 <_ZN13LiquidCrystal4sendEhh>:
}

/************ low level data pushing commands **********/

// write either command or data, with automatic 4/8-bit selection
void LiquidCrystal::send(uint8_t value, uint8_t mode) {
    1144:	1f 93       	push	r17
    1146:	cf 93       	push	r28
    1148:	df 93       	push	r29
    114a:	ec 01       	movw	r28, r24
    114c:	16 2f       	mov	r17, r22
  digitalWrite(_rs_pin, mode);
    114e:	8c 81       	ldd	r24, Y+4	; 0x04
    1150:	64 2f       	mov	r22, r20
    1152:	0e 94 27 14 	call	0x284e	; 0x284e <digitalWrite>

  // if there is a RW pin indicated, set it low to Write
  if (_rw_pin != 255) { 
    1156:	8d 81       	ldd	r24, Y+5	; 0x05
    1158:	8f 3f       	cpi	r24, 0xFF	; 255
    115a:	19 f0       	breq	.+6      	; 0x1162 <_ZN13LiquidCrystal4sendEhh+0x1e>
    digitalWrite(_rw_pin, LOW);
    115c:	60 e0       	ldi	r22, 0x00	; 0
    115e:	0e 94 27 14 	call	0x284e	; 0x284e <digitalWrite>
  }
  
  if (_displayfunction & LCD_8BITMODE) {
    1162:	8f 85       	ldd	r24, Y+15	; 0x0f
    1164:	84 ff       	sbrs	r24, 4
    1166:	05 c0       	rjmp	.+10     	; 0x1172 <_ZN13LiquidCrystal4sendEhh+0x2e>
    write8bits(value); 
    1168:	ce 01       	movw	r24, r28
    116a:	61 2f       	mov	r22, r17
    116c:	0e 94 36 08 	call	0x106c	; 0x106c <_ZN13LiquidCrystal10write8bitsEh>
    1170:	0e c0       	rjmp	.+28     	; 0x118e <_ZN13LiquidCrystal4sendEhh+0x4a>
  } else {
    write4bits(value>>4);
    1172:	61 2f       	mov	r22, r17
    1174:	70 e0       	ldi	r23, 0x00	; 0
    1176:	84 e0       	ldi	r24, 0x04	; 4
    1178:	75 95       	asr	r23
    117a:	67 95       	ror	r22
    117c:	8a 95       	dec	r24
    117e:	e1 f7       	brne	.-8      	; 0x1178 <_ZN13LiquidCrystal4sendEhh+0x34>
    1180:	ce 01       	movw	r24, r28
    1182:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <_ZN13LiquidCrystal10write4bitsEh>
    write4bits(value);
    1186:	ce 01       	movw	r24, r28
    1188:	61 2f       	mov	r22, r17
    118a:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <_ZN13LiquidCrystal10write4bitsEh>
  }
}
    118e:	df 91       	pop	r29
    1190:	cf 91       	pop	r28
    1192:	1f 91       	pop	r17
    1194:	08 95       	ret

00001196 <_ZN13LiquidCrystal5writeEh>:
inline void LiquidCrystal::command(uint8_t value) {
  send(value, LOW);
}

inline size_t LiquidCrystal::write(uint8_t value) {
  send(value, HIGH);
    1196:	41 e0       	ldi	r20, 0x01	; 1
    1198:	0e 94 a2 08 	call	0x1144	; 0x1144 <_ZN13LiquidCrystal4sendEhh>
  return 1; // assume sucess
}
    119c:	81 e0       	ldi	r24, 0x01	; 1
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	08 95       	ret

000011a2 <_ZN13LiquidCrystal7commandEh>:
}

/*********** mid level commands, for sending data/cmds */

inline void LiquidCrystal::command(uint8_t value) {
  send(value, LOW);
    11a2:	40 e0       	ldi	r20, 0x00	; 0
    11a4:	0e 94 a2 08 	call	0x1144	; 0x1144 <_ZN13LiquidCrystal4sendEhh>
}
    11a8:	08 95       	ret

000011aa <_ZN13LiquidCrystal7displayEv>:
// Turn the display on/off (quickly)
void LiquidCrystal::noDisplay() {
  _displaycontrol &= ~LCD_DISPLAYON;
  command(LCD_DISPLAYCONTROL | _displaycontrol);
}
void LiquidCrystal::display() {
    11aa:	fc 01       	movw	r30, r24
  _displaycontrol |= LCD_DISPLAYON;
    11ac:	60 89       	ldd	r22, Z+16	; 0x10
    11ae:	86 2f       	mov	r24, r22
    11b0:	84 60       	ori	r24, 0x04	; 4
    11b2:	80 8b       	std	Z+16, r24	; 0x10
  command(LCD_DISPLAYCONTROL | _displaycontrol);
    11b4:	6c 60       	ori	r22, 0x0C	; 12
    11b6:	cf 01       	movw	r24, r30
    11b8:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <_ZN13LiquidCrystal7commandEh>
}
    11bc:	08 95       	ret

000011be <_ZN13LiquidCrystal9setCursorEhh>:
{
  command(LCD_RETURNHOME);  // set cursor position to zero
  delayMicroseconds(2000);  // this command takes a long time!
}

void LiquidCrystal::setCursor(uint8_t col, uint8_t row)
    11be:	df 93       	push	r29
    11c0:	cf 93       	push	r28
    11c2:	cd b7       	in	r28, 0x3d	; 61
    11c4:	de b7       	in	r29, 0x3e	; 62
    11c6:	28 97       	sbiw	r28, 0x08	; 8
    11c8:	0f b6       	in	r0, 0x3f	; 63
    11ca:	f8 94       	cli
    11cc:	de bf       	out	0x3e, r29	; 62
    11ce:	0f be       	out	0x3f, r0	; 63
    11d0:	cd bf       	out	0x3d, r28	; 61
    11d2:	9c 01       	movw	r18, r24
{
  int row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
    11d4:	fe 01       	movw	r30, r28
    11d6:	31 96       	adiw	r30, 0x01	; 1
    11d8:	a1 e8       	ldi	r26, 0x81	; 129
    11da:	b2 e0       	ldi	r27, 0x02	; 2
    11dc:	88 e0       	ldi	r24, 0x08	; 8
    11de:	0d 90       	ld	r0, X+
    11e0:	01 92       	st	Z+, r0
    11e2:	81 50       	subi	r24, 0x01	; 1
    11e4:	e1 f7       	brne	.-8      	; 0x11de <_ZN13LiquidCrystal9setCursorEhh+0x20>
  if ( row >= _numlines ) {
    11e6:	f9 01       	movw	r30, r18
    11e8:	83 89       	ldd	r24, Z+19	; 0x13
    11ea:	48 17       	cp	r20, r24
    11ec:	10 f0       	brcs	.+4      	; 0x11f2 <_ZN13LiquidCrystal9setCursorEhh+0x34>
    row = _numlines-1;    // we count rows starting w/0
    11ee:	48 2f       	mov	r20, r24
    11f0:	41 50       	subi	r20, 0x01	; 1
  }
  
  command(LCD_SETDDRAMADDR | (col + row_offsets[row]));
    11f2:	e4 2f       	mov	r30, r20
    11f4:	f0 e0       	ldi	r31, 0x00	; 0
    11f6:	ee 0f       	add	r30, r30
    11f8:	ff 1f       	adc	r31, r31
    11fa:	ec 0f       	add	r30, r28
    11fc:	fd 1f       	adc	r31, r29
    11fe:	81 81       	ldd	r24, Z+1	; 0x01
    1200:	68 0f       	add	r22, r24
    1202:	60 68       	ori	r22, 0x80	; 128
    1204:	c9 01       	movw	r24, r18
    1206:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <_ZN13LiquidCrystal7commandEh>
}
    120a:	28 96       	adiw	r28, 0x08	; 8
    120c:	0f b6       	in	r0, 0x3f	; 63
    120e:	f8 94       	cli
    1210:	de bf       	out	0x3e, r29	; 62
    1212:	0f be       	out	0x3f, r0	; 63
    1214:	cd bf       	out	0x3d, r28	; 61
    1216:	cf 91       	pop	r28
    1218:	df 91       	pop	r29
    121a:	08 95       	ret

0000121c <_ZN13LiquidCrystal5clearEv>:
}

/********** high level commands, for the user! */
void LiquidCrystal::clear()
{
  command(LCD_CLEARDISPLAY);  // clear display, set cursor position to zero
    121c:	61 e0       	ldi	r22, 0x01	; 1
    121e:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <_ZN13LiquidCrystal7commandEh>
  delayMicroseconds(2000);  // this command takes a long time!
    1222:	80 ed       	ldi	r24, 0xD0	; 208
    1224:	97 e0       	ldi	r25, 0x07	; 7
    1226:	0e 94 54 13 	call	0x26a8	; 0x26a8 <delayMicroseconds>
}
    122a:	08 95       	ret

0000122c <_ZN13LiquidCrystal5beginEhhh>:
    _displayfunction = LCD_8BITMODE | LCD_1LINE | LCD_5x8DOTS;
  
  begin(16, 1);  
}

void LiquidCrystal::begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {
    122c:	cf 93       	push	r28
    122e:	df 93       	push	r29
    1230:	ec 01       	movw	r28, r24
  if (lines > 1) {
    1232:	42 30       	cpi	r20, 0x02	; 2
    1234:	18 f0       	brcs	.+6      	; 0x123c <_ZN13LiquidCrystal5beginEhhh+0x10>
    _displayfunction |= LCD_2LINE;
    1236:	8f 85       	ldd	r24, Y+15	; 0x0f
    1238:	88 60       	ori	r24, 0x08	; 8
    123a:	8f 87       	std	Y+15, r24	; 0x0f
  }
  _numlines = lines;
    123c:	4b 8b       	std	Y+19, r20	; 0x13
  _currline = 0;
    123e:	1c 8a       	std	Y+20, r1	; 0x14

  // for some 1 line displays you can select a 10 pixel high font
  if ((dotsize != 0) && (lines == 1)) {
    1240:	22 23       	and	r18, r18
    1242:	29 f0       	breq	.+10     	; 0x124e <_ZN13LiquidCrystal5beginEhhh+0x22>
    1244:	41 30       	cpi	r20, 0x01	; 1
    1246:	19 f4       	brne	.+6      	; 0x124e <_ZN13LiquidCrystal5beginEhhh+0x22>
    _displayfunction |= LCD_5x10DOTS;
    1248:	8f 85       	ldd	r24, Y+15	; 0x0f
    124a:	84 60       	ori	r24, 0x04	; 4
    124c:	8f 87       	std	Y+15, r24	; 0x0f
  }

  // SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
  // according to datasheet, we need at least 40ms after power rises above 2.7V
  // before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
  delayMicroseconds(50000); 
    124e:	80 e5       	ldi	r24, 0x50	; 80
    1250:	93 ec       	ldi	r25, 0xC3	; 195
    1252:	0e 94 54 13 	call	0x26a8	; 0x26a8 <delayMicroseconds>
  // Now we pull both RS and R/W low to begin commands
  digitalWrite(_rs_pin, LOW);
    1256:	8c 81       	ldd	r24, Y+4	; 0x04
    1258:	60 e0       	ldi	r22, 0x00	; 0
    125a:	0e 94 27 14 	call	0x284e	; 0x284e <digitalWrite>
  digitalWrite(_enable_pin, LOW);
    125e:	8e 81       	ldd	r24, Y+6	; 0x06
    1260:	60 e0       	ldi	r22, 0x00	; 0
    1262:	0e 94 27 14 	call	0x284e	; 0x284e <digitalWrite>
  if (_rw_pin != 255) { 
    1266:	8d 81       	ldd	r24, Y+5	; 0x05
    1268:	8f 3f       	cpi	r24, 0xFF	; 255
    126a:	19 f0       	breq	.+6      	; 0x1272 <_ZN13LiquidCrystal5beginEhhh+0x46>
    digitalWrite(_rw_pin, LOW);
    126c:	60 e0       	ldi	r22, 0x00	; 0
    126e:	0e 94 27 14 	call	0x284e	; 0x284e <digitalWrite>
  }
  
  //put the LCD into 4 bit or 8 bit mode
  if (! (_displayfunction & LCD_8BITMODE)) {
    1272:	6f 85       	ldd	r22, Y+15	; 0x0f
    1274:	64 fd       	sbrc	r22, 4
    1276:	1d c0       	rjmp	.+58     	; 0x12b2 <_ZN13LiquidCrystal5beginEhhh+0x86>
    // this is according to the hitachi HD44780 datasheet
    // figure 24, pg 46

    // we start in 8bit mode, try to set 4 bit mode
    write4bits(0x03);
    1278:	ce 01       	movw	r24, r28
    127a:	63 e0       	ldi	r22, 0x03	; 3
    127c:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <_ZN13LiquidCrystal10write4bitsEh>
    delayMicroseconds(4500); // wait min 4.1ms
    1280:	84 e9       	ldi	r24, 0x94	; 148
    1282:	91 e1       	ldi	r25, 0x11	; 17
    1284:	0e 94 54 13 	call	0x26a8	; 0x26a8 <delayMicroseconds>

    // second try
    write4bits(0x03);
    1288:	ce 01       	movw	r24, r28
    128a:	63 e0       	ldi	r22, 0x03	; 3
    128c:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <_ZN13LiquidCrystal10write4bitsEh>
    delayMicroseconds(4500); // wait min 4.1ms
    1290:	84 e9       	ldi	r24, 0x94	; 148
    1292:	91 e1       	ldi	r25, 0x11	; 17
    1294:	0e 94 54 13 	call	0x26a8	; 0x26a8 <delayMicroseconds>
    
    // third go!
    write4bits(0x03); 
    1298:	ce 01       	movw	r24, r28
    129a:	63 e0       	ldi	r22, 0x03	; 3
    129c:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <_ZN13LiquidCrystal10write4bitsEh>
    delayMicroseconds(150);
    12a0:	86 e9       	ldi	r24, 0x96	; 150
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	0e 94 54 13 	call	0x26a8	; 0x26a8 <delayMicroseconds>

    // finally, set to 4-bit interface
    write4bits(0x02); 
    12a8:	ce 01       	movw	r24, r28
    12aa:	62 e0       	ldi	r22, 0x02	; 2
    12ac:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <_ZN13LiquidCrystal10write4bitsEh>
    12b0:	16 c0       	rjmp	.+44     	; 0x12de <_ZN13LiquidCrystal5beginEhhh+0xb2>
  } else {
    // this is according to the hitachi HD44780 datasheet
    // page 45 figure 23

    // Send function set command sequence
    command(LCD_FUNCTIONSET | _displayfunction);
    12b2:	60 62       	ori	r22, 0x20	; 32
    12b4:	ce 01       	movw	r24, r28
    12b6:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <_ZN13LiquidCrystal7commandEh>
    delayMicroseconds(4500);  // wait more than 4.1ms
    12ba:	84 e9       	ldi	r24, 0x94	; 148
    12bc:	91 e1       	ldi	r25, 0x11	; 17
    12be:	0e 94 54 13 	call	0x26a8	; 0x26a8 <delayMicroseconds>

    // second try
    command(LCD_FUNCTIONSET | _displayfunction);
    12c2:	6f 85       	ldd	r22, Y+15	; 0x0f
    12c4:	60 62       	ori	r22, 0x20	; 32
    12c6:	ce 01       	movw	r24, r28
    12c8:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <_ZN13LiquidCrystal7commandEh>
    delayMicroseconds(150);
    12cc:	86 e9       	ldi	r24, 0x96	; 150
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	0e 94 54 13 	call	0x26a8	; 0x26a8 <delayMicroseconds>

    // third go
    command(LCD_FUNCTIONSET | _displayfunction);
    12d4:	6f 85       	ldd	r22, Y+15	; 0x0f
    12d6:	60 62       	ori	r22, 0x20	; 32
    12d8:	ce 01       	movw	r24, r28
    12da:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <_ZN13LiquidCrystal7commandEh>
  }

  // finally, set # lines, font size, etc.
  command(LCD_FUNCTIONSET | _displayfunction);  
    12de:	6f 85       	ldd	r22, Y+15	; 0x0f
    12e0:	60 62       	ori	r22, 0x20	; 32
    12e2:	ce 01       	movw	r24, r28
    12e4:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <_ZN13LiquidCrystal7commandEh>

  // turn the display on with no cursor or blinking default
  _displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;  
    12e8:	84 e0       	ldi	r24, 0x04	; 4
    12ea:	88 8b       	std	Y+16, r24	; 0x10
  display();
    12ec:	ce 01       	movw	r24, r28
    12ee:	0e 94 d5 08 	call	0x11aa	; 0x11aa <_ZN13LiquidCrystal7displayEv>

  // clear it off
  clear();
    12f2:	ce 01       	movw	r24, r28
    12f4:	0e 94 0e 09 	call	0x121c	; 0x121c <_ZN13LiquidCrystal5clearEv>

  // Initialize to default text direction (for romance languages)
  _displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
    12f8:	82 e0       	ldi	r24, 0x02	; 2
    12fa:	89 8b       	std	Y+17, r24	; 0x11
  // set the entry mode
  command(LCD_ENTRYMODESET | _displaymode);
    12fc:	ce 01       	movw	r24, r28
    12fe:	66 e0       	ldi	r22, 0x06	; 6
    1300:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <_ZN13LiquidCrystal7commandEh>

}
    1304:	df 91       	pop	r29
    1306:	cf 91       	pop	r28
    1308:	08 95       	ret

0000130a <_ZN13LiquidCrystal4initEhhhhhhhhhhhh>:
  init(1, rs, 255, enable, d0, d1, d2, d3, 0, 0, 0, 0);
}

void LiquidCrystal::init(uint8_t fourbitmode, uint8_t rs, uint8_t rw, uint8_t enable,
			 uint8_t d0, uint8_t d1, uint8_t d2, uint8_t d3,
			 uint8_t d4, uint8_t d5, uint8_t d6, uint8_t d7)
    130a:	6f 92       	push	r6
    130c:	7f 92       	push	r7
    130e:	8f 92       	push	r8
    1310:	af 92       	push	r10
    1312:	cf 92       	push	r12
    1314:	ef 92       	push	r14
    1316:	0f 93       	push	r16
    1318:	1f 93       	push	r17
    131a:	df 93       	push	r29
    131c:	cf 93       	push	r28
    131e:	cd b7       	in	r28, 0x3d	; 61
    1320:	de b7       	in	r29, 0x3e	; 62
    1322:	3c 01       	movw	r6, r24
    1324:	16 2f       	mov	r17, r22
    1326:	84 2f       	mov	r24, r20
{
  _rs_pin = rs;
    1328:	f3 01       	movw	r30, r6
    132a:	44 83       	std	Z+4, r20	; 0x04
  _rw_pin = rw;
    132c:	25 83       	std	Z+5, r18	; 0x05
  _enable_pin = enable;
    132e:	06 83       	std	Z+6, r16	; 0x06
  
  _data_pins[0] = d0;
    1330:	e7 82       	std	Z+7, r14	; 0x07
  _data_pins[1] = d1;
    1332:	c0 86       	std	Z+8, r12	; 0x08
  _data_pins[2] = d2;
    1334:	a1 86       	std	Z+9, r10	; 0x09
  _data_pins[3] = d3; 
    1336:	82 86       	std	Z+10, r8	; 0x0a
  _data_pins[4] = d4;
    1338:	9d 85       	ldd	r25, Y+13	; 0x0d
    133a:	93 87       	std	Z+11, r25	; 0x0b
  _data_pins[5] = d5;
    133c:	9e 85       	ldd	r25, Y+14	; 0x0e
    133e:	94 87       	std	Z+12, r25	; 0x0c
  _data_pins[6] = d6;
    1340:	9f 85       	ldd	r25, Y+15	; 0x0f
    1342:	95 87       	std	Z+13, r25	; 0x0d
  _data_pins[7] = d7; 
    1344:	98 89       	ldd	r25, Y+16	; 0x10
    1346:	96 87       	std	Z+14, r25	; 0x0e

  pinMode(_rs_pin, OUTPUT);
    1348:	61 e0       	ldi	r22, 0x01	; 1
    134a:	0e 94 bb 13 	call	0x2776	; 0x2776 <pinMode>
  // we can save 1 pin by not using RW. Indicate by passing 255 instead of pin#
  if (_rw_pin != 255) { 
    134e:	f3 01       	movw	r30, r6
    1350:	85 81       	ldd	r24, Z+5	; 0x05
    1352:	8f 3f       	cpi	r24, 0xFF	; 255
    1354:	19 f0       	breq	.+6      	; 0x135c <_ZN13LiquidCrystal4initEhhhhhhhhhhhh+0x52>
    pinMode(_rw_pin, OUTPUT);
    1356:	61 e0       	ldi	r22, 0x01	; 1
    1358:	0e 94 bb 13 	call	0x2776	; 0x2776 <pinMode>
  }
  pinMode(_enable_pin, OUTPUT);
    135c:	f3 01       	movw	r30, r6
    135e:	86 81       	ldd	r24, Z+6	; 0x06
    1360:	61 e0       	ldi	r22, 0x01	; 1
    1362:	0e 94 bb 13 	call	0x2776	; 0x2776 <pinMode>
  
  if (fourbitmode)
    1366:	11 23       	and	r17, r17
    1368:	19 f0       	breq	.+6      	; 0x1370 <_ZN13LiquidCrystal4initEhhhhhhhhhhhh+0x66>
    _displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
    136a:	f3 01       	movw	r30, r6
    136c:	17 86       	std	Z+15, r1	; 0x0f
    136e:	03 c0       	rjmp	.+6      	; 0x1376 <_ZN13LiquidCrystal4initEhhhhhhhhhhhh+0x6c>
  else 
    _displayfunction = LCD_8BITMODE | LCD_1LINE | LCD_5x8DOTS;
    1370:	80 e1       	ldi	r24, 0x10	; 16
    1372:	f3 01       	movw	r30, r6
    1374:	87 87       	std	Z+15, r24	; 0x0f
  
  begin(16, 1);  
    1376:	c3 01       	movw	r24, r6
    1378:	60 e1       	ldi	r22, 0x10	; 16
    137a:	41 e0       	ldi	r20, 0x01	; 1
    137c:	20 e0       	ldi	r18, 0x00	; 0
    137e:	0e 94 16 09 	call	0x122c	; 0x122c <_ZN13LiquidCrystal5beginEhhh>
}
    1382:	cf 91       	pop	r28
    1384:	df 91       	pop	r29
    1386:	1f 91       	pop	r17
    1388:	0f 91       	pop	r16
    138a:	ef 90       	pop	r14
    138c:	cf 90       	pop	r12
    138e:	af 90       	pop	r10
    1390:	8f 90       	pop	r8
    1392:	7f 90       	pop	r7
    1394:	6f 90       	pop	r6
    1396:	08 95       	ret

00001398 <_ZN13LiquidCrystalC1Ehhhhhh>:
{
  init(1, rs, rw, enable, d0, d1, d2, d3, 0, 0, 0, 0);
}

LiquidCrystal::LiquidCrystal(uint8_t rs,  uint8_t enable,
			     uint8_t d0, uint8_t d1, uint8_t d2, uint8_t d3)
    1398:	8f 92       	push	r8
    139a:	af 92       	push	r10
    139c:	cf 92       	push	r12
    139e:	ef 92       	push	r14
    13a0:	0f 93       	push	r16
    13a2:	1f 93       	push	r17
    13a4:	cf 93       	push	r28
    13a6:	df 93       	push	r29
    13a8:	dc 01       	movw	r26, r24
    13aa:	36 2f       	mov	r19, r22
    13ac:	54 2f       	mov	r21, r20
    13ae:	72 2f       	mov	r23, r18
    13b0:	10 2f       	mov	r17, r16
    13b2:	ae 2c       	mov	r10, r14
    13b4:	8c 2c       	mov	r8, r12
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    13b6:	13 96       	adiw	r26, 0x03	; 3
    13b8:	1c 92       	st	X, r1
    13ba:	1e 92       	st	-X, r1
    13bc:	12 97       	sbiw	r26, 0x02	; 2
    13be:	8d e7       	ldi	r24, 0x7D	; 125
    13c0:	92 e0       	ldi	r25, 0x02	; 2
    13c2:	11 96       	adiw	r26, 0x01	; 1
    13c4:	9c 93       	st	X, r25
    13c6:	8e 93       	st	-X, r24
{
  init(1, rs, 255, enable, d0, d1, d2, d3, 0, 0, 0, 0);
    13c8:	00 d0       	rcall	.+0      	; 0x13ca <_ZN13LiquidCrystalC1Ehhhhhh+0x32>
    13ca:	00 d0       	rcall	.+0      	; 0x13cc <_ZN13LiquidCrystalC1Ehhhhhh+0x34>
    13cc:	ed b7       	in	r30, 0x3d	; 61
    13ce:	fe b7       	in	r31, 0x3e	; 62
    13d0:	31 96       	adiw	r30, 0x01	; 1
    13d2:	cd b7       	in	r28, 0x3d	; 61
    13d4:	de b7       	in	r29, 0x3e	; 62
    13d6:	19 82       	std	Y+1, r1	; 0x01
    13d8:	11 82       	std	Z+1, r1	; 0x01
    13da:	12 82       	std	Z+2, r1	; 0x02
    13dc:	13 82       	std	Z+3, r1	; 0x03
    13de:	cd 01       	movw	r24, r26
    13e0:	61 e0       	ldi	r22, 0x01	; 1
    13e2:	43 2f       	mov	r20, r19
    13e4:	2f ef       	ldi	r18, 0xFF	; 255
    13e6:	05 2f       	mov	r16, r21
    13e8:	e7 2e       	mov	r14, r23
    13ea:	c1 2e       	mov	r12, r17
    13ec:	0e 94 85 09 	call	0x130a	; 0x130a <_ZN13LiquidCrystal4initEhhhhhhhhhhhh>
    13f0:	0f 90       	pop	r0
    13f2:	0f 90       	pop	r0
    13f4:	0f 90       	pop	r0
    13f6:	0f 90       	pop	r0
}
    13f8:	df 91       	pop	r29
    13fa:	cf 91       	pop	r28
    13fc:	1f 91       	pop	r17
    13fe:	0f 91       	pop	r16
    1400:	ef 90       	pop	r14
    1402:	cf 90       	pop	r12
    1404:	af 90       	pop	r10
    1406:	8f 90       	pop	r8
    1408:	08 95       	ret

0000140a <_ZN3PID10SetTuningsEddd>:
/* SetTunings(...)*************************************************************
 * This function allows the controller's dynamic performance to be adjusted. 
 * it's called automatically from the constructor, but tunings can also
 * be adjusted on the fly during normal operation
 ******************************************************************************/ 
void PID::SetTunings(double Kp, double Ki, double Kd)
    140a:	2f 92       	push	r2
    140c:	3f 92       	push	r3
    140e:	4f 92       	push	r4
    1410:	5f 92       	push	r5
    1412:	6f 92       	push	r6
    1414:	7f 92       	push	r7
    1416:	8f 92       	push	r8
    1418:	9f 92       	push	r9
    141a:	af 92       	push	r10
    141c:	bf 92       	push	r11
    141e:	cf 92       	push	r12
    1420:	df 92       	push	r13
    1422:	ef 92       	push	r14
    1424:	ff 92       	push	r15
    1426:	0f 93       	push	r16
    1428:	1f 93       	push	r17
    142a:	df 93       	push	r29
    142c:	cf 93       	push	r28
    142e:	00 d0       	rcall	.+0      	; 0x1430 <_ZN3PID10SetTuningsEddd+0x26>
    1430:	00 d0       	rcall	.+0      	; 0x1432 <_ZN3PID10SetTuningsEddd+0x28>
    1432:	cd b7       	in	r28, 0x3d	; 61
    1434:	de b7       	in	r29, 0x3e	; 62
    1436:	1c 01       	movw	r2, r24
    1438:	49 83       	std	Y+1, r20	; 0x01
    143a:	5a 83       	std	Y+2, r21	; 0x02
    143c:	6b 83       	std	Y+3, r22	; 0x03
    143e:	7c 83       	std	Y+4, r23	; 0x04
    1440:	48 01       	movw	r8, r16
    1442:	59 01       	movw	r10, r18
    1444:	26 01       	movw	r4, r12
    1446:	37 01       	movw	r6, r14
{
   if (Kp<0 || Ki<0 || Kd<0) return;
    1448:	cb 01       	movw	r24, r22
    144a:	ba 01       	movw	r22, r20
    144c:	20 e0       	ldi	r18, 0x00	; 0
    144e:	30 e0       	ldi	r19, 0x00	; 0
    1450:	40 e0       	ldi	r20, 0x00	; 0
    1452:	50 e0       	ldi	r21, 0x00	; 0
    1454:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__ltsf2>
    1458:	87 fd       	sbrc	r24, 7
    145a:	8c c0       	rjmp	.+280    	; 0x1574 <_ZN3PID10SetTuningsEddd+0x16a>
    145c:	c5 01       	movw	r24, r10
    145e:	b4 01       	movw	r22, r8
    1460:	20 e0       	ldi	r18, 0x00	; 0
    1462:	30 e0       	ldi	r19, 0x00	; 0
    1464:	40 e0       	ldi	r20, 0x00	; 0
    1466:	50 e0       	ldi	r21, 0x00	; 0
    1468:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__ltsf2>
    146c:	87 fd       	sbrc	r24, 7
    146e:	82 c0       	rjmp	.+260    	; 0x1574 <_ZN3PID10SetTuningsEddd+0x16a>
    1470:	c7 01       	movw	r24, r14
    1472:	b6 01       	movw	r22, r12
    1474:	20 e0       	ldi	r18, 0x00	; 0
    1476:	30 e0       	ldi	r19, 0x00	; 0
    1478:	40 e0       	ldi	r20, 0x00	; 0
    147a:	50 e0       	ldi	r21, 0x00	; 0
    147c:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__ltsf2>
    1480:	87 fd       	sbrc	r24, 7
    1482:	78 c0       	rjmp	.+240    	; 0x1574 <_ZN3PID10SetTuningsEddd+0x16a>
 
   dispKp = Kp; dispKi = Ki; dispKd = Kd;
    1484:	89 81       	ldd	r24, Y+1	; 0x01
    1486:	9a 81       	ldd	r25, Y+2	; 0x02
    1488:	ab 81       	ldd	r26, Y+3	; 0x03
    148a:	bc 81       	ldd	r27, Y+4	; 0x04
    148c:	f1 01       	movw	r30, r2
    148e:	80 83       	st	Z, r24
    1490:	91 83       	std	Z+1, r25	; 0x01
    1492:	a2 83       	std	Z+2, r26	; 0x02
    1494:	b3 83       	std	Z+3, r27	; 0x03
    1496:	d1 01       	movw	r26, r2
    1498:	14 96       	adiw	r26, 0x04	; 4
    149a:	8d 92       	st	X+, r8
    149c:	9d 92       	st	X+, r9
    149e:	ad 92       	st	X+, r10
    14a0:	bc 92       	st	X, r11
    14a2:	17 97       	sbiw	r26, 0x07	; 7
    14a4:	c0 86       	std	Z+8, r12	; 0x08
    14a6:	d1 86       	std	Z+9, r13	; 0x09
    14a8:	e2 86       	std	Z+10, r14	; 0x0a
    14aa:	f3 86       	std	Z+11, r15	; 0x0b
   
   double SampleTimeInSec = ((double)SampleTime)/1000;  
    14ac:	64 a5       	ldd	r22, Z+44	; 0x2c
    14ae:	75 a5       	ldd	r23, Z+45	; 0x2d
    14b0:	86 a5       	ldd	r24, Z+46	; 0x2e
    14b2:	97 a5       	ldd	r25, Z+47	; 0x2f
    14b4:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__floatunsisf>
    14b8:	20 e0       	ldi	r18, 0x00	; 0
    14ba:	30 e0       	ldi	r19, 0x00	; 0
    14bc:	4a e7       	ldi	r20, 0x7A	; 122
    14be:	54 e4       	ldi	r21, 0x44	; 68
    14c0:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__divsf3>
    14c4:	7b 01       	movw	r14, r22
    14c6:	8c 01       	movw	r16, r24
   kp = Kp;
    14c8:	89 81       	ldd	r24, Y+1	; 0x01
    14ca:	9a 81       	ldd	r25, Y+2	; 0x02
    14cc:	ab 81       	ldd	r26, Y+3	; 0x03
    14ce:	bc 81       	ldd	r27, Y+4	; 0x04
    14d0:	f1 01       	movw	r30, r2
    14d2:	84 87       	std	Z+12, r24	; 0x0c
    14d4:	95 87       	std	Z+13, r25	; 0x0d
    14d6:	a6 87       	std	Z+14, r26	; 0x0e
    14d8:	b7 87       	std	Z+15, r27	; 0x0f
   ki = Ki * SampleTimeInSec;
    14da:	c5 01       	movw	r24, r10
    14dc:	b4 01       	movw	r22, r8
    14de:	a8 01       	movw	r20, r16
    14e0:	97 01       	movw	r18, r14
    14e2:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__mulsf3>
    14e6:	5b 01       	movw	r10, r22
    14e8:	6c 01       	movw	r12, r24
    14ea:	d1 01       	movw	r26, r2
    14ec:	50 96       	adiw	r26, 0x10	; 16
    14ee:	6d 93       	st	X+, r22
    14f0:	7d 93       	st	X+, r23
    14f2:	8d 93       	st	X+, r24
    14f4:	9c 93       	st	X, r25
    14f6:	53 97       	sbiw	r26, 0x13	; 19
   kd = Kd / SampleTimeInSec;
    14f8:	c3 01       	movw	r24, r6
    14fa:	b2 01       	movw	r22, r4
    14fc:	a8 01       	movw	r20, r16
    14fe:	97 01       	movw	r18, r14
    1500:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__divsf3>
    1504:	7b 01       	movw	r14, r22
    1506:	8c 01       	movw	r16, r24
    1508:	f1 01       	movw	r30, r2
    150a:	64 8b       	std	Z+20, r22	; 0x14
    150c:	75 8b       	std	Z+21, r23	; 0x15
    150e:	86 8b       	std	Z+22, r24	; 0x16
    1510:	97 8b       	std	Z+23, r25	; 0x17
 
  if(controllerDirection ==REVERSE)
    1512:	80 8d       	ldd	r24, Z+24	; 0x18
    1514:	91 8d       	ldd	r25, Z+25	; 0x19
    1516:	01 97       	sbiw	r24, 0x01	; 1
    1518:	69 f5       	brne	.+90     	; 0x1574 <_ZN3PID10SetTuningsEddd+0x16a>
   {
      kp = (0 - kp);
    151a:	60 e0       	ldi	r22, 0x00	; 0
    151c:	70 e0       	ldi	r23, 0x00	; 0
    151e:	80 e0       	ldi	r24, 0x00	; 0
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	29 81       	ldd	r18, Y+1	; 0x01
    1524:	3a 81       	ldd	r19, Y+2	; 0x02
    1526:	4b 81       	ldd	r20, Y+3	; 0x03
    1528:	5c 81       	ldd	r21, Y+4	; 0x04
    152a:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
    152e:	d1 01       	movw	r26, r2
    1530:	1c 96       	adiw	r26, 0x0c	; 12
    1532:	6d 93       	st	X+, r22
    1534:	7d 93       	st	X+, r23
    1536:	8d 93       	st	X+, r24
    1538:	9c 93       	st	X, r25
    153a:	1f 97       	sbiw	r26, 0x0f	; 15
      ki = (0 - ki);
    153c:	60 e0       	ldi	r22, 0x00	; 0
    153e:	70 e0       	ldi	r23, 0x00	; 0
    1540:	80 e0       	ldi	r24, 0x00	; 0
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	a6 01       	movw	r20, r12
    1546:	95 01       	movw	r18, r10
    1548:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
    154c:	f1 01       	movw	r30, r2
    154e:	60 8b       	std	Z+16, r22	; 0x10
    1550:	71 8b       	std	Z+17, r23	; 0x11
    1552:	82 8b       	std	Z+18, r24	; 0x12
    1554:	93 8b       	std	Z+19, r25	; 0x13
      kd = (0 - kd);
    1556:	60 e0       	ldi	r22, 0x00	; 0
    1558:	70 e0       	ldi	r23, 0x00	; 0
    155a:	80 e0       	ldi	r24, 0x00	; 0
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	a8 01       	movw	r20, r16
    1560:	97 01       	movw	r18, r14
    1562:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
    1566:	d1 01       	movw	r26, r2
    1568:	54 96       	adiw	r26, 0x14	; 20
    156a:	6d 93       	st	X+, r22
    156c:	7d 93       	st	X+, r23
    156e:	8d 93       	st	X+, r24
    1570:	9c 93       	st	X, r25
    1572:	57 97       	sbiw	r26, 0x17	; 23
   }
}
    1574:	0f 90       	pop	r0
    1576:	0f 90       	pop	r0
    1578:	0f 90       	pop	r0
    157a:	0f 90       	pop	r0
    157c:	cf 91       	pop	r28
    157e:	df 91       	pop	r29
    1580:	1f 91       	pop	r17
    1582:	0f 91       	pop	r16
    1584:	ff 90       	pop	r15
    1586:	ef 90       	pop	r14
    1588:	df 90       	pop	r13
    158a:	cf 90       	pop	r12
    158c:	bf 90       	pop	r11
    158e:	af 90       	pop	r10
    1590:	9f 90       	pop	r9
    1592:	8f 90       	pop	r8
    1594:	7f 90       	pop	r7
    1596:	6f 90       	pop	r6
    1598:	5f 90       	pop	r5
    159a:	4f 90       	pop	r4
    159c:	3f 90       	pop	r3
    159e:	2f 90       	pop	r2
    15a0:	08 95       	ret

000015a2 <_ZN3PID15SetOutputLimitsEdd>:
 *  the default already,)  the output will be a little different.  maybe they'll
 *  be doing a time window and will need 0-8000 or something.  or maybe they'll
 *  want to clamp it from 0-125.  who knows.  at any rate, that can all be done
 *  here.
 **************************************************************************/
void PID::SetOutputLimits(double Min, double Max)
    15a2:	4f 92       	push	r4
    15a4:	5f 92       	push	r5
    15a6:	6f 92       	push	r6
    15a8:	7f 92       	push	r7
    15aa:	8f 92       	push	r8
    15ac:	9f 92       	push	r9
    15ae:	af 92       	push	r10
    15b0:	bf 92       	push	r11
    15b2:	cf 92       	push	r12
    15b4:	df 92       	push	r13
    15b6:	ef 92       	push	r14
    15b8:	ff 92       	push	r15
    15ba:	0f 93       	push	r16
    15bc:	1f 93       	push	r17
    15be:	cf 93       	push	r28
    15c0:	df 93       	push	r29
    15c2:	ec 01       	movw	r28, r24
    15c4:	3a 01       	movw	r6, r20
    15c6:	4b 01       	movw	r8, r22
    15c8:	78 01       	movw	r14, r16
    15ca:	89 01       	movw	r16, r18
{
   if(Min >= Max) return;
    15cc:	cb 01       	movw	r24, r22
    15ce:	ba 01       	movw	r22, r20
    15d0:	a8 01       	movw	r20, r16
    15d2:	97 01       	movw	r18, r14
    15d4:	0e 94 3a 04 	call	0x874	; 0x874 <__gesf2>
    15d8:	87 ff       	sbrs	r24, 7
    15da:	4e c0       	rjmp	.+156    	; 0x1678 <_ZN3PID15SetOutputLimitsEdd+0xd6>
   outMin = Min;
    15dc:	68 aa       	std	Y+48, r6	; 0x30
    15de:	79 aa       	std	Y+49, r7	; 0x31
    15e0:	8a aa       	std	Y+50, r8	; 0x32
    15e2:	9b aa       	std	Y+51, r9	; 0x33
   outMax = Max;
    15e4:	ec aa       	std	Y+52, r14	; 0x34
    15e6:	fd aa       	std	Y+53, r15	; 0x35
    15e8:	0e ab       	std	Y+54, r16	; 0x36
    15ea:	1f ab       	std	Y+55, r17	; 0x37
 
   if(inAuto)
    15ec:	88 ad       	ldd	r24, Y+56	; 0x38
    15ee:	88 23       	and	r24, r24
    15f0:	09 f4       	brne	.+2      	; 0x15f4 <_ZN3PID15SetOutputLimitsEdd+0x52>
    15f2:	42 c0       	rjmp	.+132    	; 0x1678 <_ZN3PID15SetOutputLimitsEdd+0xd6>
   {
	   if(*myOutput > outMax) *myOutput = outMax;
    15f4:	4c 8c       	ldd	r4, Y+28	; 0x1c
    15f6:	5d 8c       	ldd	r5, Y+29	; 0x1d
    15f8:	f2 01       	movw	r30, r4
    15fa:	a0 80       	ld	r10, Z
    15fc:	b1 80       	ldd	r11, Z+1	; 0x01
    15fe:	c2 80       	ldd	r12, Z+2	; 0x02
    1600:	d3 80       	ldd	r13, Z+3	; 0x03
    1602:	c6 01       	movw	r24, r12
    1604:	b5 01       	movw	r22, r10
    1606:	a8 01       	movw	r20, r16
    1608:	97 01       	movw	r18, r14
    160a:	0e 94 0a 04 	call	0x814	; 0x814 <__gtsf2>
    160e:	18 16       	cp	r1, r24
    1610:	34 f4       	brge	.+12     	; 0x161e <_ZN3PID15SetOutputLimitsEdd+0x7c>
    1612:	f2 01       	movw	r30, r4
    1614:	e0 82       	st	Z, r14
    1616:	f1 82       	std	Z+1, r15	; 0x01
    1618:	02 83       	std	Z+2, r16	; 0x02
    161a:	13 83       	std	Z+3, r17	; 0x03
    161c:	0d c0       	rjmp	.+26     	; 0x1638 <_ZN3PID15SetOutputLimitsEdd+0x96>
	   else if(*myOutput < outMin) *myOutput = outMin;
    161e:	c6 01       	movw	r24, r12
    1620:	b5 01       	movw	r22, r10
    1622:	a4 01       	movw	r20, r8
    1624:	93 01       	movw	r18, r6
    1626:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__ltsf2>
    162a:	88 23       	and	r24, r24
    162c:	2c f4       	brge	.+10     	; 0x1638 <_ZN3PID15SetOutputLimitsEdd+0x96>
    162e:	f2 01       	movw	r30, r4
    1630:	60 82       	st	Z, r6
    1632:	71 82       	std	Z+1, r7	; 0x01
    1634:	82 82       	std	Z+2, r8	; 0x02
    1636:	93 82       	std	Z+3, r9	; 0x03
	 
	   if(ITerm > outMax) ITerm= outMax;
    1638:	ac a0       	ldd	r10, Y+36	; 0x24
    163a:	bd a0       	ldd	r11, Y+37	; 0x25
    163c:	ce a0       	ldd	r12, Y+38	; 0x26
    163e:	df a0       	ldd	r13, Y+39	; 0x27
    1640:	ec a8       	ldd	r14, Y+52	; 0x34
    1642:	fd a8       	ldd	r15, Y+53	; 0x35
    1644:	0e a9       	ldd	r16, Y+54	; 0x36
    1646:	1f a9       	ldd	r17, Y+55	; 0x37
    1648:	c6 01       	movw	r24, r12
    164a:	b5 01       	movw	r22, r10
    164c:	a8 01       	movw	r20, r16
    164e:	97 01       	movw	r18, r14
    1650:	0e 94 0a 04 	call	0x814	; 0x814 <__gtsf2>
    1654:	18 16       	cp	r1, r24
    1656:	64 f0       	brlt	.+24     	; 0x1670 <_ZN3PID15SetOutputLimitsEdd+0xce>
	   else if(ITerm < outMin) ITerm= outMin;
    1658:	e8 a8       	ldd	r14, Y+48	; 0x30
    165a:	f9 a8       	ldd	r15, Y+49	; 0x31
    165c:	0a a9       	ldd	r16, Y+50	; 0x32
    165e:	1b a9       	ldd	r17, Y+51	; 0x33
    1660:	c6 01       	movw	r24, r12
    1662:	b5 01       	movw	r22, r10
    1664:	a8 01       	movw	r20, r16
    1666:	97 01       	movw	r18, r14
    1668:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__ltsf2>
    166c:	88 23       	and	r24, r24
    166e:	24 f4       	brge	.+8      	; 0x1678 <_ZN3PID15SetOutputLimitsEdd+0xd6>
    1670:	ec a2       	std	Y+36, r14	; 0x24
    1672:	fd a2       	std	Y+37, r15	; 0x25
    1674:	0e a3       	std	Y+38, r16	; 0x26
    1676:	1f a3       	std	Y+39, r17	; 0x27
   }
}
    1678:	df 91       	pop	r29
    167a:	cf 91       	pop	r28
    167c:	1f 91       	pop	r17
    167e:	0f 91       	pop	r16
    1680:	ff 90       	pop	r15
    1682:	ef 90       	pop	r14
    1684:	df 90       	pop	r13
    1686:	cf 90       	pop	r12
    1688:	bf 90       	pop	r11
    168a:	af 90       	pop	r10
    168c:	9f 90       	pop	r9
    168e:	8f 90       	pop	r8
    1690:	7f 90       	pop	r7
    1692:	6f 90       	pop	r6
    1694:	5f 90       	pop	r5
    1696:	4f 90       	pop	r4
    1698:	08 95       	ret

0000169a <_ZN3PID10InitializeEv>:
 
/* Initialize()****************************************************************
 *	does all the things that need to happen to ensure a bumpless transfer
 *  from manual to automatic mode.
 ******************************************************************************/ 
void PID::Initialize()
    169a:	af 92       	push	r10
    169c:	bf 92       	push	r11
    169e:	cf 92       	push	r12
    16a0:	df 92       	push	r13
    16a2:	ef 92       	push	r14
    16a4:	ff 92       	push	r15
    16a6:	0f 93       	push	r16
    16a8:	1f 93       	push	r17
    16aa:	cf 93       	push	r28
    16ac:	df 93       	push	r29
    16ae:	ec 01       	movw	r28, r24
{
   ITerm = *myOutput;
    16b0:	ec 8d       	ldd	r30, Y+28	; 0x1c
    16b2:	fd 8d       	ldd	r31, Y+29	; 0x1d
    16b4:	e0 80       	ld	r14, Z
    16b6:	f1 80       	ldd	r15, Z+1	; 0x01
    16b8:	02 81       	ldd	r16, Z+2	; 0x02
    16ba:	13 81       	ldd	r17, Z+3	; 0x03
    16bc:	ec a2       	std	Y+36, r14	; 0x24
    16be:	fd a2       	std	Y+37, r15	; 0x25
    16c0:	0e a3       	std	Y+38, r16	; 0x26
    16c2:	1f a3       	std	Y+39, r17	; 0x27
   lastInput = *myInput;
    16c4:	ea 8d       	ldd	r30, Y+26	; 0x1a
    16c6:	fb 8d       	ldd	r31, Y+27	; 0x1b
    16c8:	80 81       	ld	r24, Z
    16ca:	91 81       	ldd	r25, Z+1	; 0x01
    16cc:	a2 81       	ldd	r26, Z+2	; 0x02
    16ce:	b3 81       	ldd	r27, Z+3	; 0x03
    16d0:	88 a7       	std	Y+40, r24	; 0x28
    16d2:	99 a7       	std	Y+41, r25	; 0x29
    16d4:	aa a7       	std	Y+42, r26	; 0x2a
    16d6:	bb a7       	std	Y+43, r27	; 0x2b
   if(ITerm > outMax) ITerm = outMax;
    16d8:	ac a8       	ldd	r10, Y+52	; 0x34
    16da:	bd a8       	ldd	r11, Y+53	; 0x35
    16dc:	ce a8       	ldd	r12, Y+54	; 0x36
    16de:	df a8       	ldd	r13, Y+55	; 0x37
    16e0:	c8 01       	movw	r24, r16
    16e2:	b7 01       	movw	r22, r14
    16e4:	a6 01       	movw	r20, r12
    16e6:	95 01       	movw	r18, r10
    16e8:	0e 94 0a 04 	call	0x814	; 0x814 <__gtsf2>
    16ec:	18 16       	cp	r1, r24
    16ee:	64 f0       	brlt	.+24     	; 0x1708 <_ZN3PID10InitializeEv+0x6e>
   else if(ITerm < outMin) ITerm = outMin;
    16f0:	a8 a8       	ldd	r10, Y+48	; 0x30
    16f2:	b9 a8       	ldd	r11, Y+49	; 0x31
    16f4:	ca a8       	ldd	r12, Y+50	; 0x32
    16f6:	db a8       	ldd	r13, Y+51	; 0x33
    16f8:	c8 01       	movw	r24, r16
    16fa:	b7 01       	movw	r22, r14
    16fc:	a6 01       	movw	r20, r12
    16fe:	95 01       	movw	r18, r10
    1700:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__ltsf2>
    1704:	88 23       	and	r24, r24
    1706:	24 f4       	brge	.+8      	; 0x1710 <_ZN3PID10InitializeEv+0x76>
    1708:	ac a2       	std	Y+36, r10	; 0x24
    170a:	bd a2       	std	Y+37, r11	; 0x25
    170c:	ce a2       	std	Y+38, r12	; 0x26
    170e:	df a2       	std	Y+39, r13	; 0x27
}
    1710:	df 91       	pop	r29
    1712:	cf 91       	pop	r28
    1714:	1f 91       	pop	r17
    1716:	0f 91       	pop	r16
    1718:	ff 90       	pop	r15
    171a:	ef 90       	pop	r14
    171c:	df 90       	pop	r13
    171e:	cf 90       	pop	r12
    1720:	bf 90       	pop	r11
    1722:	af 90       	pop	r10
    1724:	08 95       	ret

00001726 <_ZN3PID7SetModeEi>:
/* SetMode(...)****************************************************************
 * Allows the controller Mode to be set to manual (0) or Automatic (non-zero)
 * when the transition from manual to auto occurs, the controller is
 * automatically initialized
 ******************************************************************************/ 
void PID::SetMode(int Mode)
    1726:	1f 93       	push	r17
    1728:	cf 93       	push	r28
    172a:	df 93       	push	r29
    172c:	ec 01       	movw	r28, r24
{
    bool newAuto = (Mode == AUTOMATIC);
    172e:	10 e0       	ldi	r17, 0x00	; 0
    1730:	61 30       	cpi	r22, 0x01	; 1
    1732:	71 05       	cpc	r23, r1
    1734:	09 f4       	brne	.+2      	; 0x1738 <_ZN3PID7SetModeEi+0x12>
    1736:	11 e0       	ldi	r17, 0x01	; 1
    if(newAuto == !inAuto)
    1738:	88 ad       	ldd	r24, Y+56	; 0x38
    173a:	91 e0       	ldi	r25, 0x01	; 1
    173c:	89 27       	eor	r24, r25
    173e:	18 17       	cp	r17, r24
    1740:	19 f4       	brne	.+6      	; 0x1748 <_ZN3PID7SetModeEi+0x22>
    {  /*we just went from manual to auto*/
        PID::Initialize();
    1742:	ce 01       	movw	r24, r28
    1744:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN3PID10InitializeEv>
    }
    inAuto = newAuto;
    1748:	18 af       	std	Y+56, r17	; 0x38
}
    174a:	df 91       	pop	r29
    174c:	cf 91       	pop	r28
    174e:	1f 91       	pop	r17
    1750:	08 95       	ret

00001752 <_ZN3PID22SetControllerDirectionEi>:
 * The PID will either be connected to a DIRECT acting process (+Output leads 
 * to +Input) or a REVERSE acting process(+Output leads to -Input.)  we need to
 * know which one, because otherwise we may increase the output when we should
 * be decreasing.  This is called from the constructor.
 ******************************************************************************/
void PID::SetControllerDirection(int Direction)
    1752:	0f 93       	push	r16
    1754:	1f 93       	push	r17
    1756:	cf 93       	push	r28
    1758:	df 93       	push	r29
    175a:	ec 01       	movw	r28, r24
    175c:	8b 01       	movw	r16, r22
{
   if(inAuto && Direction !=controllerDirection)
    175e:	88 ad       	ldd	r24, Y+56	; 0x38
    1760:	88 23       	and	r24, r24
    1762:	79 f1       	breq	.+94     	; 0x17c2 <_ZN3PID22SetControllerDirectionEi+0x70>
    1764:	88 8d       	ldd	r24, Y+24	; 0x18
    1766:	99 8d       	ldd	r25, Y+25	; 0x19
    1768:	68 17       	cp	r22, r24
    176a:	79 07       	cpc	r23, r25
    176c:	51 f1       	breq	.+84     	; 0x17c2 <_ZN3PID22SetControllerDirectionEi+0x70>
   {
	  kp = (0 - kp);
    176e:	60 e0       	ldi	r22, 0x00	; 0
    1770:	70 e0       	ldi	r23, 0x00	; 0
    1772:	80 e0       	ldi	r24, 0x00	; 0
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	2c 85       	ldd	r18, Y+12	; 0x0c
    1778:	3d 85       	ldd	r19, Y+13	; 0x0d
    177a:	4e 85       	ldd	r20, Y+14	; 0x0e
    177c:	5f 85       	ldd	r21, Y+15	; 0x0f
    177e:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
    1782:	6c 87       	std	Y+12, r22	; 0x0c
    1784:	7d 87       	std	Y+13, r23	; 0x0d
    1786:	8e 87       	std	Y+14, r24	; 0x0e
    1788:	9f 87       	std	Y+15, r25	; 0x0f
      ki = (0 - ki);
    178a:	60 e0       	ldi	r22, 0x00	; 0
    178c:	70 e0       	ldi	r23, 0x00	; 0
    178e:	80 e0       	ldi	r24, 0x00	; 0
    1790:	90 e0       	ldi	r25, 0x00	; 0
    1792:	28 89       	ldd	r18, Y+16	; 0x10
    1794:	39 89       	ldd	r19, Y+17	; 0x11
    1796:	4a 89       	ldd	r20, Y+18	; 0x12
    1798:	5b 89       	ldd	r21, Y+19	; 0x13
    179a:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
    179e:	68 8b       	std	Y+16, r22	; 0x10
    17a0:	79 8b       	std	Y+17, r23	; 0x11
    17a2:	8a 8b       	std	Y+18, r24	; 0x12
    17a4:	9b 8b       	std	Y+19, r25	; 0x13
      kd = (0 - kd);
    17a6:	60 e0       	ldi	r22, 0x00	; 0
    17a8:	70 e0       	ldi	r23, 0x00	; 0
    17aa:	80 e0       	ldi	r24, 0x00	; 0
    17ac:	90 e0       	ldi	r25, 0x00	; 0
    17ae:	2c 89       	ldd	r18, Y+20	; 0x14
    17b0:	3d 89       	ldd	r19, Y+21	; 0x15
    17b2:	4e 89       	ldd	r20, Y+22	; 0x16
    17b4:	5f 89       	ldd	r21, Y+23	; 0x17
    17b6:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
    17ba:	6c 8b       	std	Y+20, r22	; 0x14
    17bc:	7d 8b       	std	Y+21, r23	; 0x15
    17be:	8e 8b       	std	Y+22, r24	; 0x16
    17c0:	9f 8b       	std	Y+23, r25	; 0x17
   }   
   controllerDirection = Direction;
    17c2:	19 8f       	std	Y+25, r17	; 0x19
    17c4:	08 8f       	std	Y+24, r16	; 0x18
}
    17c6:	df 91       	pop	r29
    17c8:	cf 91       	pop	r28
    17ca:	1f 91       	pop	r17
    17cc:	0f 91       	pop	r16
    17ce:	08 95       	ret

000017d0 <_ZN3PID7ComputeEv>:
 *     This, as they say, is where the magic happens.  this function should be called
 *   every time "void loop()" executes.  the function will decide for itself whether a new
 *   pid Output needs to be computed.  returns true when the output is computed,
 *   false when nothing has been done.
 **********************************************************************************/ 
bool PID::Compute()
    17d0:	2f 92       	push	r2
    17d2:	3f 92       	push	r3
    17d4:	4f 92       	push	r4
    17d6:	5f 92       	push	r5
    17d8:	6f 92       	push	r6
    17da:	7f 92       	push	r7
    17dc:	8f 92       	push	r8
    17de:	9f 92       	push	r9
    17e0:	af 92       	push	r10
    17e2:	bf 92       	push	r11
    17e4:	cf 92       	push	r12
    17e6:	df 92       	push	r13
    17e8:	ef 92       	push	r14
    17ea:	ff 92       	push	r15
    17ec:	0f 93       	push	r16
    17ee:	1f 93       	push	r17
    17f0:	df 93       	push	r29
    17f2:	cf 93       	push	r28
    17f4:	00 d0       	rcall	.+0      	; 0x17f6 <_ZN3PID7ComputeEv+0x26>
    17f6:	00 d0       	rcall	.+0      	; 0x17f8 <_ZN3PID7ComputeEv+0x28>
    17f8:	00 d0       	rcall	.+0      	; 0x17fa <_ZN3PID7ComputeEv+0x2a>
    17fa:	cd b7       	in	r28, 0x3d	; 61
    17fc:	de b7       	in	r29, 0x3e	; 62
    17fe:	9e 83       	std	Y+6, r25	; 0x06
    1800:	8d 83       	std	Y+5, r24	; 0x05
{
   if(!inAuto) return false;
    1802:	dc 01       	movw	r26, r24
    1804:	d8 96       	adiw	r26, 0x38	; 56
    1806:	8c 91       	ld	r24, X
    1808:	88 23       	and	r24, r24
    180a:	09 f4       	brne	.+2      	; 0x180e <_ZN3PID7ComputeEv+0x3e>
    180c:	e5 c0       	rjmp	.+458    	; 0x19d8 <_ZN3PID7ComputeEv+0x208>
   unsigned long now = millis();
    180e:	0e 94 fa 12 	call	0x25f4	; 0x25f4 <millis>
    1812:	69 83       	std	Y+1, r22	; 0x01
    1814:	7a 83       	std	Y+2, r23	; 0x02
    1816:	8b 83       	std	Y+3, r24	; 0x03
    1818:	9c 83       	std	Y+4, r25	; 0x04
   unsigned long timeChange = (now - lastTime);
   if(timeChange>=SampleTime)
    181a:	ed 81       	ldd	r30, Y+5	; 0x05
    181c:	fe 81       	ldd	r31, Y+6	; 0x06
    181e:	80 a1       	ldd	r24, Z+32	; 0x20
    1820:	91 a1       	ldd	r25, Z+33	; 0x21
    1822:	a2 a1       	ldd	r26, Z+34	; 0x22
    1824:	b3 a1       	ldd	r27, Z+35	; 0x23
    1826:	29 81       	ldd	r18, Y+1	; 0x01
    1828:	3a 81       	ldd	r19, Y+2	; 0x02
    182a:	4b 81       	ldd	r20, Y+3	; 0x03
    182c:	5c 81       	ldd	r21, Y+4	; 0x04
    182e:	28 1b       	sub	r18, r24
    1830:	39 0b       	sbc	r19, r25
    1832:	4a 0b       	sbc	r20, r26
    1834:	5b 0b       	sbc	r21, r27
    1836:	84 a5       	ldd	r24, Z+44	; 0x2c
    1838:	95 a5       	ldd	r25, Z+45	; 0x2d
    183a:	a6 a5       	ldd	r26, Z+46	; 0x2e
    183c:	b7 a5       	ldd	r27, Z+47	; 0x2f
    183e:	28 17       	cp	r18, r24
    1840:	39 07       	cpc	r19, r25
    1842:	4a 07       	cpc	r20, r26
    1844:	5b 07       	cpc	r21, r27
    1846:	08 f4       	brcc	.+2      	; 0x184a <_ZN3PID7ComputeEv+0x7a>
    1848:	c7 c0       	rjmp	.+398    	; 0x19d8 <_ZN3PID7ComputeEv+0x208>
   {
      /*Compute all the working error variables*/
	  double input = *myInput;
    184a:	02 8c       	ldd	r0, Z+26	; 0x1a
    184c:	f3 8d       	ldd	r31, Z+27	; 0x1b
    184e:	e0 2d       	mov	r30, r0
    1850:	20 80       	ld	r2, Z
    1852:	31 80       	ldd	r3, Z+1	; 0x01
    1854:	42 80       	ldd	r4, Z+2	; 0x02
    1856:	53 80       	ldd	r5, Z+3	; 0x03
      double error = *mySetpoint - input;
    1858:	ad 81       	ldd	r26, Y+5	; 0x05
    185a:	be 81       	ldd	r27, Y+6	; 0x06
    185c:	5e 96       	adiw	r26, 0x1e	; 30
    185e:	ed 91       	ld	r30, X+
    1860:	fc 91       	ld	r31, X
    1862:	5f 97       	sbiw	r26, 0x1f	; 31
    1864:	60 81       	ld	r22, Z
    1866:	71 81       	ldd	r23, Z+1	; 0x01
    1868:	82 81       	ldd	r24, Z+2	; 0x02
    186a:	93 81       	ldd	r25, Z+3	; 0x03
    186c:	a2 01       	movw	r20, r4
    186e:	91 01       	movw	r18, r2
    1870:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
    1874:	3b 01       	movw	r6, r22
    1876:	4c 01       	movw	r8, r24
      ITerm+= (ki * error);
    1878:	ed 81       	ldd	r30, Y+5	; 0x05
    187a:	fe 81       	ldd	r31, Y+6	; 0x06
    187c:	20 89       	ldd	r18, Z+16	; 0x10
    187e:	31 89       	ldd	r19, Z+17	; 0x11
    1880:	42 89       	ldd	r20, Z+18	; 0x12
    1882:	53 89       	ldd	r21, Z+19	; 0x13
    1884:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__mulsf3>
    1888:	ad 81       	ldd	r26, Y+5	; 0x05
    188a:	be 81       	ldd	r27, Y+6	; 0x06
    188c:	94 96       	adiw	r26, 0x24	; 36
    188e:	2d 91       	ld	r18, X+
    1890:	3d 91       	ld	r19, X+
    1892:	4d 91       	ld	r20, X+
    1894:	5c 91       	ld	r21, X
    1896:	97 97       	sbiw	r26, 0x27	; 39
    1898:	0e 94 37 02 	call	0x46e	; 0x46e <__addsf3>
    189c:	7b 01       	movw	r14, r22
    189e:	8c 01       	movw	r16, r24
    18a0:	ed 81       	ldd	r30, Y+5	; 0x05
    18a2:	fe 81       	ldd	r31, Y+6	; 0x06
    18a4:	64 a3       	std	Z+36, r22	; 0x24
    18a6:	75 a3       	std	Z+37, r23	; 0x25
    18a8:	86 a3       	std	Z+38, r24	; 0x26
    18aa:	97 a3       	std	Z+39, r25	; 0x27
      if(ITerm > outMax) ITerm= outMax;
    18ac:	a4 a8       	ldd	r10, Z+52	; 0x34
    18ae:	b5 a8       	ldd	r11, Z+53	; 0x35
    18b0:	c6 a8       	ldd	r12, Z+54	; 0x36
    18b2:	d7 a8       	ldd	r13, Z+55	; 0x37
    18b4:	a6 01       	movw	r20, r12
    18b6:	95 01       	movw	r18, r10
    18b8:	0e 94 0a 04 	call	0x814	; 0x814 <__gtsf2>
    18bc:	18 16       	cp	r1, r24
    18be:	74 f0       	brlt	.+28     	; 0x18dc <_ZN3PID7ComputeEv+0x10c>
      else if(ITerm < outMin) ITerm= outMin;
    18c0:	ed 81       	ldd	r30, Y+5	; 0x05
    18c2:	fe 81       	ldd	r31, Y+6	; 0x06
    18c4:	a0 a8       	ldd	r10, Z+48	; 0x30
    18c6:	b1 a8       	ldd	r11, Z+49	; 0x31
    18c8:	c2 a8       	ldd	r12, Z+50	; 0x32
    18ca:	d3 a8       	ldd	r13, Z+51	; 0x33
    18cc:	c8 01       	movw	r24, r16
    18ce:	b7 01       	movw	r22, r14
    18d0:	a6 01       	movw	r20, r12
    18d2:	95 01       	movw	r18, r10
    18d4:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__ltsf2>
    18d8:	88 23       	and	r24, r24
    18da:	44 f4       	brge	.+16     	; 0x18ec <_ZN3PID7ComputeEv+0x11c>
    18dc:	ad 81       	ldd	r26, Y+5	; 0x05
    18de:	be 81       	ldd	r27, Y+6	; 0x06
    18e0:	94 96       	adiw	r26, 0x24	; 36
    18e2:	ad 92       	st	X+, r10
    18e4:	bd 92       	st	X+, r11
    18e6:	cd 92       	st	X+, r12
    18e8:	dc 92       	st	X, r13
    18ea:	97 97       	sbiw	r26, 0x27	; 39
      double dInput = (input - lastInput);
 
      /*Compute PID Output*/
      double output = kp * error + ITerm- kd * dInput;
    18ec:	c4 01       	movw	r24, r8
    18ee:	b3 01       	movw	r22, r6
    18f0:	ed 81       	ldd	r30, Y+5	; 0x05
    18f2:	fe 81       	ldd	r31, Y+6	; 0x06
    18f4:	24 85       	ldd	r18, Z+12	; 0x0c
    18f6:	35 85       	ldd	r19, Z+13	; 0x0d
    18f8:	46 85       	ldd	r20, Z+14	; 0x0e
    18fa:	57 85       	ldd	r21, Z+15	; 0x0f
    18fc:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__mulsf3>
    1900:	ad 81       	ldd	r26, Y+5	; 0x05
    1902:	be 81       	ldd	r27, Y+6	; 0x06
    1904:	94 96       	adiw	r26, 0x24	; 36
    1906:	2d 91       	ld	r18, X+
    1908:	3d 91       	ld	r19, X+
    190a:	4d 91       	ld	r20, X+
    190c:	5c 91       	ld	r21, X
    190e:	97 97       	sbiw	r26, 0x27	; 39
    1910:	0e 94 37 02 	call	0x46e	; 0x46e <__addsf3>
    1914:	7b 01       	movw	r14, r22
    1916:	8c 01       	movw	r16, r24
    1918:	c2 01       	movw	r24, r4
    191a:	b1 01       	movw	r22, r2
    191c:	ed 81       	ldd	r30, Y+5	; 0x05
    191e:	fe 81       	ldd	r31, Y+6	; 0x06
    1920:	20 a5       	ldd	r18, Z+40	; 0x28
    1922:	31 a5       	ldd	r19, Z+41	; 0x29
    1924:	42 a5       	ldd	r20, Z+42	; 0x2a
    1926:	53 a5       	ldd	r21, Z+43	; 0x2b
    1928:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
    192c:	ad 81       	ldd	r26, Y+5	; 0x05
    192e:	be 81       	ldd	r27, Y+6	; 0x06
    1930:	54 96       	adiw	r26, 0x14	; 20
    1932:	2d 91       	ld	r18, X+
    1934:	3d 91       	ld	r19, X+
    1936:	4d 91       	ld	r20, X+
    1938:	5c 91       	ld	r21, X
    193a:	57 97       	sbiw	r26, 0x17	; 23
    193c:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__mulsf3>
    1940:	9b 01       	movw	r18, r22
    1942:	ac 01       	movw	r20, r24
    1944:	c8 01       	movw	r24, r16
    1946:	b7 01       	movw	r22, r14
    1948:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
    194c:	7b 01       	movw	r14, r22
    194e:	8c 01       	movw	r16, r24
      
	  if(output > outMax) output = outMax;
    1950:	ed 81       	ldd	r30, Y+5	; 0x05
    1952:	fe 81       	ldd	r31, Y+6	; 0x06
    1954:	d4 a8       	ldd	r13, Z+52	; 0x34
    1956:	c5 a8       	ldd	r12, Z+53	; 0x35
    1958:	b6 a8       	ldd	r11, Z+54	; 0x36
    195a:	a7 a8       	ldd	r10, Z+55	; 0x37
    195c:	2d 2d       	mov	r18, r13
    195e:	3c 2d       	mov	r19, r12
    1960:	4b 2d       	mov	r20, r11
    1962:	5a 2d       	mov	r21, r10
    1964:	0e 94 0a 04 	call	0x814	; 0x814 <__gtsf2>
    1968:	18 16       	cp	r1, r24
    196a:	bc f0       	brlt	.+46     	; 0x199a <_ZN3PID7ComputeEv+0x1ca>
      else if(output < outMin) output = outMin;
    196c:	ad 81       	ldd	r26, Y+5	; 0x05
    196e:	be 81       	ldd	r27, Y+6	; 0x06
    1970:	d0 96       	adiw	r26, 0x30	; 48
    1972:	dc 90       	ld	r13, X
    1974:	d0 97       	sbiw	r26, 0x30	; 48
    1976:	d1 96       	adiw	r26, 0x31	; 49
    1978:	cc 90       	ld	r12, X
    197a:	d1 97       	sbiw	r26, 0x31	; 49
    197c:	d2 96       	adiw	r26, 0x32	; 50
    197e:	bc 90       	ld	r11, X
    1980:	d2 97       	sbiw	r26, 0x32	; 50
    1982:	d3 96       	adiw	r26, 0x33	; 51
    1984:	ac 90       	ld	r10, X
    1986:	c8 01       	movw	r24, r16
    1988:	b7 01       	movw	r22, r14
    198a:	2d 2d       	mov	r18, r13
    198c:	3c 2d       	mov	r19, r12
    198e:	4b 2d       	mov	r20, r11
    1990:	5a 2d       	mov	r21, r10
    1992:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__ltsf2>
    1996:	88 23       	and	r24, r24
    1998:	34 f4       	brge	.+12     	; 0x19a6 <_ZN3PID7ComputeEv+0x1d6>
    199a:	8d 2d       	mov	r24, r13
    199c:	9c 2d       	mov	r25, r12
    199e:	ab 2d       	mov	r26, r11
    19a0:	ba 2d       	mov	r27, r10
    19a2:	7c 01       	movw	r14, r24
    19a4:	8d 01       	movw	r16, r26
	  *myOutput = output;
    19a6:	ad 81       	ldd	r26, Y+5	; 0x05
    19a8:	be 81       	ldd	r27, Y+6	; 0x06
    19aa:	5c 96       	adiw	r26, 0x1c	; 28
    19ac:	ed 91       	ld	r30, X+
    19ae:	fc 91       	ld	r31, X
    19b0:	5d 97       	sbiw	r26, 0x1d	; 29
    19b2:	e0 82       	st	Z, r14
    19b4:	f1 82       	std	Z+1, r15	; 0x01
    19b6:	02 83       	std	Z+2, r16	; 0x02
    19b8:	13 83       	std	Z+3, r17	; 0x03
	  
      /*Remember some variables for next time*/
      lastInput = input;
    19ba:	fd 01       	movw	r30, r26
    19bc:	20 a6       	std	Z+40, r2	; 0x28
    19be:	31 a6       	std	Z+41, r3	; 0x29
    19c0:	42 a6       	std	Z+42, r4	; 0x2a
    19c2:	53 a6       	std	Z+43, r5	; 0x2b
      lastTime = now;
    19c4:	89 81       	ldd	r24, Y+1	; 0x01
    19c6:	9a 81       	ldd	r25, Y+2	; 0x02
    19c8:	ab 81       	ldd	r26, Y+3	; 0x03
    19ca:	bc 81       	ldd	r27, Y+4	; 0x04
    19cc:	80 a3       	std	Z+32, r24	; 0x20
    19ce:	91 a3       	std	Z+33, r25	; 0x21
    19d0:	a2 a3       	std	Z+34, r26	; 0x22
    19d2:	b3 a3       	std	Z+35, r27	; 0x23
    19d4:	81 e0       	ldi	r24, 0x01	; 1
    19d6:	01 c0       	rjmp	.+2      	; 0x19da <_ZN3PID7ComputeEv+0x20a>
	  return true;
    19d8:	80 e0       	ldi	r24, 0x00	; 0
   }
   else return false;
}
    19da:	26 96       	adiw	r28, 0x06	; 6
    19dc:	0f b6       	in	r0, 0x3f	; 63
    19de:	f8 94       	cli
    19e0:	de bf       	out	0x3e, r29	; 62
    19e2:	0f be       	out	0x3f, r0	; 63
    19e4:	cd bf       	out	0x3d, r28	; 61
    19e6:	cf 91       	pop	r28
    19e8:	df 91       	pop	r29
    19ea:	1f 91       	pop	r17
    19ec:	0f 91       	pop	r16
    19ee:	ff 90       	pop	r15
    19f0:	ef 90       	pop	r14
    19f2:	df 90       	pop	r13
    19f4:	cf 90       	pop	r12
    19f6:	bf 90       	pop	r11
    19f8:	af 90       	pop	r10
    19fa:	9f 90       	pop	r9
    19fc:	8f 90       	pop	r8
    19fe:	7f 90       	pop	r7
    1a00:	6f 90       	pop	r6
    1a02:	5f 90       	pop	r5
    1a04:	4f 90       	pop	r4
    1a06:	3f 90       	pop	r3
    1a08:	2f 90       	pop	r2
    1a0a:	08 95       	ret

00001a0c <_ZN3PIDC1EPdS0_S0_dddi>:
/*Constructor (...)*********************************************************
 *    The parameters specified here are those for for which we can't set up 
 *    reliable defaults, so we need to have the user set them.
 ***************************************************************************/
PID::PID(double* Input, double* Output, double* Setpoint,
        double Kp, double Ki, double Kd, int ControllerDirection)
    1a0c:	4f 92       	push	r4
    1a0e:	5f 92       	push	r5
    1a10:	6f 92       	push	r6
    1a12:	7f 92       	push	r7
    1a14:	8f 92       	push	r8
    1a16:	9f 92       	push	r9
    1a18:	af 92       	push	r10
    1a1a:	bf 92       	push	r11
    1a1c:	cf 92       	push	r12
    1a1e:	df 92       	push	r13
    1a20:	ef 92       	push	r14
    1a22:	ff 92       	push	r15
    1a24:	0f 93       	push	r16
    1a26:	1f 93       	push	r17
    1a28:	df 93       	push	r29
    1a2a:	cf 93       	push	r28
    1a2c:	cd b7       	in	r28, 0x3d	; 61
    1a2e:	de b7       	in	r29, 0x3e	; 62
    1a30:	4c 01       	movw	r8, r24
    1a32:	27 01       	movw	r4, r14
    1a34:	38 01       	movw	r6, r16
{
	
    myOutput = Output;
    1a36:	fc 01       	movw	r30, r24
    1a38:	55 8f       	std	Z+29, r21	; 0x1d
    1a3a:	44 8f       	std	Z+28, r20	; 0x1c
    myInput = Input;
    1a3c:	73 8f       	std	Z+27, r23	; 0x1b
    1a3e:	62 8f       	std	Z+26, r22	; 0x1a
    mySetpoint = Setpoint;
    1a40:	37 8f       	std	Z+31, r19	; 0x1f
    1a42:	26 8f       	std	Z+30, r18	; 0x1e
	inAuto = false;
    1a44:	10 ae       	std	Z+56, r1	; 0x38
	
	PID::SetOutputLimits(0, 255);				//default output limit corresponds to 
    1a46:	40 e0       	ldi	r20, 0x00	; 0
    1a48:	50 e0       	ldi	r21, 0x00	; 0
    1a4a:	60 e0       	ldi	r22, 0x00	; 0
    1a4c:	70 e0       	ldi	r23, 0x00	; 0
    1a4e:	00 e0       	ldi	r16, 0x00	; 0
    1a50:	10 e0       	ldi	r17, 0x00	; 0
    1a52:	2f e7       	ldi	r18, 0x7F	; 127
    1a54:	33 e4       	ldi	r19, 0x43	; 67
    1a56:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <_ZN3PID15SetOutputLimitsEdd>
												//the arduino pwm limits

    SampleTime = 100;							//default Controller Sample Time is 0.1 seconds
    1a5a:	84 e6       	ldi	r24, 0x64	; 100
    1a5c:	90 e0       	ldi	r25, 0x00	; 0
    1a5e:	a0 e0       	ldi	r26, 0x00	; 0
    1a60:	b0 e0       	ldi	r27, 0x00	; 0
    1a62:	f4 01       	movw	r30, r8
    1a64:	84 a7       	std	Z+44, r24	; 0x2c
    1a66:	95 a7       	std	Z+45, r25	; 0x2d
    1a68:	a6 a7       	std	Z+46, r26	; 0x2e
    1a6a:	b7 a7       	std	Z+47, r27	; 0x2f

    PID::SetControllerDirection(ControllerDirection);
    1a6c:	c4 01       	movw	r24, r8
    1a6e:	6f 89       	ldd	r22, Y+23	; 0x17
    1a70:	78 8d       	ldd	r23, Y+24	; 0x18
    1a72:	0e 94 a9 0b 	call	0x1752	; 0x1752 <_ZN3PID22SetControllerDirectionEi>
    PID::SetTunings(Kp, Ki, Kd);
    1a76:	c4 01       	movw	r24, r8
    1a78:	b3 01       	movw	r22, r6
    1a7a:	a2 01       	movw	r20, r4
    1a7c:	96 01       	movw	r18, r12
    1a7e:	85 01       	movw	r16, r10
    1a80:	cb 88       	ldd	r12, Y+19	; 0x13
    1a82:	dc 88       	ldd	r13, Y+20	; 0x14
    1a84:	ed 88       	ldd	r14, Y+21	; 0x15
    1a86:	fe 88       	ldd	r15, Y+22	; 0x16
    1a88:	0e 94 05 0a 	call	0x140a	; 0x140a <_ZN3PID10SetTuningsEddd>

    lastTime = millis()-SampleTime;				
    1a8c:	0e 94 fa 12 	call	0x25f4	; 0x25f4 <millis>
    1a90:	f4 01       	movw	r30, r8
    1a92:	24 a5       	ldd	r18, Z+44	; 0x2c
    1a94:	35 a5       	ldd	r19, Z+45	; 0x2d
    1a96:	46 a5       	ldd	r20, Z+46	; 0x2e
    1a98:	57 a5       	ldd	r21, Z+47	; 0x2f
    1a9a:	62 1b       	sub	r22, r18
    1a9c:	73 0b       	sbc	r23, r19
    1a9e:	84 0b       	sbc	r24, r20
    1aa0:	95 0b       	sbc	r25, r21
    1aa2:	60 a3       	std	Z+32, r22	; 0x20
    1aa4:	71 a3       	std	Z+33, r23	; 0x21
    1aa6:	82 a3       	std	Z+34, r24	; 0x22
    1aa8:	93 a3       	std	Z+35, r25	; 0x23
}
    1aaa:	cf 91       	pop	r28
    1aac:	df 91       	pop	r29
    1aae:	1f 91       	pop	r17
    1ab0:	0f 91       	pop	r16
    1ab2:	ff 90       	pop	r15
    1ab4:	ef 90       	pop	r14
    1ab6:	df 90       	pop	r13
    1ab8:	cf 90       	pop	r12
    1aba:	bf 90       	pop	r11
    1abc:	af 90       	pop	r10
    1abe:	9f 90       	pop	r9
    1ac0:	8f 90       	pop	r8
    1ac2:	7f 90       	pop	r7
    1ac4:	6f 90       	pop	r6
    1ac6:	5f 90       	pop	r5
    1ac8:	4f 90       	pop	r4
    1aca:	08 95       	ret

00001acc <_Z9pwm1_initv>:

void pwm1_init() {

    // --------------------- TIMER1: OUT1 and OUT2 -----------------------
    // Set as output
    DDRB |= (1<<PB1); // (D9)  OUT2 (PB5/OC1A)
    1acc:	21 9a       	sbi	0x04, 1	; 4
    DDRB |= (1<<PB2); // (D10) OUT1 (PB2/OC1B)
    1ace:	22 9a       	sbi	0x04, 2	; 4

    // Go down to avoid peak current on the driver.
    PORTB &= ~(1<<PB1);
    1ad0:	29 98       	cbi	0x05, 1	; 5
    PORTB &= ~(1<<PB2);
    1ad2:	2a 98       	cbi	0x05, 2	; 5

    // WGM: 1 1 1 0. Clear Timer on Compare, TOP is ICR1.
    // CS11: prescale by 8 => 0.5us tick

    // TCCR1A = COM1A1 COM1A0 COM1B1 COM1B0 - - WGM11 WGM10
    TCCR1A = 0b10100010;
    1ad4:	82 ea       	ldi	r24, 0xA2	; 162
    1ad6:	80 93 80 00 	sts	0x0080, r24
    // TCCR1B = ICNC1 ICES1 - WGM13 WGM12 CS12 CS11 CS10
    TCCR1B = 0b00011001;
    1ada:	89 e1       	ldi	r24, 0x19	; 25
    1adc:	80 93 81 00 	sts	0x0081, r24

//    ICR1 = 200; // 40 kHz PWM
	ICR1 = 2500; // 3.2 kHz PWM
    1ae0:	84 ec       	ldi	r24, 0xC4	; 196
    1ae2:	99 e0       	ldi	r25, 0x09	; 9
    1ae4:	90 93 87 00 	sts	0x0087, r25
    1ae8:	80 93 86 00 	sts	0x0086, r24

    OCR1A = 0; // Init OCR registers to nil output signal
    1aec:	10 92 89 00 	sts	0x0089, r1
    1af0:	10 92 88 00 	sts	0x0088, r1
    OCR1B = 0;
    1af4:	10 92 8b 00 	sts	0x008B, r1
    1af8:	10 92 8a 00 	sts	0x008A, r1
    // TCCR0B ==>> FOC0A FOC0B Ã¢â‚¬â€œ Ã¢â‚¬â€œ WGM02 CS02 CS01 CS00
//  TCCR0B = 0b00001101;
//  OCR0A = 157;
//  OCR0B = 7;
    // ------------------------------- END ---------------------------------
}
    1afc:	08 95       	ret

00001afe <_Z9pwm1_stopv>:
void pwm1_stop()
{
    // --------------------- TIMER1: OUT1 and OUT2 -----------------------
    OCR1A = 0x00; // Init OCR registers to nil output signal
    1afe:	10 92 89 00 	sts	0x0089, r1
    1b02:	10 92 88 00 	sts	0x0088, r1
    OCR1B = 0x00;
    1b06:	10 92 8b 00 	sts	0x008B, r1
    1b0a:	10 92 8a 00 	sts	0x008A, r1

    // TCCR1A = COM1A1 COM1A0 COM1B1 COM1B0 - - WGM11 WGM10
    TCCR1A = 0b00000010;
    1b0e:	82 e0       	ldi	r24, 0x02	; 2
    1b10:	80 93 80 00 	sts	0x0080, r24

    // TCCR1B = ICNC1 ICES1 - WGM13 WGM12 CS12 CS11 CS10
    TCCR1B = 0b00011000;
    1b14:	88 e1       	ldi	r24, 0x18	; 24
    1b16:	80 93 81 00 	sts	0x0081, r24

    // Go down to avoid peak current on the driver.
    PORTB &= ~(1<<PB1);
    1b1a:	29 98       	cbi	0x05, 1	; 5
    PORTB &= ~(1<<PB2);
    1b1c:	2a 98       	cbi	0x05, 2	; 5
    // ------------------------------- END ---------------------------------
}
    1b1e:	08 95       	ret

00001b20 <_Z9pwm2_initv>:
     * f = 16M/((2)*1024*OCR2A) = 50 Hz
     *
     *
     */
    //  TCCR2A ==>> COM2A1 COM2A0 COM2B1 COM2B0 - - WGM21 WGM20
    TCCR2A = 0b00000011;
    1b20:	83 e0       	ldi	r24, 0x03	; 3
    1b22:	80 93 b0 00 	sts	0x00B0, r24

    // TCCR2B ==> FOC2A FOC2B - - WGM22 CS22 CS21 CS20
    TCCR2B = 0b00001010;
    1b26:	8a e0       	ldi	r24, 0x0A	; 10
    1b28:	80 93 b1 00 	sts	0x00B1, r24
    OCR2A = 200;
    1b2c:	88 ec       	ldi	r24, 0xC8	; 200
    1b2e:	80 93 b3 00 	sts	0x00B3, r24

    // TIMSK2 ==>> - - - - - OCIE2B OCIE2A TOIE2
    TIMSK2 = 0b00000010;
    1b32:	82 e0       	ldi	r24, 0x02	; 2
    1b34:	80 93 70 00 	sts	0x0070, r24

    // Turn Green Led off.
    PORTD &= ~(1<<PD3);
    1b38:	5b 98       	cbi	0x0b, 3	; 11
    // TIFR2 ==>> Ã¢â‚¬â€œ Ã¢â‚¬â€œ Ã¢â‚¬â€œ Ã¢â‚¬â€œ Ã¢â‚¬â€œ OCF2B OCF2A TOV2
//  TIFR2 = 0b00000000;

    // ------------------------------- END ---------------------------------

}
    1b3a:	08 95       	ret

00001b3c <_Z9pwm2_stopv>:
void pwm2_stop()
{
    //  TCCR2A ==>> COM2A1 COM2A0 COM2B1 COM2B0 - - WGM21 WGM20
    TCCR2A = 0b00000011;
    1b3c:	83 e0       	ldi	r24, 0x03	; 3
    1b3e:	80 93 b0 00 	sts	0x00B0, r24

    // TCCR2B ==> FOC2A FOC2B - - WGM22 CS22 CS21 CS20
    TCCR2B = 0b00001000;
    1b42:	88 e0       	ldi	r24, 0x08	; 8
    1b44:	80 93 b1 00 	sts	0x00B1, r24
    OCR2A = 200;
    1b48:	88 ec       	ldi	r24, 0xC8	; 200
    1b4a:	80 93 b3 00 	sts	0x00B3, r24

    // TIMSK2 ==>> - - - - - OCIE2B OCIE2A TOIE2
    TIMSK2 = 0b00000010;
    1b4e:	82 e0       	ldi	r24, 0x02	; 2
    1b50:	80 93 70 00 	sts	0x0070, r24

    // Turn Red Led off.
    PORTD &= ~(1<<PD2);
    1b54:	5a 98       	cbi	0x0b, 2	; 11
}
    1b56:	08 95       	ret

00001b58 <_Z9read_keysv>:
int8_t read_keys(void) // Debounce to push buttons
{
    if(PushButton_UP)
    1b58:	33 99       	sbic	0x06, 3	; 6
    1b5a:	0c c0       	rjmp	.+24     	; 0x1b74 <_Z9read_keysv+0x1c>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    1b5c:	80 e4       	ldi	r24, 0x40	; 64
    1b5e:	9c e9       	ldi	r25, 0x9C	; 156
    1b60:	01 97       	sbiw	r24, 0x01	; 1
    1b62:	f1 f7       	brne	.-4      	; 0x1b60 <_Z9read_keysv+0x8>
    {
        _delay_ms(20);
        while(PushButton_UP);      // Wait for key to be released
    1b64:	33 9b       	sbis	0x06, 3	; 6
    1b66:	fe cf       	rjmp	.-4      	; 0x1b64 <_Z9read_keysv+0xc>
    1b68:	80 e4       	ldi	r24, 0x40	; 64
    1b6a:	9c e9       	ldi	r25, 0x9C	; 156
    1b6c:	01 97       	sbiw	r24, 0x01	; 1
    1b6e:	f1 f7       	brne	.-4      	; 0x1b6c <_Z9read_keysv+0x14>
    1b70:	81 e0       	ldi	r24, 0x01	; 1
    1b72:	08 95       	ret
        _delay_ms(20);              // Nao pode comentar, se nao, nao da STOP! 20110816
        return 1;
    }
    else if(PushButton_DOWN)
    1b74:	34 99       	sbic	0x06, 4	; 6
    1b76:	0c c0       	rjmp	.+24     	; 0x1b90 <_Z9read_keysv+0x38>
    1b78:	80 e4       	ldi	r24, 0x40	; 64
    1b7a:	9c e9       	ldi	r25, 0x9C	; 156
    1b7c:	01 97       	sbiw	r24, 0x01	; 1
    1b7e:	f1 f7       	brne	.-4      	; 0x1b7c <_Z9read_keysv+0x24>
    {
        _delay_ms(20);
        while(PushButton_DOWN);
    1b80:	34 9b       	sbis	0x06, 4	; 6
    1b82:	fe cf       	rjmp	.-4      	; 0x1b80 <_Z9read_keysv+0x28>
    1b84:	80 e4       	ldi	r24, 0x40	; 64
    1b86:	9c e9       	ldi	r25, 0x9C	; 156
    1b88:	01 97       	sbiw	r24, 0x01	; 1
    1b8a:	f1 f7       	brne	.-4      	; 0x1b88 <_Z9read_keysv+0x30>
    1b8c:	8f ef       	ldi	r24, 0xFF	; 255
    1b8e:	08 95       	ret
        _delay_ms(20);
        return -1;
    }
    else if(PushButton_StandBy)
    1b90:	35 9b       	sbis	0x06, 5	; 6
    1b92:	02 c0       	rjmp	.+4      	; 0x1b98 <_Z9read_keysv+0x40>
    1b94:	82 e0       	ldi	r24, 0x02	; 2
    1b96:	08 95       	ret
    1b98:	80 e4       	ldi	r24, 0x40	; 64
    1b9a:	9c e9       	ldi	r25, 0x9C	; 156
    1b9c:	01 97       	sbiw	r24, 0x01	; 1
    1b9e:	f1 f7       	brne	.-4      	; 0x1b9c <_Z9read_keysv+0x44>
    {
        _delay_ms(20);
        while(PushButton_StandBy);
    1ba0:	35 9b       	sbis	0x06, 5	; 6
    1ba2:	fe cf       	rjmp	.-4      	; 0x1ba0 <_Z9read_keysv+0x48>
    1ba4:	80 e4       	ldi	r24, 0x40	; 64
    1ba6:	9c e9       	ldi	r25, 0x9C	; 156
    1ba8:	01 97       	sbiw	r24, 0x01	; 1
    1baa:	f1 f7       	brne	.-4      	; 0x1ba8 <_Z9read_keysv+0x50>
    1bac:	80 e0       	ldi	r24, 0x00	; 0
        _delay_ms(20);
        return 0;
    }
    else return 2;
}
    1bae:	08 95       	ret

00001bb0 <__vector_8>:

}

uint16_t a=0;

ISR(TIMER2_COMPB_vect)
    1bb0:	1f 92       	push	r1
    1bb2:	0f 92       	push	r0
    1bb4:	0f b6       	in	r0, 0x3f	; 63
    1bb6:	0f 92       	push	r0
    1bb8:	11 24       	eor	r1, r1
{

}
    1bba:	0f 90       	pop	r0
    1bbc:	0f be       	out	0x3f, r0	; 63
    1bbe:	0f 90       	pop	r0
    1bc0:	1f 90       	pop	r1
    1bc2:	18 95       	reti

00001bc4 <__vector_7>:

ISR(TIMER2_COMPA_vect)
    1bc4:	1f 92       	push	r1
    1bc6:	0f 92       	push	r0
    1bc8:	0f b6       	in	r0, 0x3f	; 63
    1bca:	0f 92       	push	r0
    1bcc:	11 24       	eor	r1, r1
    1bce:	2f 93       	push	r18
    1bd0:	8f 93       	push	r24
    1bd2:	9f 93       	push	r25
{
    // 2500 to divide by 5000.
    if(a==2500) {
    1bd4:	80 91 b0 02 	lds	r24, 0x02B0
    1bd8:	90 91 b1 02 	lds	r25, 0x02B1
    1bdc:	29 e0       	ldi	r18, 0x09	; 9
    1bde:	84 3c       	cpi	r24, 0xC4	; 196
    1be0:	92 07       	cpc	r25, r18
    1be2:	49 f4       	brne	.+18     	; 0x1bf6 <__vector_7+0x32>
        a = 0;
    1be4:	10 92 b1 02 	sts	0x02B1, r1
    1be8:	10 92 b0 02 	sts	0x02B0, r1
        PORTD ^= (1<<PD2);}
    1bec:	8b b1       	in	r24, 0x0b	; 11
    1bee:	94 e0       	ldi	r25, 0x04	; 4
    1bf0:	89 27       	eor	r24, r25
    1bf2:	8b b9       	out	0x0b, r24	; 11
    1bf4:	05 c0       	rjmp	.+10     	; 0x1c00 <__vector_7+0x3c>
    else
        a++;
    1bf6:	01 96       	adiw	r24, 0x01	; 1
    1bf8:	90 93 b1 02 	sts	0x02B1, r25
    1bfc:	80 93 b0 02 	sts	0x02B0, r24
}
    1c00:	9f 91       	pop	r25
    1c02:	8f 91       	pop	r24
    1c04:	2f 91       	pop	r18
    1c06:	0f 90       	pop	r0
    1c08:	0f be       	out	0x3f, r0	; 63
    1c0a:	0f 90       	pop	r0
    1c0c:	1f 90       	pop	r1
    1c0e:	18 95       	reti

00001c10 <_GLOBAL__I_lcd>:

            default:
            break;
        }
    }
}
    1c10:	af 92       	push	r10
    1c12:	bf 92       	push	r11
    1c14:	cf 92       	push	r12
    1c16:	df 92       	push	r13
    1c18:	ef 92       	push	r14
    1c1a:	ff 92       	push	r15
    1c1c:	0f 93       	push	r16
    1c1e:	1f 93       	push	r17
        - Data7

*/

//RS-E-D4-D5-D6-D7
LiquidCrystal lcd(8, 7, 6, 5, 21, 20);
    1c20:	8a e8       	ldi	r24, 0x8A	; 138
    1c22:	92 e0       	ldi	r25, 0x02	; 2
    1c24:	68 e0       	ldi	r22, 0x08	; 8
    1c26:	47 e0       	ldi	r20, 0x07	; 7
    1c28:	26 e0       	ldi	r18, 0x06	; 6
    1c2a:	05 e0       	ldi	r16, 0x05	; 5
    1c2c:	55 e1       	ldi	r21, 0x15	; 21
    1c2e:	e5 2e       	mov	r14, r21
    1c30:	34 e1       	ldi	r19, 0x14	; 20
    1c32:	c3 2e       	mov	r12, r19
    1c34:	0e 94 cc 09 	call	0x1398	; 0x1398 <_ZN13LiquidCrystalC1Ehhhhhh>
//double aggKp=4, aggKi=0.2, aggKd=1;
//double consKp=1, consKi=0.05, consKd=0.25;
double consKp=30, consKi=10, consKd=0;

//Specify the links and initial tuning parameters
PID ThermistorPID(&Input, &Output, &Setpoint, consKp, consKi, consKd, DIRECT);
    1c38:	00 d0       	rcall	.+0      	; 0x1c3a <_GLOBAL__I_lcd+0x2a>
    1c3a:	00 d0       	rcall	.+0      	; 0x1c3c <_GLOBAL__I_lcd+0x2c>
    1c3c:	00 d0       	rcall	.+0      	; 0x1c3e <_GLOBAL__I_lcd+0x2e>
    1c3e:	e0 90 70 02 	lds	r14, 0x0270
    1c42:	f0 90 71 02 	lds	r15, 0x0271
    1c46:	00 91 72 02 	lds	r16, 0x0272
    1c4a:	10 91 73 02 	lds	r17, 0x0273
    1c4e:	a0 90 74 02 	lds	r10, 0x0274
    1c52:	b0 90 75 02 	lds	r11, 0x0275
    1c56:	c0 90 76 02 	lds	r12, 0x0276
    1c5a:	d0 90 77 02 	lds	r13, 0x0277
    1c5e:	80 91 be 02 	lds	r24, 0x02BE
    1c62:	90 91 bf 02 	lds	r25, 0x02BF
    1c66:	a0 91 c0 02 	lds	r26, 0x02C0
    1c6a:	b0 91 c1 02 	lds	r27, 0x02C1
    1c6e:	ed b7       	in	r30, 0x3d	; 61
    1c70:	fe b7       	in	r31, 0x3e	; 62
    1c72:	81 83       	std	Z+1, r24	; 0x01
    1c74:	92 83       	std	Z+2, r25	; 0x02
    1c76:	a3 83       	std	Z+3, r26	; 0x03
    1c78:	b4 83       	std	Z+4, r27	; 0x04
    1c7a:	16 82       	std	Z+6, r1	; 0x06
    1c7c:	15 82       	std	Z+5, r1	; 0x05
    1c7e:	82 ec       	ldi	r24, 0xC2	; 194
    1c80:	92 e0       	ldi	r25, 0x02	; 2
    1c82:	66 eb       	ldi	r22, 0xB6	; 182
    1c84:	72 e0       	ldi	r23, 0x02	; 2
    1c86:	4a eb       	ldi	r20, 0xBA	; 186
    1c88:	52 e0       	ldi	r21, 0x02	; 2
    1c8a:	22 eb       	ldi	r18, 0xB2	; 178
    1c8c:	32 e0       	ldi	r19, 0x02	; 2
    1c8e:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <_ZN3PIDC1EPdS0_S0_dddi>
    1c92:	8d b7       	in	r24, 0x3d	; 61
    1c94:	9e b7       	in	r25, 0x3e	; 62
    1c96:	06 96       	adiw	r24, 0x06	; 6
    1c98:	0f b6       	in	r0, 0x3f	; 63
    1c9a:	f8 94       	cli
    1c9c:	9e bf       	out	0x3e, r25	; 62
    1c9e:	0f be       	out	0x3f, r0	; 63
    1ca0:	8d bf       	out	0x3d, r24	; 61

            default:
            break;
        }
    }
}
    1ca2:	1f 91       	pop	r17
    1ca4:	0f 91       	pop	r16
    1ca6:	ff 90       	pop	r15
    1ca8:	ef 90       	pop	r14
    1caa:	df 90       	pop	r13
    1cac:	cf 90       	pop	r12
    1cae:	bf 90       	pop	r11
    1cb0:	af 90       	pop	r10
    1cb2:	08 95       	ret

00001cb4 <_Z10Thermistorv>:
    return P;
}
float Thermistor()
{
    double T;
    T = analogRead(1);
    1cb4:	81 e0       	ldi	r24, 0x01	; 1
    1cb6:	0e 94 99 13 	call	0x2732	; 0x2732 <analogRead>
    1cba:	aa 27       	eor	r26, r26
    1cbc:	97 fd       	sbrc	r25, 7
    1cbe:	a0 95       	com	r26
    1cc0:	ba 2f       	mov	r27, r26
    1cc2:	bc 01       	movw	r22, r24
    1cc4:	cd 01       	movw	r24, r26
    1cc6:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__floatsisf>

    return T;
}
    1cca:	08 95       	ret

00001ccc <_Z18VerifyPluggedLaserv>:
//Specify the links and initial tuning parameters
PID ThermistorPID(&Input, &Output, &Setpoint, consKp, consKi, consKd, DIRECT);

void VerifyPluggedLaser()
{
    if(Thermistor() > 1000)
    1ccc:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <_Z10Thermistorv>
    1cd0:	20 e0       	ldi	r18, 0x00	; 0
    1cd2:	30 e0       	ldi	r19, 0x00	; 0
    1cd4:	4a e7       	ldi	r20, 0x7A	; 122
    1cd6:	54 e4       	ldi	r21, 0x44	; 68
    1cd8:	0e 94 0a 04 	call	0x814	; 0x814 <__gtsf2>
    1cdc:	90 91 af 02 	lds	r25, 0x02AF
    1ce0:	18 16       	cp	r1, r24
    1ce2:	f4 f4       	brge	.+60     	; 0x1d20 <_Z18VerifyPluggedLaserv+0x54>
    {
        if(!flag_01)
    1ce4:	99 23       	and	r25, r25
    1ce6:	c1 f5       	brne	.+112    	; 0x1d58 <_Z18VerifyPluggedLaserv+0x8c>
        {
            lcd.setCursor(13,0);
    1ce8:	8a e8       	ldi	r24, 0x8A	; 138
    1cea:	92 e0       	ldi	r25, 0x02	; 2
    1cec:	6d e0       	ldi	r22, 0x0D	; 13
    1cee:	40 e0       	ldi	r20, 0x00	; 0
    1cf0:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
            lcd.print("404");
    1cf4:	8a e8       	ldi	r24, 0x8A	; 138
    1cf6:	92 e0       	ldi	r25, 0x02	; 2
    1cf8:	60 e0       	ldi	r22, 0x00	; 0
    1cfa:	71 e0       	ldi	r23, 0x01	; 1
    1cfc:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>
            lcd.setCursor(0,1);
    1d00:	8a e8       	ldi	r24, 0x8A	; 138
    1d02:	92 e0       	ldi	r25, 0x02	; 2
    1d04:	60 e0       	ldi	r22, 0x00	; 0
    1d06:	41 e0       	ldi	r20, 0x01	; 1
    1d08:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
            lcd.print("Laser Not Found");
    1d0c:	8a e8       	ldi	r24, 0x8A	; 138
    1d0e:	92 e0       	ldi	r25, 0x02	; 2
    1d10:	64 e0       	ldi	r22, 0x04	; 4
    1d12:	71 e0       	ldi	r23, 0x01	; 1
    1d14:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>
            flag_01 = 1;
    1d18:	81 e0       	ldi	r24, 0x01	; 1
    1d1a:	80 93 af 02 	sts	0x02AF, r24
    1d1e:	08 95       	ret
        }
    }
    else
    {
        if(flag_01)
    1d20:	99 23       	and	r25, r25
    1d22:	d1 f0       	breq	.+52     	; 0x1d58 <_Z18VerifyPluggedLaserv+0x8c>
        {
            lcd.setCursor(13,0);
    1d24:	8a e8       	ldi	r24, 0x8A	; 138
    1d26:	92 e0       	ldi	r25, 0x02	; 2
    1d28:	6d e0       	ldi	r22, 0x0D	; 13
    1d2a:	40 e0       	ldi	r20, 0x00	; 0
    1d2c:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
            lcd.print("   ");
    1d30:	8a e8       	ldi	r24, 0x8A	; 138
    1d32:	92 e0       	ldi	r25, 0x02	; 2
    1d34:	64 e1       	ldi	r22, 0x14	; 20
    1d36:	71 e0       	ldi	r23, 0x01	; 1
    1d38:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>
            lcd.setCursor(0,1);
    1d3c:	8a e8       	ldi	r24, 0x8A	; 138
    1d3e:	92 e0       	ldi	r25, 0x02	; 2
    1d40:	60 e0       	ldi	r22, 0x00	; 0
    1d42:	41 e0       	ldi	r20, 0x01	; 1
    1d44:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
            lcd.print("               ");
    1d48:	8a e8       	ldi	r24, 0x8A	; 138
    1d4a:	92 e0       	ldi	r25, 0x02	; 2
    1d4c:	68 e1       	ldi	r22, 0x18	; 24
    1d4e:	71 e0       	ldi	r23, 0x01	; 1
    1d50:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>
            flag_01 = 0;
    1d54:	10 92 af 02 	sts	0x02AF, r1
    1d58:	08 95       	ret

00001d5a <_Z2PDv>:
    return I;
}
float PD()
{
    double P;
    P = analogRead(7);
    1d5a:	87 e0       	ldi	r24, 0x07	; 7
    1d5c:	0e 94 99 13 	call	0x2732	; 0x2732 <analogRead>
    1d60:	aa 27       	eor	r26, r26
    1d62:	97 fd       	sbrc	r25, 7
    1d64:	a0 95       	com	r26
    1d66:	ba 2f       	mov	r27, r26
    1d68:	bc 01       	movw	r22, r24
    1d6a:	cd 01       	movw	r24, r26
    1d6c:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__floatsisf>

    return P;
}
    1d70:	08 95       	ret

00001d72 <_Z9I_peltierv>:
    return I;
}
float I_peltier()
{
    double x, I;
    x = (analogRead(2)*Vref)/1023.0;
    1d72:	82 e0       	ldi	r24, 0x02	; 2
    1d74:	0e 94 99 13 	call	0x2732	; 0x2732 <analogRead>
    1d78:	9c 01       	movw	r18, r24
    1d7a:	22 0f       	add	r18, r18
    1d7c:	33 1f       	adc	r19, r19
    1d7e:	22 0f       	add	r18, r18
    1d80:	33 1f       	adc	r19, r19
    1d82:	28 0f       	add	r18, r24
    1d84:	39 1f       	adc	r19, r25
    1d86:	44 27       	eor	r20, r20
    1d88:	37 fd       	sbrc	r19, 7
    1d8a:	40 95       	com	r20
    1d8c:	54 2f       	mov	r21, r20
    1d8e:	ca 01       	movw	r24, r20
    1d90:	b9 01       	movw	r22, r18
    1d92:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__floatsisf>
    1d96:	20 e0       	ldi	r18, 0x00	; 0
    1d98:	30 ec       	ldi	r19, 0xC0	; 192
    1d9a:	4f e7       	ldi	r20, 0x7F	; 127
    1d9c:	54 e4       	ldi	r21, 0x44	; 68
    1d9e:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__divsf3>
    1da2:	2d ec       	ldi	r18, 0xCD	; 205
    1da4:	3c ec       	ldi	r19, 0xCC	; 204
    1da6:	4c ed       	ldi	r20, 0xDC	; 220
    1da8:	50 e4       	ldi	r21, 0x40	; 64
    1daa:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__divsf3>
    1dae:	20 e0       	ldi	r18, 0x00	; 0
    1db0:	30 e0       	ldi	r19, 0x00	; 0
    1db2:	4a e7       	ldi	r20, 0x7A	; 122
    1db4:	54 e4       	ldi	r21, 0x44	; 68
    1db6:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__mulsf3>
    I = 1000.0*(x/R);

    return I;
}
    1dba:	08 95       	ret

00001dbc <_Z7I_laserv>:
    else return 2;
}
float I_laser()
{
    double x, I;
    x = (analogRead(0)*Vref)/1023.0;
    1dbc:	80 e0       	ldi	r24, 0x00	; 0
    1dbe:	0e 94 99 13 	call	0x2732	; 0x2732 <analogRead>
    1dc2:	9c 01       	movw	r18, r24
    1dc4:	22 0f       	add	r18, r18
    1dc6:	33 1f       	adc	r19, r19
    1dc8:	22 0f       	add	r18, r18
    1dca:	33 1f       	adc	r19, r19
    1dcc:	28 0f       	add	r18, r24
    1dce:	39 1f       	adc	r19, r25
    1dd0:	44 27       	eor	r20, r20
    1dd2:	37 fd       	sbrc	r19, 7
    1dd4:	40 95       	com	r20
    1dd6:	54 2f       	mov	r21, r20
    1dd8:	ca 01       	movw	r24, r20
    1dda:	b9 01       	movw	r22, r18
    1ddc:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__floatsisf>
    1de0:	20 e0       	ldi	r18, 0x00	; 0
    1de2:	30 ec       	ldi	r19, 0xC0	; 192
    1de4:	4f e7       	ldi	r20, 0x7F	; 127
    1de6:	54 e4       	ldi	r21, 0x44	; 68
    1de8:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__divsf3>
    1dec:	2d ec       	ldi	r18, 0xCD	; 205
    1dee:	3c ec       	ldi	r19, 0xCC	; 204
    1df0:	4c ed       	ldi	r20, 0xDC	; 220
    1df2:	50 e4       	ldi	r21, 0x40	; 64
    1df4:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__divsf3>
    1df8:	20 e0       	ldi	r18, 0x00	; 0
    1dfa:	30 e0       	ldi	r19, 0x00	; 0
    1dfc:	4a e7       	ldi	r20, 0x7A	; 122
    1dfe:	54 e4       	ldi	r21, 0x44	; 68
    1e00:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__mulsf3>
    I = 1000.0*(x/R);

    return I;
}
    1e04:	08 95       	ret

00001e06 <_Z7summaryv>:
        state = STOP;

    if(I_peltier() >= 100.0)
        state = STOP;
}
void summary()
    1e06:	ef 92       	push	r14
    1e08:	ff 92       	push	r15
    1e0a:	0f 93       	push	r16
    1e0c:	1f 93       	push	r17
{

    // Laser Current
    lcd.setCursor(3,0);
    1e0e:	0a e8       	ldi	r16, 0x8A	; 138
    1e10:	12 e0       	ldi	r17, 0x02	; 2
    1e12:	c8 01       	movw	r24, r16
    1e14:	63 e0       	ldi	r22, 0x03	; 3
    1e16:	40 e0       	ldi	r20, 0x00	; 0
    1e18:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
    lcd.print("I ");
    1e1c:	c8 01       	movw	r24, r16
    1e1e:	68 e2       	ldi	r22, 0x28	; 40
    1e20:	71 e0       	ldi	r23, 0x01	; 1
    1e22:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>
    Il = I_laser();
    1e26:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <_Z7I_laserv>
    1e2a:	ab 01       	movw	r20, r22
    1e2c:	bc 01       	movw	r22, r24
    1e2e:	40 93 9f 02 	sts	0x029F, r20
    1e32:	50 93 a0 02 	sts	0x02A0, r21
    1e36:	60 93 a1 02 	sts	0x02A1, r22
    1e3a:	70 93 a2 02 	sts	0x02A2, r23
    lcd.print(Il);
    1e3e:	c8 01       	movw	r24, r16
    1e40:	22 e0       	ldi	r18, 0x02	; 2
    1e42:	30 e0       	ldi	r19, 0x00	; 0
    1e44:	0e 94 a3 12 	call	0x2546	; 0x2546 <_ZN5Print5printEdi>
    lcd.print("  ");
    1e48:	fb e2       	ldi	r31, 0x2B	; 43
    1e4a:	ef 2e       	mov	r14, r31
    1e4c:	f1 e0       	ldi	r31, 0x01	; 1
    1e4e:	ff 2e       	mov	r15, r31
    1e50:	c8 01       	movw	r24, r16
    1e52:	b7 01       	movw	r22, r14
    1e54:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>
//
    // Peltier Current
    lcd.setCursor(10,0);
    1e58:	c8 01       	movw	r24, r16
    1e5a:	6a e0       	ldi	r22, 0x0A	; 10
    1e5c:	40 e0       	ldi	r20, 0x00	; 0
    1e5e:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
    lcd.print("Ip ");
    1e62:	c8 01       	movw	r24, r16
    1e64:	6e e2       	ldi	r22, 0x2E	; 46
    1e66:	71 e0       	ldi	r23, 0x01	; 1
    1e68:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>
    Ip = I_peltier();
    1e6c:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <_Z9I_peltierv>
    1e70:	60 93 a3 02 	sts	0x02A3, r22
    1e74:	70 93 a4 02 	sts	0x02A4, r23
    1e78:	80 93 a5 02 	sts	0x02A5, r24
    1e7c:	90 93 a6 02 	sts	0x02A6, r25
    lcd.print((int) Ip);
    1e80:	0e 94 53 05 	call	0xaa6	; 0xaa6 <__fixsfsi>
    1e84:	9b 01       	movw	r18, r22
    1e86:	ac 01       	movw	r20, r24
    1e88:	c8 01       	movw	r24, r16
    1e8a:	b9 01       	movw	r22, r18
    1e8c:	4a e0       	ldi	r20, 0x0A	; 10
    1e8e:	50 e0       	ldi	r21, 0x00	; 0
    1e90:	0e 94 a9 11 	call	0x2352	; 0x2352 <_ZN5Print5printEii>
//  lcd.print(OCR1A);
    lcd.print("  ");
    1e94:	c8 01       	movw	r24, r16
    1e96:	b7 01       	movw	r22, r14
    1e98:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>

    // Photodiode Power
    lcd.setCursor(3,1);
    1e9c:	c8 01       	movw	r24, r16
    1e9e:	63 e0       	ldi	r22, 0x03	; 3
    1ea0:	41 e0       	ldi	r20, 0x01	; 1
    1ea2:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
    lcd.print("P ");
    1ea6:	c8 01       	movw	r24, r16
    1ea8:	62 e3       	ldi	r22, 0x32	; 50
    1eaa:	71 e0       	ldi	r23, 0x01	; 1
    1eac:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>
    P = PD();
    1eb0:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <_Z2PDv>
    1eb4:	60 93 a7 02 	sts	0x02A7, r22
    1eb8:	70 93 a8 02 	sts	0x02A8, r23
    1ebc:	80 93 a9 02 	sts	0x02A9, r24
    1ec0:	90 93 aa 02 	sts	0x02AA, r25
    lcd.print((int) P);
    1ec4:	0e 94 53 05 	call	0xaa6	; 0xaa6 <__fixsfsi>
    1ec8:	9b 01       	movw	r18, r22
    1eca:	ac 01       	movw	r20, r24
    1ecc:	c8 01       	movw	r24, r16
    1ece:	b9 01       	movw	r22, r18
    1ed0:	4a e0       	ldi	r20, 0x0A	; 10
    1ed2:	50 e0       	ldi	r21, 0x00	; 0
    1ed4:	0e 94 a9 11 	call	0x2352	; 0x2352 <_ZN5Print5printEii>
    lcd.print("   ");
    1ed8:	e4 e1       	ldi	r30, 0x14	; 20
    1eda:	ee 2e       	mov	r14, r30
    1edc:	e1 e0       	ldi	r30, 0x01	; 1
    1ede:	fe 2e       	mov	r15, r30
    1ee0:	c8 01       	movw	r24, r16
    1ee2:	b7 01       	movw	r22, r14
    1ee4:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>

    // Temperature thought Thermistor
    lcd.setCursor(10,1);
    1ee8:	c8 01       	movw	r24, r16
    1eea:	6a e0       	ldi	r22, 0x0A	; 10
    1eec:	41 e0       	ldi	r20, 0x01	; 1
    1eee:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
    lcd.print("T ");
    1ef2:	c8 01       	movw	r24, r16
    1ef4:	65 e3       	ldi	r22, 0x35	; 53
    1ef6:	71 e0       	ldi	r23, 0x01	; 1
    1ef8:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>
    T = Thermistor();
    1efc:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <_Z10Thermistorv>
    1f00:	60 93 ab 02 	sts	0x02AB, r22
    1f04:	70 93 ac 02 	sts	0x02AC, r23
    1f08:	80 93 ad 02 	sts	0x02AD, r24
    1f0c:	90 93 ae 02 	sts	0x02AE, r25
    lcd.print((int) T);
    1f10:	0e 94 53 05 	call	0xaa6	; 0xaa6 <__fixsfsi>
    1f14:	9b 01       	movw	r18, r22
    1f16:	ac 01       	movw	r20, r24
    1f18:	c8 01       	movw	r24, r16
    1f1a:	b9 01       	movw	r22, r18
    1f1c:	4a e0       	ldi	r20, 0x0A	; 10
    1f1e:	50 e0       	ldi	r21, 0x00	; 0
    1f20:	0e 94 a9 11 	call	0x2352	; 0x2352 <_ZN5Print5printEii>
    lcd.print("   ");
    1f24:	c8 01       	movw	r24, r16
    1f26:	b7 01       	movw	r22, r14
    1f28:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>

    delay(100);
    1f2c:	64 e6       	ldi	r22, 0x64	; 100
    1f2e:	70 e0       	ldi	r23, 0x00	; 0
    1f30:	80 e0       	ldi	r24, 0x00	; 0
    1f32:	90 e0       	ldi	r25, 0x00	; 0
    1f34:	0e 94 2e 13 	call	0x265c	; 0x265c <delay>

}
    1f38:	1f 91       	pop	r17
    1f3a:	0f 91       	pop	r16
    1f3c:	ff 90       	pop	r15
    1f3e:	ef 90       	pop	r14
    1f40:	08 95       	ret

00001f42 <main>:
        }
    }
}

#ifndef key
int main() {
    1f42:	df 92       	push	r13
    1f44:	ef 92       	push	r14
    1f46:	ff 92       	push	r15
    1f48:	0f 93       	push	r16
    1f4a:	1f 93       	push	r17
    1f4c:	cf 93       	push	r28
    1f4e:	df 93       	push	r29

    init();
    1f50:	0e 94 5e 13 	call	0x26bc	; 0x26bc <init>

    // Initialize Liquid Crystal
    lcd.begin(16, 2);
    1f54:	8a e8       	ldi	r24, 0x8A	; 138
    1f56:	92 e0       	ldi	r25, 0x02	; 2
    1f58:	60 e1       	ldi	r22, 0x10	; 16
    1f5a:	42 e0       	ldi	r20, 0x02	; 2
    1f5c:	20 e0       	ldi	r18, 0x00	; 0
    1f5e:	0e 94 16 09 	call	0x122c	; 0x122c <_ZN13LiquidCrystal5beginEhhh>
    // Input for ADC and pushbuttons
    DDRC &= 0x00;
    1f62:	87 b1       	in	r24, 0x07	; 7
    1f64:	17 b8       	out	0x07, r1	; 7

    int8_t command=3;

    // Set Red and Green leds to output.
    DDRD |= (1<<PD3) | (1<<PD2);
    1f66:	8a b1       	in	r24, 0x0a	; 10
    1f68:	8c 60       	ori	r24, 0x0C	; 12
    1f6a:	8a b9       	out	0x0a, r24	; 10

    //initialize the variables we're linked to
    Input = Thermistor();
    1f6c:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <_Z10Thermistorv>
    1f70:	60 93 b6 02 	sts	0x02B6, r22
    1f74:	70 93 b7 02 	sts	0x02B7, r23
    1f78:	80 93 b8 02 	sts	0x02B8, r24
    1f7c:	90 93 b9 02 	sts	0x02B9, r25
    Setpoint = 760;
    1f80:	80 e0       	ldi	r24, 0x00	; 0
    1f82:	90 e0       	ldi	r25, 0x00	; 0
    1f84:	ae e3       	ldi	r26, 0x3E	; 62
    1f86:	b4 e4       	ldi	r27, 0x44	; 68
    1f88:	80 93 b2 02 	sts	0x02B2, r24
    1f8c:	90 93 b3 02 	sts	0x02B3, r25
    1f90:	a0 93 b4 02 	sts	0x02B4, r26
    1f94:	b0 93 b5 02 	sts	0x02B5, r27

    //turn the PID on
    ThermistorPID.SetMode(AUTOMATIC);
    1f98:	82 ec       	ldi	r24, 0xC2	; 194
    1f9a:	92 e0       	ldi	r25, 0x02	; 2
    1f9c:	61 e0       	ldi	r22, 0x01	; 1
    1f9e:	70 e0       	ldi	r23, 0x00	; 0
    1fa0:	0e 94 93 0b 	call	0x1726	; 0x1726 <_ZN3PID7SetModeEi>

            case WORKING:


                // Working process
                PORTD ^= (1<<PD3);
    1fa4:	b8 e0       	ldi	r27, 0x08	; 8
    1fa6:	db 2e       	mov	r13, r27

                command = read_keys();
                switch (command)
                {
                    case 0:
                        state = STOP;
    1fa8:	c3 e0       	ldi	r28, 0x03	; 3
    1faa:	d0 e0       	ldi	r29, 0x00	; 0
                {
                    case 0:

                        if(!flag_01)
                        {
                            state = INITIALIZING;
    1fac:	a1 e0       	ldi	r26, 0x01	; 1
    1fae:	ea 2e       	mov	r14, r26
    1fb0:	f1 2c       	mov	r15, r1

                // Set drivers to 0%.
//              OCR1A = 400;
//              OCR1B = 300;

                state = WORKING;
    1fb2:	02 e0       	ldi	r16, 0x02	; 2
    1fb4:	10 e0       	ldi	r17, 0x00	; 0
    ThermistorPID.SetMode(AUTOMATIC);

    while(1) {

//      VerifySafetyProtection();
        VerifyPluggedLaser();
    1fb6:	0e 94 66 0e 	call	0x1ccc	; 0x1ccc <_Z18VerifyPluggedLaserv>

        switch (state)
    1fba:	80 91 6e 02 	lds	r24, 0x026E
    1fbe:	90 91 6f 02 	lds	r25, 0x026F
    1fc2:	81 30       	cpi	r24, 0x01	; 1
    1fc4:	91 05       	cpc	r25, r1
    1fc6:	79 f1       	breq	.+94     	; 0x2026 <main+0xe4>
    1fc8:	82 30       	cpi	r24, 0x02	; 2
    1fca:	91 05       	cpc	r25, r1
    1fcc:	1c f4       	brge	.+6      	; 0x1fd4 <main+0x92>
    1fce:	89 2b       	or	r24, r25
    1fd0:	41 f0       	breq	.+16     	; 0x1fe2 <main+0xa0>
    1fd2:	f1 cf       	rjmp	.-30     	; 0x1fb6 <main+0x74>
    1fd4:	82 30       	cpi	r24, 0x02	; 2
    1fd6:	91 05       	cpc	r25, r1
    1fd8:	09 f4       	brne	.+2      	; 0x1fdc <main+0x9a>
    1fda:	4e c0       	rjmp	.+156    	; 0x2078 <main+0x136>
    1fdc:	03 97       	sbiw	r24, 0x03	; 3
    1fde:	59 f7       	brne	.-42     	; 0x1fb6 <main+0x74>
    1fe0:	a0 c0       	rjmp	.+320    	; 0x2122 <main+0x1e0>
        {
            case STANDBY:

                command = read_keys();
    1fe2:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <_Z9read_keysv>
                switch (command)
    1fe6:	88 23       	and	r24, r24
    1fe8:	31 f7       	brne	.-52     	; 0x1fb6 <main+0x74>
                {
                    case 0:

                        if(!flag_01)
    1fea:	80 91 af 02 	lds	r24, 0x02AF
    1fee:	88 23       	and	r24, r24
    1ff0:	99 f4       	brne	.+38     	; 0x2018 <main+0xd6>
                        {
                            state = INITIALIZING;
    1ff2:	f0 92 6f 02 	sts	0x026F, r15
    1ff6:	e0 92 6e 02 	sts	0x026E, r14
                            lcd.clear();
    1ffa:	8a e8       	ldi	r24, 0x8A	; 138
    1ffc:	92 e0       	ldi	r25, 0x02	; 2
    1ffe:	0e 94 0e 09 	call	0x121c	; 0x121c <_ZN13LiquidCrystal5clearEv>
                            lcd.setCursor(0,0);
    2002:	8a e8       	ldi	r24, 0x8A	; 138
    2004:	92 e0       	ldi	r25, 0x02	; 2
    2006:	60 e0       	ldi	r22, 0x00	; 0
    2008:	40 e0       	ldi	r20, 0x00	; 0
    200a:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
                            lcd.print("INITIALIZING");
    200e:	8a e8       	ldi	r24, 0x8A	; 138
    2010:	92 e0       	ldi	r25, 0x02	; 2
    2012:	68 e3       	ldi	r22, 0x38	; 56
    2014:	71 e0       	ldi	r23, 0x01	; 1
    2016:	a1 c0       	rjmp	.+322    	; 0x215a <main+0x218>
                        }
                        else
                        {
                            state = STOP;
    2018:	d0 93 6f 02 	sts	0x026F, r29
    201c:	c0 93 6e 02 	sts	0x026E, r28
                            flag_01 = 0;
    2020:	10 92 af 02 	sts	0x02AF, r1
    2024:	c8 cf       	rjmp	.-112    	; 0x1fb6 <main+0x74>

                break;

            case INITIALIZING:

                delay(1000);
    2026:	68 ee       	ldi	r22, 0xE8	; 232
    2028:	73 e0       	ldi	r23, 0x03	; 3
    202a:	80 e0       	ldi	r24, 0x00	; 0
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	0e 94 2e 13 	call	0x265c	; 0x265c <delay>
                pwm1_init();
    2032:	0e 94 66 0d 	call	0x1acc	; 0x1acc <_Z9pwm1_initv>
                pwm2_stop();
    2036:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <_Z9pwm2_stopv>

                // Set drivers to 0%.
//              OCR1A = 400;
//              OCR1B = 300;

                state = WORKING;
    203a:	10 93 6f 02 	sts	0x026F, r17
    203e:	00 93 6e 02 	sts	0x026E, r16
                lcd.clear();
    2042:	8a e8       	ldi	r24, 0x8A	; 138
    2044:	92 e0       	ldi	r25, 0x02	; 2
    2046:	0e 94 0e 09 	call	0x121c	; 0x121c <_ZN13LiquidCrystal5clearEv>
                lcd.setCursor(0,0);
    204a:	8a e8       	ldi	r24, 0x8A	; 138
    204c:	92 e0       	ldi	r25, 0x02	; 2
    204e:	60 e0       	ldi	r22, 0x00	; 0
    2050:	40 e0       	ldi	r20, 0x00	; 0
    2052:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
                lcd.print("O|");
    2056:	8a e8       	ldi	r24, 0x8A	; 138
    2058:	92 e0       	ldi	r25, 0x02	; 2
    205a:	65 e4       	ldi	r22, 0x45	; 69
    205c:	71 e0       	ldi	r23, 0x01	; 1
    205e:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>
                lcd.setCursor(0,1);
    2062:	8a e8       	ldi	r24, 0x8A	; 138
    2064:	92 e0       	ldi	r25, 0x02	; 2
    2066:	60 e0       	ldi	r22, 0x00	; 0
    2068:	41 e0       	ldi	r20, 0x01	; 1
    206a:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
                lcd.print("N|");
    206e:	8a e8       	ldi	r24, 0x8A	; 138
    2070:	92 e0       	ldi	r25, 0x02	; 2
    2072:	68 e4       	ldi	r22, 0x48	; 72
    2074:	71 e0       	ldi	r23, 0x01	; 1
    2076:	71 c0       	rjmp	.+226    	; 0x215a <main+0x218>

            case WORKING:


                // Working process
                PORTD ^= (1<<PD3);
    2078:	8b b1       	in	r24, 0x0b	; 11
    207a:	8d 25       	eor	r24, r13
    207c:	8b b9       	out	0x0b, r24	; 11
//              {
//                  summary();
//              }

                // Thermistor Temperature controller through Peltier
                Input = Thermistor();
    207e:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <_Z10Thermistorv>
    2082:	60 93 b6 02 	sts	0x02B6, r22
    2086:	70 93 b7 02 	sts	0x02B7, r23
    208a:	80 93 b8 02 	sts	0x02B8, r24
    208e:	90 93 b9 02 	sts	0x02B9, r25
                ThermistorPID.Compute();
    2092:	82 ec       	ldi	r24, 0xC2	; 194
    2094:	92 e0       	ldi	r25, 0x02	; 2
    2096:	0e 94 e8 0b 	call	0x17d0	; 0x17d0 <_ZN3PID7ComputeEv>
                //analogWrite(3,Output);
                OCR1B = Output;
    209a:	60 91 ba 02 	lds	r22, 0x02BA
    209e:	70 91 bb 02 	lds	r23, 0x02BB
    20a2:	80 91 bc 02 	lds	r24, 0x02BC
    20a6:	90 91 bd 02 	lds	r25, 0x02BD
    20aa:	0e 94 8e 00 	call	0x11c	; 0x11c <__fixunssfsi>
    20ae:	70 93 8b 00 	sts	0x008B, r23
    20b2:	60 93 8a 00 	sts	0x008A, r22

//                PB2 (D10) OC1B Pin14  - Peltier PWM

                summary();
    20b6:	0e 94 03 0f 	call	0x1e06	; 0x1e06 <_Z7summaryv>

                command = read_keys();
    20ba:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <_Z9read_keysv>
                switch (command)
    20be:	88 23       	and	r24, r24
    20c0:	31 f0       	breq	.+12     	; 0x20ce <main+0x18c>
    20c2:	81 30       	cpi	r24, 0x01	; 1
    20c4:	b9 f0       	breq	.+46     	; 0x20f4 <main+0x1b2>
    20c6:	8f 3f       	cpi	r24, 0xFF	; 255
    20c8:	09 f0       	breq	.+2      	; 0x20cc <main+0x18a>
    20ca:	75 cf       	rjmp	.-278    	; 0x1fb6 <main+0x74>
    20cc:	19 c0       	rjmp	.+50     	; 0x2100 <main+0x1be>
                {
                    case 0:
                        state = STOP;
    20ce:	d0 93 6f 02 	sts	0x026F, r29
    20d2:	c0 93 6e 02 	sts	0x026E, r28
                        lcd.clear();
    20d6:	8a e8       	ldi	r24, 0x8A	; 138
    20d8:	92 e0       	ldi	r25, 0x02	; 2
    20da:	0e 94 0e 09 	call	0x121c	; 0x121c <_ZN13LiquidCrystal5clearEv>
                        lcd.setCursor(0,0);
    20de:	8a e8       	ldi	r24, 0x8A	; 138
    20e0:	92 e0       	ldi	r25, 0x02	; 2
    20e2:	60 e0       	ldi	r22, 0x00	; 0
    20e4:	40 e0       	ldi	r20, 0x00	; 0
    20e6:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
                        lcd.print("STOP");
    20ea:	8a e8       	ldi	r24, 0x8A	; 138
    20ec:	92 e0       	ldi	r25, 0x02	; 2
    20ee:	6b e4       	ldi	r22, 0x4B	; 75
    20f0:	71 e0       	ldi	r23, 0x01	; 1
    20f2:	33 c0       	rjmp	.+102    	; 0x215a <main+0x218>
                        break;

                    case 1:
                        OCR1A = OCR1A + 10;
    20f4:	80 91 88 00 	lds	r24, 0x0088
    20f8:	90 91 89 00 	lds	r25, 0x0089
    20fc:	0a 96       	adiw	r24, 0x0a	; 10
    20fe:	0c c0       	rjmp	.+24     	; 0x2118 <main+0x1d6>

                        break;

                    case -1:
                    	if(OCR1A != 0)
    2100:	80 91 88 00 	lds	r24, 0x0088
    2104:	90 91 89 00 	lds	r25, 0x0089
    2108:	89 2b       	or	r24, r25
    210a:	09 f4       	brne	.+2      	; 0x210e <main+0x1cc>
    210c:	54 cf       	rjmp	.-344    	; 0x1fb6 <main+0x74>
                            OCR1A = OCR1A - 10;
    210e:	80 91 88 00 	lds	r24, 0x0088
    2112:	90 91 89 00 	lds	r25, 0x0089
    2116:	0a 97       	sbiw	r24, 0x0a	; 10
    2118:	90 93 89 00 	sts	0x0089, r25
    211c:	80 93 88 00 	sts	0x0088, r24
    2120:	4a cf       	rjmp	.-364    	; 0x1fb6 <main+0x74>
                break;

            case STOP:

                // Stop all pwm outputs
                pwm1_stop();
    2122:	0e 94 7f 0d 	call	0x1afe	; 0x1afe <_Z9pwm1_stopv>
                delay(1000);
    2126:	68 ee       	ldi	r22, 0xE8	; 232
    2128:	73 e0       	ldi	r23, 0x03	; 3
    212a:	80 e0       	ldi	r24, 0x00	; 0
    212c:	90 e0       	ldi	r25, 0x00	; 0
    212e:	0e 94 2e 13 	call	0x265c	; 0x265c <delay>
                pwm2_init();
    2132:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <_Z9pwm2_initv>

                state = STANDBY;
    2136:	10 92 6f 02 	sts	0x026F, r1
    213a:	10 92 6e 02 	sts	0x026E, r1
                lcd.clear();
    213e:	8a e8       	ldi	r24, 0x8A	; 138
    2140:	92 e0       	ldi	r25, 0x02	; 2
    2142:	0e 94 0e 09 	call	0x121c	; 0x121c <_ZN13LiquidCrystal5clearEv>
                lcd.setCursor(0,0);
    2146:	8a e8       	ldi	r24, 0x8A	; 138
    2148:	92 e0       	ldi	r25, 0x02	; 2
    214a:	60 e0       	ldi	r22, 0x00	; 0
    214c:	40 e0       	ldi	r20, 0x00	; 0
    214e:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN13LiquidCrystal9setCursorEhh>
                lcd.print("STANDBY");
    2152:	8a e8       	ldi	r24, 0x8A	; 138
    2154:	92 e0       	ldi	r25, 0x02	; 2
    2156:	60 e5       	ldi	r22, 0x50	; 80
    2158:	71 e0       	ldi	r23, 0x01	; 1
    215a:	0e 94 bc 11 	call	0x2378	; 0x2378 <_ZN5Print5printEPKc>
    215e:	2b cf       	rjmp	.-426    	; 0x1fb6 <main+0x74>

00002160 <_ZN5Print5writeEPKhj>:
    2160:	cf 92       	push	r12
    2162:	df 92       	push	r13
    2164:	ef 92       	push	r14
    2166:	ff 92       	push	r15
    2168:	0f 93       	push	r16
    216a:	1f 93       	push	r17
    216c:	cf 93       	push	r28
    216e:	df 93       	push	r29
    2170:	7c 01       	movw	r14, r24
    2172:	6b 01       	movw	r12, r22
    2174:	8a 01       	movw	r16, r20
    2176:	c0 e0       	ldi	r28, 0x00	; 0
    2178:	d0 e0       	ldi	r29, 0x00	; 0
    217a:	0f c0       	rjmp	.+30     	; 0x219a <_ZN5Print5writeEPKhj+0x3a>
    217c:	d6 01       	movw	r26, r12
    217e:	6d 91       	ld	r22, X+
    2180:	6d 01       	movw	r12, r26
    2182:	d7 01       	movw	r26, r14
    2184:	ed 91       	ld	r30, X+
    2186:	fc 91       	ld	r31, X
    2188:	01 90       	ld	r0, Z+
    218a:	f0 81       	ld	r31, Z
    218c:	e0 2d       	mov	r30, r0
    218e:	c7 01       	movw	r24, r14
    2190:	09 95       	icall
    2192:	c8 0f       	add	r28, r24
    2194:	d9 1f       	adc	r29, r25
    2196:	01 50       	subi	r16, 0x01	; 1
    2198:	10 40       	sbci	r17, 0x00	; 0
    219a:	01 15       	cp	r16, r1
    219c:	11 05       	cpc	r17, r1
    219e:	71 f7       	brne	.-36     	; 0x217c <_ZN5Print5writeEPKhj+0x1c>
    21a0:	ce 01       	movw	r24, r28
    21a2:	df 91       	pop	r29
    21a4:	cf 91       	pop	r28
    21a6:	1f 91       	pop	r17
    21a8:	0f 91       	pop	r16
    21aa:	ff 90       	pop	r15
    21ac:	ef 90       	pop	r14
    21ae:	df 90       	pop	r13
    21b0:	cf 90       	pop	r12
    21b2:	08 95       	ret

000021b4 <_ZN5Print5writeEPKc>:
    21b4:	cf 93       	push	r28
    21b6:	df 93       	push	r29
    21b8:	ec 01       	movw	r28, r24
    21ba:	61 15       	cp	r22, r1
    21bc:	71 05       	cpc	r23, r1
    21be:	19 f4       	brne	.+6      	; 0x21c6 <_ZN5Print5writeEPKc+0x12>
    21c0:	20 e0       	ldi	r18, 0x00	; 0
    21c2:	30 e0       	ldi	r19, 0x00	; 0
    21c4:	0f c0       	rjmp	.+30     	; 0x21e4 <_ZN5Print5writeEPKc+0x30>
    21c6:	db 01       	movw	r26, r22
    21c8:	0d 90       	ld	r0, X+
    21ca:	00 20       	and	r0, r0
    21cc:	e9 f7       	brne	.-6      	; 0x21c8 <_ZN5Print5writeEPKc+0x14>
    21ce:	11 97       	sbiw	r26, 0x01	; 1
    21d0:	a6 1b       	sub	r26, r22
    21d2:	b7 0b       	sbc	r27, r23
    21d4:	e8 81       	ld	r30, Y
    21d6:	f9 81       	ldd	r31, Y+1	; 0x01
    21d8:	02 80       	ldd	r0, Z+2	; 0x02
    21da:	f3 81       	ldd	r31, Z+3	; 0x03
    21dc:	e0 2d       	mov	r30, r0
    21de:	ad 01       	movw	r20, r26
    21e0:	09 95       	icall
    21e2:	9c 01       	movw	r18, r24
    21e4:	c9 01       	movw	r24, r18
    21e6:	df 91       	pop	r29
    21e8:	cf 91       	pop	r28
    21ea:	08 95       	ret

000021ec <_ZN5Print11printNumberEmh>:
    21ec:	4f 92       	push	r4
    21ee:	5f 92       	push	r5
    21f0:	7f 92       	push	r7
    21f2:	8f 92       	push	r8
    21f4:	9f 92       	push	r9
    21f6:	af 92       	push	r10
    21f8:	bf 92       	push	r11
    21fa:	cf 92       	push	r12
    21fc:	df 92       	push	r13
    21fe:	ef 92       	push	r14
    2200:	ff 92       	push	r15
    2202:	0f 93       	push	r16
    2204:	1f 93       	push	r17
    2206:	df 93       	push	r29
    2208:	cf 93       	push	r28
    220a:	cd b7       	in	r28, 0x3d	; 61
    220c:	de b7       	in	r29, 0x3e	; 62
    220e:	a1 97       	sbiw	r28, 0x21	; 33
    2210:	0f b6       	in	r0, 0x3f	; 63
    2212:	f8 94       	cli
    2214:	de bf       	out	0x3e, r29	; 62
    2216:	0f be       	out	0x3f, r0	; 63
    2218:	cd bf       	out	0x3d, r28	; 61
    221a:	2c 01       	movw	r4, r24
    221c:	74 2e       	mov	r7, r20
    221e:	cb 01       	movw	r24, r22
    2220:	22 30       	cpi	r18, 0x02	; 2
    2222:	08 f4       	brcc	.+2      	; 0x2226 <_ZN5Print11printNumberEmh+0x3a>
    2224:	2a e0       	ldi	r18, 0x0A	; 10
    2226:	19 a2       	std	Y+33, r1	; 0x21
    2228:	31 e2       	ldi	r19, 0x21	; 33
    222a:	c3 2e       	mov	r12, r19
    222c:	d1 2c       	mov	r13, r1
    222e:	cc 0e       	add	r12, r28
    2230:	dd 1e       	adc	r13, r29
    2232:	82 2e       	mov	r8, r18
    2234:	99 24       	eor	r9, r9
    2236:	aa 24       	eor	r10, r10
    2238:	bb 24       	eor	r11, r11
    223a:	67 2d       	mov	r22, r7
    223c:	75 2f       	mov	r23, r21
    223e:	a5 01       	movw	r20, r10
    2240:	94 01       	movw	r18, r8
    2242:	0e 94 79 14 	call	0x28f2	; 0x28f2 <__udivmodsi4>
    2246:	79 01       	movw	r14, r18
    2248:	8a 01       	movw	r16, r20
    224a:	c8 01       	movw	r24, r16
    224c:	b7 01       	movw	r22, r14
    224e:	a5 01       	movw	r20, r10
    2250:	94 01       	movw	r18, r8
    2252:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <__mulsi3>
    2256:	47 2d       	mov	r20, r7
    2258:	46 1b       	sub	r20, r22
    225a:	08 94       	sec
    225c:	c1 08       	sbc	r12, r1
    225e:	d1 08       	sbc	r13, r1
    2260:	4a 30       	cpi	r20, 0x0A	; 10
    2262:	14 f4       	brge	.+4      	; 0x2268 <_ZN5Print11printNumberEmh+0x7c>
    2264:	40 5d       	subi	r20, 0xD0	; 208
    2266:	01 c0       	rjmp	.+2      	; 0x226a <_ZN5Print11printNumberEmh+0x7e>
    2268:	49 5c       	subi	r20, 0xC9	; 201
    226a:	f6 01       	movw	r30, r12
    226c:	40 83       	st	Z, r20
    226e:	e1 14       	cp	r14, r1
    2270:	f1 04       	cpc	r15, r1
    2272:	01 05       	cpc	r16, r1
    2274:	11 05       	cpc	r17, r1
    2276:	21 f0       	breq	.+8      	; 0x2280 <_ZN5Print11printNumberEmh+0x94>
    2278:	7e 2c       	mov	r7, r14
    227a:	5f 2d       	mov	r21, r15
    227c:	c8 01       	movw	r24, r16
    227e:	dd cf       	rjmp	.-70     	; 0x223a <_ZN5Print11printNumberEmh+0x4e>
    2280:	c2 01       	movw	r24, r4
    2282:	b6 01       	movw	r22, r12
    2284:	0e 94 da 10 	call	0x21b4	; 0x21b4 <_ZN5Print5writeEPKc>
    2288:	a1 96       	adiw	r28, 0x21	; 33
    228a:	0f b6       	in	r0, 0x3f	; 63
    228c:	f8 94       	cli
    228e:	de bf       	out	0x3e, r29	; 62
    2290:	0f be       	out	0x3f, r0	; 63
    2292:	cd bf       	out	0x3d, r28	; 61
    2294:	cf 91       	pop	r28
    2296:	df 91       	pop	r29
    2298:	1f 91       	pop	r17
    229a:	0f 91       	pop	r16
    229c:	ff 90       	pop	r15
    229e:	ef 90       	pop	r14
    22a0:	df 90       	pop	r13
    22a2:	cf 90       	pop	r12
    22a4:	bf 90       	pop	r11
    22a6:	af 90       	pop	r10
    22a8:	9f 90       	pop	r9
    22aa:	8f 90       	pop	r8
    22ac:	7f 90       	pop	r7
    22ae:	5f 90       	pop	r5
    22b0:	4f 90       	pop	r4
    22b2:	08 95       	ret

000022b4 <_ZN5Print5printEmi>:
    22b4:	dc 01       	movw	r26, r24
    22b6:	21 15       	cp	r18, r1
    22b8:	31 05       	cpc	r19, r1
    22ba:	41 f4       	brne	.+16     	; 0x22cc <_ZN5Print5printEmi+0x18>
    22bc:	ed 91       	ld	r30, X+
    22be:	fc 91       	ld	r31, X
    22c0:	01 90       	ld	r0, Z+
    22c2:	f0 81       	ld	r31, Z
    22c4:	e0 2d       	mov	r30, r0
    22c6:	64 2f       	mov	r22, r20
    22c8:	09 95       	icall
    22ca:	08 95       	ret
    22cc:	0e 94 f6 10 	call	0x21ec	; 0x21ec <_ZN5Print11printNumberEmh>
    22d0:	08 95       	ret

000022d2 <_ZN5Print5printEli>:
    22d2:	cf 92       	push	r12
    22d4:	df 92       	push	r13
    22d6:	ef 92       	push	r14
    22d8:	ff 92       	push	r15
    22da:	0f 93       	push	r16
    22dc:	1f 93       	push	r17
    22de:	cf 93       	push	r28
    22e0:	df 93       	push	r29
    22e2:	ec 01       	movw	r28, r24
    22e4:	6a 01       	movw	r12, r20
    22e6:	7b 01       	movw	r14, r22
    22e8:	21 15       	cp	r18, r1
    22ea:	31 05       	cpc	r19, r1
    22ec:	41 f4       	brne	.+16     	; 0x22fe <_ZN5Print5printEli+0x2c>
    22ee:	e8 81       	ld	r30, Y
    22f0:	f9 81       	ldd	r31, Y+1	; 0x01
    22f2:	01 90       	ld	r0, Z+
    22f4:	f0 81       	ld	r31, Z
    22f6:	e0 2d       	mov	r30, r0
    22f8:	64 2f       	mov	r22, r20
    22fa:	09 95       	icall
    22fc:	1f c0       	rjmp	.+62     	; 0x233c <_ZN5Print5printEli+0x6a>
    22fe:	2a 30       	cpi	r18, 0x0A	; 10
    2300:	31 05       	cpc	r19, r1
    2302:	d1 f4       	brne	.+52     	; 0x2338 <_ZN5Print5printEli+0x66>
    2304:	77 ff       	sbrs	r23, 7
    2306:	17 c0       	rjmp	.+46     	; 0x2336 <_ZN5Print5printEli+0x64>
    2308:	e8 81       	ld	r30, Y
    230a:	f9 81       	ldd	r31, Y+1	; 0x01
    230c:	01 90       	ld	r0, Z+
    230e:	f0 81       	ld	r31, Z
    2310:	e0 2d       	mov	r30, r0
    2312:	6d e2       	ldi	r22, 0x2D	; 45
    2314:	09 95       	icall
    2316:	8c 01       	movw	r16, r24
    2318:	44 27       	eor	r20, r20
    231a:	55 27       	eor	r21, r21
    231c:	ba 01       	movw	r22, r20
    231e:	4c 19       	sub	r20, r12
    2320:	5d 09       	sbc	r21, r13
    2322:	6e 09       	sbc	r22, r14
    2324:	7f 09       	sbc	r23, r15
    2326:	ce 01       	movw	r24, r28
    2328:	2a e0       	ldi	r18, 0x0A	; 10
    232a:	0e 94 f6 10 	call	0x21ec	; 0x21ec <_ZN5Print11printNumberEmh>
    232e:	98 01       	movw	r18, r16
    2330:	28 0f       	add	r18, r24
    2332:	39 1f       	adc	r19, r25
    2334:	04 c0       	rjmp	.+8      	; 0x233e <_ZN5Print5printEli+0x6c>
    2336:	2a e0       	ldi	r18, 0x0A	; 10
    2338:	0e 94 f6 10 	call	0x21ec	; 0x21ec <_ZN5Print11printNumberEmh>
    233c:	9c 01       	movw	r18, r24
    233e:	c9 01       	movw	r24, r18
    2340:	df 91       	pop	r29
    2342:	cf 91       	pop	r28
    2344:	1f 91       	pop	r17
    2346:	0f 91       	pop	r16
    2348:	ff 90       	pop	r15
    234a:	ef 90       	pop	r14
    234c:	df 90       	pop	r13
    234e:	cf 90       	pop	r12
    2350:	08 95       	ret

00002352 <_ZN5Print5printEii>:
    2352:	ef 92       	push	r14
    2354:	ff 92       	push	r15
    2356:	0f 93       	push	r16
    2358:	1f 93       	push	r17
    235a:	7b 01       	movw	r14, r22
    235c:	9a 01       	movw	r18, r20
    235e:	00 27       	eor	r16, r16
    2360:	f7 fc       	sbrc	r15, 7
    2362:	00 95       	com	r16
    2364:	10 2f       	mov	r17, r16
    2366:	b8 01       	movw	r22, r16
    2368:	a7 01       	movw	r20, r14
    236a:	0e 94 69 11 	call	0x22d2	; 0x22d2 <_ZN5Print5printEli>
    236e:	1f 91       	pop	r17
    2370:	0f 91       	pop	r16
    2372:	ff 90       	pop	r15
    2374:	ef 90       	pop	r14
    2376:	08 95       	ret

00002378 <_ZN5Print5printEPKc>:
    2378:	0e 94 da 10 	call	0x21b4	; 0x21b4 <_ZN5Print5writeEPKc>
    237c:	08 95       	ret

0000237e <_ZN5Print10printFloatEdh>:
    237e:	7f 92       	push	r7
    2380:	8f 92       	push	r8
    2382:	9f 92       	push	r9
    2384:	af 92       	push	r10
    2386:	bf 92       	push	r11
    2388:	cf 92       	push	r12
    238a:	df 92       	push	r13
    238c:	ef 92       	push	r14
    238e:	ff 92       	push	r15
    2390:	0f 93       	push	r16
    2392:	1f 93       	push	r17
    2394:	cf 93       	push	r28
    2396:	df 93       	push	r29
    2398:	4c 01       	movw	r8, r24
    239a:	7a 01       	movw	r14, r20
    239c:	8b 01       	movw	r16, r22
    239e:	72 2e       	mov	r7, r18
    23a0:	cb 01       	movw	r24, r22
    23a2:	ba 01       	movw	r22, r20
    23a4:	a8 01       	movw	r20, r16
    23a6:	97 01       	movw	r18, r14
    23a8:	0e 94 ca 04 	call	0x994	; 0x994 <__unordsf2>
    23ac:	88 23       	and	r24, r24
    23ae:	21 f0       	breq	.+8      	; 0x23b8 <_ZN5Print10printFloatEdh+0x3a>
    23b0:	c4 01       	movw	r24, r8
    23b2:	68 e5       	ldi	r22, 0x58	; 88
    23b4:	71 e0       	ldi	r23, 0x01	; 1
    23b6:	21 c0       	rjmp	.+66     	; 0x23fa <_ZN5Print10printFloatEdh+0x7c>
    23b8:	c0 e0       	ldi	r28, 0x00	; 0
    23ba:	d0 e0       	ldi	r29, 0x00	; 0
    23bc:	57 01       	movw	r10, r14
    23be:	68 01       	movw	r12, r16
    23c0:	e8 94       	clt
    23c2:	d7 f8       	bld	r13, 7
    23c4:	c6 01       	movw	r24, r12
    23c6:	b5 01       	movw	r22, r10
    23c8:	2f ef       	ldi	r18, 0xFF	; 255
    23ca:	3f ef       	ldi	r19, 0xFF	; 255
    23cc:	4f e7       	ldi	r20, 0x7F	; 127
    23ce:	5f e7       	ldi	r21, 0x7F	; 127
    23d0:	0e 94 ca 04 	call	0x994	; 0x994 <__unordsf2>
    23d4:	88 23       	and	r24, r24
    23d6:	51 f4       	brne	.+20     	; 0x23ec <_ZN5Print10printFloatEdh+0x6e>
    23d8:	c6 01       	movw	r24, r12
    23da:	b5 01       	movw	r22, r10
    23dc:	2f ef       	ldi	r18, 0xFF	; 255
    23de:	3f ef       	ldi	r19, 0xFF	; 255
    23e0:	4f e7       	ldi	r20, 0x7F	; 127
    23e2:	5f e7       	ldi	r21, 0x7F	; 127
    23e4:	0e 94 9a 04 	call	0x934	; 0x934 <__lesf2>
    23e8:	18 16       	cp	r1, r24
    23ea:	14 f0       	brlt	.+4      	; 0x23f0 <_ZN5Print10printFloatEdh+0x72>
    23ec:	c1 e0       	ldi	r28, 0x01	; 1
    23ee:	d0 e0       	ldi	r29, 0x00	; 0
    23f0:	21 97       	sbiw	r28, 0x01	; 1
    23f2:	39 f0       	breq	.+14     	; 0x2402 <_ZN5Print10printFloatEdh+0x84>
    23f4:	c4 01       	movw	r24, r8
    23f6:	6c e5       	ldi	r22, 0x5C	; 92
    23f8:	71 e0       	ldi	r23, 0x01	; 1
    23fa:	0e 94 da 10 	call	0x21b4	; 0x21b4 <_ZN5Print5writeEPKc>
    23fe:	ec 01       	movw	r28, r24
    2400:	93 c0       	rjmp	.+294    	; 0x2528 <_ZN5Print10printFloatEdh+0x1aa>
    2402:	c8 01       	movw	r24, r16
    2404:	b7 01       	movw	r22, r14
    2406:	2f ef       	ldi	r18, 0xFF	; 255
    2408:	3f ef       	ldi	r19, 0xFF	; 255
    240a:	4f e7       	ldi	r20, 0x7F	; 127
    240c:	5f e4       	ldi	r21, 0x4F	; 79
    240e:	0e 94 0a 04 	call	0x814	; 0x814 <__gtsf2>
    2412:	18 16       	cp	r1, r24
    2414:	54 f0       	brlt	.+20     	; 0x242a <_ZN5Print10printFloatEdh+0xac>
    2416:	c8 01       	movw	r24, r16
    2418:	b7 01       	movw	r22, r14
    241a:	2f ef       	ldi	r18, 0xFF	; 255
    241c:	3f ef       	ldi	r19, 0xFF	; 255
    241e:	4f e7       	ldi	r20, 0x7F	; 127
    2420:	5f ec       	ldi	r21, 0xCF	; 207
    2422:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__ltsf2>
    2426:	88 23       	and	r24, r24
    2428:	24 f4       	brge	.+8      	; 0x2432 <_ZN5Print10printFloatEdh+0xb4>
    242a:	c4 01       	movw	r24, r8
    242c:	60 e6       	ldi	r22, 0x60	; 96
    242e:	71 e0       	ldi	r23, 0x01	; 1
    2430:	e4 cf       	rjmp	.-56     	; 0x23fa <_ZN5Print10printFloatEdh+0x7c>
    2432:	c8 01       	movw	r24, r16
    2434:	b7 01       	movw	r22, r14
    2436:	20 e0       	ldi	r18, 0x00	; 0
    2438:	30 e0       	ldi	r19, 0x00	; 0
    243a:	40 e0       	ldi	r20, 0x00	; 0
    243c:	50 e0       	ldi	r21, 0x00	; 0
    243e:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__ltsf2>
    2442:	87 fd       	sbrc	r24, 7
    2444:	03 c0       	rjmp	.+6      	; 0x244c <_ZN5Print10printFloatEdh+0xce>
    2446:	c0 e0       	ldi	r28, 0x00	; 0
    2448:	d0 e0       	ldi	r29, 0x00	; 0
    244a:	0e c0       	rjmp	.+28     	; 0x2468 <_ZN5Print10printFloatEdh+0xea>
    244c:	d4 01       	movw	r26, r8
    244e:	ed 91       	ld	r30, X+
    2450:	fc 91       	ld	r31, X
    2452:	01 90       	ld	r0, Z+
    2454:	f0 81       	ld	r31, Z
    2456:	e0 2d       	mov	r30, r0
    2458:	c4 01       	movw	r24, r8
    245a:	6d e2       	ldi	r22, 0x2D	; 45
    245c:	09 95       	icall
    245e:	ec 01       	movw	r28, r24
    2460:	17 fb       	bst	r17, 7
    2462:	10 95       	com	r17
    2464:	17 f9       	bld	r17, 7
    2466:	10 95       	com	r17
    2468:	20 e0       	ldi	r18, 0x00	; 0
    246a:	30 e0       	ldi	r19, 0x00	; 0
    246c:	40 e0       	ldi	r20, 0x00	; 0
    246e:	5f e3       	ldi	r21, 0x3F	; 63
    2470:	dd 24       	eor	r13, r13
    2472:	0b c0       	rjmp	.+22     	; 0x248a <_ZN5Print10printFloatEdh+0x10c>
    2474:	ca 01       	movw	r24, r20
    2476:	b9 01       	movw	r22, r18
    2478:	20 e0       	ldi	r18, 0x00	; 0
    247a:	30 e0       	ldi	r19, 0x00	; 0
    247c:	40 e2       	ldi	r20, 0x20	; 32
    247e:	51 e4       	ldi	r21, 0x41	; 65
    2480:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__divsf3>
    2484:	9b 01       	movw	r18, r22
    2486:	ac 01       	movw	r20, r24
    2488:	d3 94       	inc	r13
    248a:	d7 14       	cp	r13, r7
    248c:	98 f3       	brcs	.-26     	; 0x2474 <_ZN5Print10printFloatEdh+0xf6>
    248e:	c8 01       	movw	r24, r16
    2490:	b7 01       	movw	r22, r14
    2492:	0e 94 37 02 	call	0x46e	; 0x46e <__addsf3>
    2496:	5b 01       	movw	r10, r22
    2498:	6c 01       	movw	r12, r24
    249a:	0e 94 8e 00 	call	0x11c	; 0x11c <__fixunssfsi>
    249e:	7b 01       	movw	r14, r22
    24a0:	8c 01       	movw	r16, r24
    24a2:	c4 01       	movw	r24, r8
    24a4:	b8 01       	movw	r22, r16
    24a6:	a7 01       	movw	r20, r14
    24a8:	2a e0       	ldi	r18, 0x0A	; 10
    24aa:	30 e0       	ldi	r19, 0x00	; 0
    24ac:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <_ZN5Print5printEmi>
    24b0:	c8 0f       	add	r28, r24
    24b2:	d9 1f       	adc	r29, r25
    24b4:	77 20       	and	r7, r7
    24b6:	39 f0       	breq	.+14     	; 0x24c6 <_ZN5Print10printFloatEdh+0x148>
    24b8:	c4 01       	movw	r24, r8
    24ba:	64 e6       	ldi	r22, 0x64	; 100
    24bc:	71 e0       	ldi	r23, 0x01	; 1
    24be:	0e 94 da 10 	call	0x21b4	; 0x21b4 <_ZN5Print5writeEPKc>
    24c2:	c8 0f       	add	r28, r24
    24c4:	d9 1f       	adc	r29, r25
    24c6:	c8 01       	movw	r24, r16
    24c8:	b7 01       	movw	r22, r14
    24ca:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__floatunsisf>
    24ce:	9b 01       	movw	r18, r22
    24d0:	ac 01       	movw	r20, r24
    24d2:	c6 01       	movw	r24, r12
    24d4:	b5 01       	movw	r22, r10
    24d6:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
    24da:	24 c0       	rjmp	.+72     	; 0x2524 <_ZN5Print10printFloatEdh+0x1a6>
    24dc:	20 e0       	ldi	r18, 0x00	; 0
    24de:	30 e0       	ldi	r19, 0x00	; 0
    24e0:	40 e2       	ldi	r20, 0x20	; 32
    24e2:	51 e4       	ldi	r21, 0x41	; 65
    24e4:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__mulsf3>
    24e8:	7b 01       	movw	r14, r22
    24ea:	8c 01       	movw	r16, r24
    24ec:	0e 94 53 05 	call	0xaa6	; 0xaa6 <__fixsfsi>
    24f0:	5b 01       	movw	r10, r22
    24f2:	6c 01       	movw	r12, r24
    24f4:	cc 24       	eor	r12, r12
    24f6:	b7 fc       	sbrc	r11, 7
    24f8:	c0 94       	com	r12
    24fa:	dc 2c       	mov	r13, r12
    24fc:	c4 01       	movw	r24, r8
    24fe:	b6 01       	movw	r22, r12
    2500:	a5 01       	movw	r20, r10
    2502:	2a e0       	ldi	r18, 0x0A	; 10
    2504:	30 e0       	ldi	r19, 0x00	; 0
    2506:	0e 94 69 11 	call	0x22d2	; 0x22d2 <_ZN5Print5printEli>
    250a:	c8 0f       	add	r28, r24
    250c:	d9 1f       	adc	r29, r25
    250e:	c6 01       	movw	r24, r12
    2510:	b5 01       	movw	r22, r10
    2512:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__floatsisf>
    2516:	9b 01       	movw	r18, r22
    2518:	ac 01       	movw	r20, r24
    251a:	c8 01       	movw	r24, r16
    251c:	b7 01       	movw	r22, r14
    251e:	0e 94 06 02 	call	0x40c	; 0x40c <__subsf3>
    2522:	7a 94       	dec	r7
    2524:	77 20       	and	r7, r7
    2526:	d1 f6       	brne	.-76     	; 0x24dc <_ZN5Print10printFloatEdh+0x15e>
    2528:	ce 01       	movw	r24, r28
    252a:	df 91       	pop	r29
    252c:	cf 91       	pop	r28
    252e:	1f 91       	pop	r17
    2530:	0f 91       	pop	r16
    2532:	ff 90       	pop	r15
    2534:	ef 90       	pop	r14
    2536:	df 90       	pop	r13
    2538:	cf 90       	pop	r12
    253a:	bf 90       	pop	r11
    253c:	af 90       	pop	r10
    253e:	9f 90       	pop	r9
    2540:	8f 90       	pop	r8
    2542:	7f 90       	pop	r7
    2544:	08 95       	ret

00002546 <_ZN5Print5printEdi>:
    2546:	0e 94 bf 11 	call	0x237e	; 0x237e <_ZN5Print10printFloatEdh>
    254a:	08 95       	ret

0000254c <__vector_16>:
    254c:	1f 92       	push	r1
    254e:	0f 92       	push	r0
    2550:	0f b6       	in	r0, 0x3f	; 63
    2552:	0f 92       	push	r0
    2554:	11 24       	eor	r1, r1
    2556:	2f 93       	push	r18
    2558:	3f 93       	push	r19
    255a:	4f 93       	push	r20
    255c:	5f 93       	push	r21
    255e:	6f 93       	push	r22
    2560:	7f 93       	push	r23
    2562:	8f 93       	push	r24
    2564:	9f 93       	push	r25
    2566:	af 93       	push	r26
    2568:	bf 93       	push	r27
    256a:	20 91 ff 02 	lds	r18, 0x02FF
    256e:	30 91 00 03 	lds	r19, 0x0300
    2572:	40 91 01 03 	lds	r20, 0x0301
    2576:	50 91 02 03 	lds	r21, 0x0302
    257a:	70 91 03 03 	lds	r23, 0x0303
    257e:	da 01       	movw	r26, r20
    2580:	c9 01       	movw	r24, r18
    2582:	02 96       	adiw	r24, 0x02	; 2
    2584:	a1 1d       	adc	r26, r1
    2586:	b1 1d       	adc	r27, r1
    2588:	67 2f       	mov	r22, r23
    258a:	6a 5f       	subi	r22, 0xFA	; 250
    258c:	6d 37       	cpi	r22, 0x7D	; 125
    258e:	30 f0       	brcs	.+12     	; 0x259c <__vector_16+0x50>
    2590:	6d 57       	subi	r22, 0x7D	; 125
    2592:	da 01       	movw	r26, r20
    2594:	c9 01       	movw	r24, r18
    2596:	03 96       	adiw	r24, 0x03	; 3
    2598:	a1 1d       	adc	r26, r1
    259a:	b1 1d       	adc	r27, r1
    259c:	60 93 03 03 	sts	0x0303, r22
    25a0:	80 93 ff 02 	sts	0x02FF, r24
    25a4:	90 93 00 03 	sts	0x0300, r25
    25a8:	a0 93 01 03 	sts	0x0301, r26
    25ac:	b0 93 02 03 	sts	0x0302, r27
    25b0:	80 91 fb 02 	lds	r24, 0x02FB
    25b4:	90 91 fc 02 	lds	r25, 0x02FC
    25b8:	a0 91 fd 02 	lds	r26, 0x02FD
    25bc:	b0 91 fe 02 	lds	r27, 0x02FE
    25c0:	01 96       	adiw	r24, 0x01	; 1
    25c2:	a1 1d       	adc	r26, r1
    25c4:	b1 1d       	adc	r27, r1
    25c6:	80 93 fb 02 	sts	0x02FB, r24
    25ca:	90 93 fc 02 	sts	0x02FC, r25
    25ce:	a0 93 fd 02 	sts	0x02FD, r26
    25d2:	b0 93 fe 02 	sts	0x02FE, r27
    25d6:	bf 91       	pop	r27
    25d8:	af 91       	pop	r26
    25da:	9f 91       	pop	r25
    25dc:	8f 91       	pop	r24
    25de:	7f 91       	pop	r23
    25e0:	6f 91       	pop	r22
    25e2:	5f 91       	pop	r21
    25e4:	4f 91       	pop	r20
    25e6:	3f 91       	pop	r19
    25e8:	2f 91       	pop	r18
    25ea:	0f 90       	pop	r0
    25ec:	0f be       	out	0x3f, r0	; 63
    25ee:	0f 90       	pop	r0
    25f0:	1f 90       	pop	r1
    25f2:	18 95       	reti

000025f4 <millis>:
    25f4:	8f b7       	in	r24, 0x3f	; 63
    25f6:	f8 94       	cli
    25f8:	20 91 ff 02 	lds	r18, 0x02FF
    25fc:	30 91 00 03 	lds	r19, 0x0300
    2600:	40 91 01 03 	lds	r20, 0x0301
    2604:	50 91 02 03 	lds	r21, 0x0302
    2608:	8f bf       	out	0x3f, r24	; 63
    260a:	b9 01       	movw	r22, r18
    260c:	ca 01       	movw	r24, r20
    260e:	08 95       	ret

00002610 <micros>:
    2610:	9f b7       	in	r25, 0x3f	; 63
    2612:	f8 94       	cli
    2614:	20 91 fb 02 	lds	r18, 0x02FB
    2618:	30 91 fc 02 	lds	r19, 0x02FC
    261c:	40 91 fd 02 	lds	r20, 0x02FD
    2620:	50 91 fe 02 	lds	r21, 0x02FE
    2624:	86 b5       	in	r24, 0x26	; 38
    2626:	a8 9b       	sbis	0x15, 0	; 21
    2628:	06 c0       	rjmp	.+12     	; 0x2636 <micros+0x26>
    262a:	8f 3f       	cpi	r24, 0xFF	; 255
    262c:	21 f0       	breq	.+8      	; 0x2636 <micros+0x26>
    262e:	2f 5f       	subi	r18, 0xFF	; 255
    2630:	3f 4f       	sbci	r19, 0xFF	; 255
    2632:	4f 4f       	sbci	r20, 0xFF	; 255
    2634:	5f 4f       	sbci	r21, 0xFF	; 255
    2636:	9f bf       	out	0x3f, r25	; 63
    2638:	54 2f       	mov	r21, r20
    263a:	43 2f       	mov	r20, r19
    263c:	32 2f       	mov	r19, r18
    263e:	22 27       	eor	r18, r18
    2640:	28 0f       	add	r18, r24
    2642:	31 1d       	adc	r19, r1
    2644:	41 1d       	adc	r20, r1
    2646:	51 1d       	adc	r21, r1
    2648:	83 e0       	ldi	r24, 0x03	; 3
    264a:	22 0f       	add	r18, r18
    264c:	33 1f       	adc	r19, r19
    264e:	44 1f       	adc	r20, r20
    2650:	55 1f       	adc	r21, r21
    2652:	8a 95       	dec	r24
    2654:	d1 f7       	brne	.-12     	; 0x264a <micros+0x3a>
    2656:	b9 01       	movw	r22, r18
    2658:	ca 01       	movw	r24, r20
    265a:	08 95       	ret

0000265c <delay>:
    265c:	ef 92       	push	r14
    265e:	ff 92       	push	r15
    2660:	0f 93       	push	r16
    2662:	1f 93       	push	r17
    2664:	cf 93       	push	r28
    2666:	df 93       	push	r29
    2668:	7b 01       	movw	r14, r22
    266a:	8c 01       	movw	r16, r24
    266c:	0e 94 08 13 	call	0x2610	; 0x2610 <micros>
    2670:	eb 01       	movw	r28, r22
    2672:	0e c0       	rjmp	.+28     	; 0x2690 <delay+0x34>
    2674:	0e 94 08 13 	call	0x2610	; 0x2610 <micros>
    2678:	6c 1b       	sub	r22, r28
    267a:	7d 0b       	sbc	r23, r29
    267c:	68 5e       	subi	r22, 0xE8	; 232
    267e:	73 40       	sbci	r23, 0x03	; 3
    2680:	c8 f3       	brcs	.-14     	; 0x2674 <delay+0x18>
    2682:	08 94       	sec
    2684:	e1 08       	sbc	r14, r1
    2686:	f1 08       	sbc	r15, r1
    2688:	01 09       	sbc	r16, r1
    268a:	11 09       	sbc	r17, r1
    268c:	c8 51       	subi	r28, 0x18	; 24
    268e:	dc 4f       	sbci	r29, 0xFC	; 252
    2690:	e1 14       	cp	r14, r1
    2692:	f1 04       	cpc	r15, r1
    2694:	01 05       	cpc	r16, r1
    2696:	11 05       	cpc	r17, r1
    2698:	69 f7       	brne	.-38     	; 0x2674 <delay+0x18>
    269a:	df 91       	pop	r29
    269c:	cf 91       	pop	r28
    269e:	1f 91       	pop	r17
    26a0:	0f 91       	pop	r16
    26a2:	ff 90       	pop	r15
    26a4:	ef 90       	pop	r14
    26a6:	08 95       	ret

000026a8 <delayMicroseconds>:
    26a8:	01 97       	sbiw	r24, 0x01	; 1
    26aa:	39 f0       	breq	.+14     	; 0x26ba <delayMicroseconds+0x12>
    26ac:	01 97       	sbiw	r24, 0x01	; 1
    26ae:	29 f0       	breq	.+10     	; 0x26ba <delayMicroseconds+0x12>
    26b0:	88 0f       	add	r24, r24
    26b2:	99 1f       	adc	r25, r25
    26b4:	01 97       	sbiw	r24, 0x01	; 1
    26b6:	01 97       	sbiw	r24, 0x01	; 1
    26b8:	f1 f7       	brne	.-4      	; 0x26b6 <delayMicroseconds+0xe>
    26ba:	08 95       	ret

000026bc <init>:
    26bc:	78 94       	sei
    26be:	84 b5       	in	r24, 0x24	; 36
    26c0:	82 60       	ori	r24, 0x02	; 2
    26c2:	84 bd       	out	0x24, r24	; 36
    26c4:	84 b5       	in	r24, 0x24	; 36
    26c6:	81 60       	ori	r24, 0x01	; 1
    26c8:	84 bd       	out	0x24, r24	; 36
    26ca:	85 b5       	in	r24, 0x25	; 37
    26cc:	82 60       	ori	r24, 0x02	; 2
    26ce:	85 bd       	out	0x25, r24	; 37
    26d0:	85 b5       	in	r24, 0x25	; 37
    26d2:	81 60       	ori	r24, 0x01	; 1
    26d4:	85 bd       	out	0x25, r24	; 37
    26d6:	ee e6       	ldi	r30, 0x6E	; 110
    26d8:	f0 e0       	ldi	r31, 0x00	; 0
    26da:	80 81       	ld	r24, Z
    26dc:	81 60       	ori	r24, 0x01	; 1
    26de:	80 83       	st	Z, r24
    26e0:	e1 e8       	ldi	r30, 0x81	; 129
    26e2:	f0 e0       	ldi	r31, 0x00	; 0
    26e4:	10 82       	st	Z, r1
    26e6:	80 81       	ld	r24, Z
    26e8:	82 60       	ori	r24, 0x02	; 2
    26ea:	80 83       	st	Z, r24
    26ec:	80 81       	ld	r24, Z
    26ee:	81 60       	ori	r24, 0x01	; 1
    26f0:	80 83       	st	Z, r24
    26f2:	e0 e8       	ldi	r30, 0x80	; 128
    26f4:	f0 e0       	ldi	r31, 0x00	; 0
    26f6:	80 81       	ld	r24, Z
    26f8:	81 60       	ori	r24, 0x01	; 1
    26fa:	80 83       	st	Z, r24
    26fc:	e1 eb       	ldi	r30, 0xB1	; 177
    26fe:	f0 e0       	ldi	r31, 0x00	; 0
    2700:	80 81       	ld	r24, Z
    2702:	84 60       	ori	r24, 0x04	; 4
    2704:	80 83       	st	Z, r24
    2706:	e0 eb       	ldi	r30, 0xB0	; 176
    2708:	f0 e0       	ldi	r31, 0x00	; 0
    270a:	80 81       	ld	r24, Z
    270c:	81 60       	ori	r24, 0x01	; 1
    270e:	80 83       	st	Z, r24
    2710:	ea e7       	ldi	r30, 0x7A	; 122
    2712:	f0 e0       	ldi	r31, 0x00	; 0
    2714:	80 81       	ld	r24, Z
    2716:	84 60       	ori	r24, 0x04	; 4
    2718:	80 83       	st	Z, r24
    271a:	80 81       	ld	r24, Z
    271c:	82 60       	ori	r24, 0x02	; 2
    271e:	80 83       	st	Z, r24
    2720:	80 81       	ld	r24, Z
    2722:	81 60       	ori	r24, 0x01	; 1
    2724:	80 83       	st	Z, r24
    2726:	80 81       	ld	r24, Z
    2728:	80 68       	ori	r24, 0x80	; 128
    272a:	80 83       	st	Z, r24
    272c:	10 92 c1 00 	sts	0x00C1, r1
    2730:	08 95       	ret

00002732 <analogRead>:
    2732:	98 2f       	mov	r25, r24
    2734:	8e 30       	cpi	r24, 0x0E	; 14
    2736:	08 f0       	brcs	.+2      	; 0x273a <analogRead+0x8>
    2738:	9e 50       	subi	r25, 0x0E	; 14
    273a:	97 70       	andi	r25, 0x07	; 7
    273c:	80 91 78 02 	lds	r24, 0x0278
    2740:	82 95       	swap	r24
    2742:	88 0f       	add	r24, r24
    2744:	88 0f       	add	r24, r24
    2746:	80 7c       	andi	r24, 0xC0	; 192
    2748:	89 2b       	or	r24, r25
    274a:	80 93 7c 00 	sts	0x007C, r24
    274e:	80 91 7a 00 	lds	r24, 0x007A
    2752:	80 64       	ori	r24, 0x40	; 64
    2754:	80 93 7a 00 	sts	0x007A, r24
    2758:	80 91 7a 00 	lds	r24, 0x007A
    275c:	86 fd       	sbrc	r24, 6
    275e:	fc cf       	rjmp	.-8      	; 0x2758 <analogRead+0x26>
    2760:	20 91 78 00 	lds	r18, 0x0078
    2764:	40 91 79 00 	lds	r20, 0x0079
    2768:	94 2f       	mov	r25, r20
    276a:	80 e0       	ldi	r24, 0x00	; 0
    276c:	30 e0       	ldi	r19, 0x00	; 0
    276e:	28 2b       	or	r18, r24
    2770:	39 2b       	or	r19, r25
    2772:	c9 01       	movw	r24, r18
    2774:	08 95       	ret

00002776 <pinMode>:
    2776:	cf 93       	push	r28
    2778:	df 93       	push	r29
    277a:	48 2f       	mov	r20, r24
    277c:	50 e0       	ldi	r21, 0x00	; 0
    277e:	ca 01       	movw	r24, r20
    2780:	84 56       	subi	r24, 0x64	; 100
    2782:	9f 4f       	sbci	r25, 0xFF	; 255
    2784:	fc 01       	movw	r30, r24
    2786:	34 91       	lpm	r19, Z+
    2788:	4a 57       	subi	r20, 0x7A	; 122
    278a:	5f 4f       	sbci	r21, 0xFF	; 255
    278c:	fa 01       	movw	r30, r20
    278e:	84 91       	lpm	r24, Z+
    2790:	88 23       	and	r24, r24
    2792:	69 f1       	breq	.+90     	; 0x27ee <pinMode+0x78>
    2794:	90 e0       	ldi	r25, 0x00	; 0
    2796:	88 0f       	add	r24, r24
    2798:	99 1f       	adc	r25, r25
    279a:	fc 01       	movw	r30, r24
    279c:	e8 59       	subi	r30, 0x98	; 152
    279e:	ff 4f       	sbci	r31, 0xFF	; 255
    27a0:	a5 91       	lpm	r26, Z+
    27a2:	b4 91       	lpm	r27, Z+
    27a4:	fc 01       	movw	r30, r24
    27a6:	ee 58       	subi	r30, 0x8E	; 142
    27a8:	ff 4f       	sbci	r31, 0xFF	; 255
    27aa:	c5 91       	lpm	r28, Z+
    27ac:	d4 91       	lpm	r29, Z+
    27ae:	66 23       	and	r22, r22
    27b0:	51 f4       	brne	.+20     	; 0x27c6 <pinMode+0x50>
    27b2:	2f b7       	in	r18, 0x3f	; 63
    27b4:	f8 94       	cli
    27b6:	8c 91       	ld	r24, X
    27b8:	93 2f       	mov	r25, r19
    27ba:	90 95       	com	r25
    27bc:	89 23       	and	r24, r25
    27be:	8c 93       	st	X, r24
    27c0:	88 81       	ld	r24, Y
    27c2:	89 23       	and	r24, r25
    27c4:	0b c0       	rjmp	.+22     	; 0x27dc <pinMode+0x66>
    27c6:	62 30       	cpi	r22, 0x02	; 2
    27c8:	61 f4       	brne	.+24     	; 0x27e2 <pinMode+0x6c>
    27ca:	2f b7       	in	r18, 0x3f	; 63
    27cc:	f8 94       	cli
    27ce:	8c 91       	ld	r24, X
    27d0:	93 2f       	mov	r25, r19
    27d2:	90 95       	com	r25
    27d4:	89 23       	and	r24, r25
    27d6:	8c 93       	st	X, r24
    27d8:	88 81       	ld	r24, Y
    27da:	83 2b       	or	r24, r19
    27dc:	88 83       	st	Y, r24
    27de:	2f bf       	out	0x3f, r18	; 63
    27e0:	06 c0       	rjmp	.+12     	; 0x27ee <pinMode+0x78>
    27e2:	9f b7       	in	r25, 0x3f	; 63
    27e4:	f8 94       	cli
    27e6:	8c 91       	ld	r24, X
    27e8:	83 2b       	or	r24, r19
    27ea:	8c 93       	st	X, r24
    27ec:	9f bf       	out	0x3f, r25	; 63
    27ee:	df 91       	pop	r29
    27f0:	cf 91       	pop	r28
    27f2:	08 95       	ret

000027f4 <turnOffPWM>:
    27f4:	83 30       	cpi	r24, 0x03	; 3
    27f6:	71 f0       	breq	.+28     	; 0x2814 <turnOffPWM+0x20>
    27f8:	84 30       	cpi	r24, 0x04	; 4
    27fa:	28 f4       	brcc	.+10     	; 0x2806 <turnOffPWM+0x12>
    27fc:	81 30       	cpi	r24, 0x01	; 1
    27fe:	a1 f0       	breq	.+40     	; 0x2828 <turnOffPWM+0x34>
    2800:	82 30       	cpi	r24, 0x02	; 2
    2802:	21 f5       	brne	.+72     	; 0x284c <turnOffPWM+0x58>
    2804:	14 c0       	rjmp	.+40     	; 0x282e <turnOffPWM+0x3a>
    2806:	86 30       	cpi	r24, 0x06	; 6
    2808:	b1 f0       	breq	.+44     	; 0x2836 <turnOffPWM+0x42>
    280a:	87 30       	cpi	r24, 0x07	; 7
    280c:	d1 f0       	breq	.+52     	; 0x2842 <turnOffPWM+0x4e>
    280e:	84 30       	cpi	r24, 0x04	; 4
    2810:	e9 f4       	brne	.+58     	; 0x284c <turnOffPWM+0x58>
    2812:	04 c0       	rjmp	.+8      	; 0x281c <turnOffPWM+0x28>
    2814:	80 91 80 00 	lds	r24, 0x0080
    2818:	8f 77       	andi	r24, 0x7F	; 127
    281a:	03 c0       	rjmp	.+6      	; 0x2822 <turnOffPWM+0x2e>
    281c:	80 91 80 00 	lds	r24, 0x0080
    2820:	8f 7d       	andi	r24, 0xDF	; 223
    2822:	80 93 80 00 	sts	0x0080, r24
    2826:	08 95       	ret
    2828:	84 b5       	in	r24, 0x24	; 36
    282a:	8f 77       	andi	r24, 0x7F	; 127
    282c:	02 c0       	rjmp	.+4      	; 0x2832 <turnOffPWM+0x3e>
    282e:	84 b5       	in	r24, 0x24	; 36
    2830:	8f 7d       	andi	r24, 0xDF	; 223
    2832:	84 bd       	out	0x24, r24	; 36
    2834:	08 95       	ret
    2836:	80 91 b0 00 	lds	r24, 0x00B0
    283a:	8f 77       	andi	r24, 0x7F	; 127
    283c:	80 93 b0 00 	sts	0x00B0, r24
    2840:	08 95       	ret
    2842:	80 91 b0 00 	lds	r24, 0x00B0
    2846:	8f 7d       	andi	r24, 0xDF	; 223
    2848:	80 93 b0 00 	sts	0x00B0, r24
    284c:	08 95       	ret

0000284e <digitalWrite>:
    284e:	ff 92       	push	r15
    2850:	0f 93       	push	r16
    2852:	1f 93       	push	r17
    2854:	f6 2e       	mov	r15, r22
    2856:	48 2f       	mov	r20, r24
    2858:	50 e0       	ldi	r21, 0x00	; 0
    285a:	ca 01       	movw	r24, r20
    285c:	8e 54       	subi	r24, 0x4E	; 78
    285e:	9f 4f       	sbci	r25, 0xFF	; 255
    2860:	fc 01       	movw	r30, r24
    2862:	24 91       	lpm	r18, Z+
    2864:	ca 01       	movw	r24, r20
    2866:	84 56       	subi	r24, 0x64	; 100
    2868:	9f 4f       	sbci	r25, 0xFF	; 255
    286a:	fc 01       	movw	r30, r24
    286c:	14 91       	lpm	r17, Z+
    286e:	4a 57       	subi	r20, 0x7A	; 122
    2870:	5f 4f       	sbci	r21, 0xFF	; 255
    2872:	fa 01       	movw	r30, r20
    2874:	04 91       	lpm	r16, Z+
    2876:	00 23       	and	r16, r16
    2878:	c9 f0       	breq	.+50     	; 0x28ac <digitalWrite+0x5e>
    287a:	22 23       	and	r18, r18
    287c:	19 f0       	breq	.+6      	; 0x2884 <digitalWrite+0x36>
    287e:	82 2f       	mov	r24, r18
    2880:	0e 94 fa 13 	call	0x27f4	; 0x27f4 <turnOffPWM>
    2884:	e0 2f       	mov	r30, r16
    2886:	f0 e0       	ldi	r31, 0x00	; 0
    2888:	ee 0f       	add	r30, r30
    288a:	ff 1f       	adc	r31, r31
    288c:	ee 58       	subi	r30, 0x8E	; 142
    288e:	ff 4f       	sbci	r31, 0xFF	; 255
    2890:	a5 91       	lpm	r26, Z+
    2892:	b4 91       	lpm	r27, Z+
    2894:	9f b7       	in	r25, 0x3f	; 63
    2896:	f8 94       	cli
    2898:	ff 20       	and	r15, r15
    289a:	21 f4       	brne	.+8      	; 0x28a4 <digitalWrite+0x56>
    289c:	8c 91       	ld	r24, X
    289e:	10 95       	com	r17
    28a0:	81 23       	and	r24, r17
    28a2:	02 c0       	rjmp	.+4      	; 0x28a8 <digitalWrite+0x5a>
    28a4:	8c 91       	ld	r24, X
    28a6:	81 2b       	or	r24, r17
    28a8:	8c 93       	st	X, r24
    28aa:	9f bf       	out	0x3f, r25	; 63
    28ac:	1f 91       	pop	r17
    28ae:	0f 91       	pop	r16
    28b0:	ff 90       	pop	r15
    28b2:	08 95       	ret

000028b4 <__mulsi3>:
    28b4:	62 9f       	mul	r22, r18
    28b6:	d0 01       	movw	r26, r0
    28b8:	73 9f       	mul	r23, r19
    28ba:	f0 01       	movw	r30, r0
    28bc:	82 9f       	mul	r24, r18
    28be:	e0 0d       	add	r30, r0
    28c0:	f1 1d       	adc	r31, r1
    28c2:	64 9f       	mul	r22, r20
    28c4:	e0 0d       	add	r30, r0
    28c6:	f1 1d       	adc	r31, r1
    28c8:	92 9f       	mul	r25, r18
    28ca:	f0 0d       	add	r31, r0
    28cc:	83 9f       	mul	r24, r19
    28ce:	f0 0d       	add	r31, r0
    28d0:	74 9f       	mul	r23, r20
    28d2:	f0 0d       	add	r31, r0
    28d4:	65 9f       	mul	r22, r21
    28d6:	f0 0d       	add	r31, r0
    28d8:	99 27       	eor	r25, r25
    28da:	72 9f       	mul	r23, r18
    28dc:	b0 0d       	add	r27, r0
    28de:	e1 1d       	adc	r30, r1
    28e0:	f9 1f       	adc	r31, r25
    28e2:	63 9f       	mul	r22, r19
    28e4:	b0 0d       	add	r27, r0
    28e6:	e1 1d       	adc	r30, r1
    28e8:	f9 1f       	adc	r31, r25
    28ea:	bd 01       	movw	r22, r26
    28ec:	cf 01       	movw	r24, r30
    28ee:	11 24       	eor	r1, r1
    28f0:	08 95       	ret

000028f2 <__udivmodsi4>:
    28f2:	a1 e2       	ldi	r26, 0x21	; 33
    28f4:	1a 2e       	mov	r1, r26
    28f6:	aa 1b       	sub	r26, r26
    28f8:	bb 1b       	sub	r27, r27
    28fa:	fd 01       	movw	r30, r26
    28fc:	0d c0       	rjmp	.+26     	; 0x2918 <__udivmodsi4_ep>

000028fe <__udivmodsi4_loop>:
    28fe:	aa 1f       	adc	r26, r26
    2900:	bb 1f       	adc	r27, r27
    2902:	ee 1f       	adc	r30, r30
    2904:	ff 1f       	adc	r31, r31
    2906:	a2 17       	cp	r26, r18
    2908:	b3 07       	cpc	r27, r19
    290a:	e4 07       	cpc	r30, r20
    290c:	f5 07       	cpc	r31, r21
    290e:	20 f0       	brcs	.+8      	; 0x2918 <__udivmodsi4_ep>
    2910:	a2 1b       	sub	r26, r18
    2912:	b3 0b       	sbc	r27, r19
    2914:	e4 0b       	sbc	r30, r20
    2916:	f5 0b       	sbc	r31, r21

00002918 <__udivmodsi4_ep>:
    2918:	66 1f       	adc	r22, r22
    291a:	77 1f       	adc	r23, r23
    291c:	88 1f       	adc	r24, r24
    291e:	99 1f       	adc	r25, r25
    2920:	1a 94       	dec	r1
    2922:	69 f7       	brne	.-38     	; 0x28fe <__udivmodsi4_loop>
    2924:	60 95       	com	r22
    2926:	70 95       	com	r23
    2928:	80 95       	com	r24
    292a:	90 95       	com	r25
    292c:	9b 01       	movw	r18, r22
    292e:	ac 01       	movw	r20, r24
    2930:	bd 01       	movw	r22, r26
    2932:	cf 01       	movw	r24, r30
    2934:	08 95       	ret

00002936 <__prologue_saves__>:
    2936:	2f 92       	push	r2
    2938:	3f 92       	push	r3
    293a:	4f 92       	push	r4
    293c:	5f 92       	push	r5
    293e:	6f 92       	push	r6
    2940:	7f 92       	push	r7
    2942:	8f 92       	push	r8
    2944:	9f 92       	push	r9
    2946:	af 92       	push	r10
    2948:	bf 92       	push	r11
    294a:	cf 92       	push	r12
    294c:	df 92       	push	r13
    294e:	ef 92       	push	r14
    2950:	ff 92       	push	r15
    2952:	0f 93       	push	r16
    2954:	1f 93       	push	r17
    2956:	cf 93       	push	r28
    2958:	df 93       	push	r29
    295a:	cd b7       	in	r28, 0x3d	; 61
    295c:	de b7       	in	r29, 0x3e	; 62
    295e:	ca 1b       	sub	r28, r26
    2960:	db 0b       	sbc	r29, r27
    2962:	0f b6       	in	r0, 0x3f	; 63
    2964:	f8 94       	cli
    2966:	de bf       	out	0x3e, r29	; 62
    2968:	0f be       	out	0x3f, r0	; 63
    296a:	cd bf       	out	0x3d, r28	; 61
    296c:	09 94       	ijmp

0000296e <__epilogue_restores__>:
    296e:	2a 88       	ldd	r2, Y+18	; 0x12
    2970:	39 88       	ldd	r3, Y+17	; 0x11
    2972:	48 88       	ldd	r4, Y+16	; 0x10
    2974:	5f 84       	ldd	r5, Y+15	; 0x0f
    2976:	6e 84       	ldd	r6, Y+14	; 0x0e
    2978:	7d 84       	ldd	r7, Y+13	; 0x0d
    297a:	8c 84       	ldd	r8, Y+12	; 0x0c
    297c:	9b 84       	ldd	r9, Y+11	; 0x0b
    297e:	aa 84       	ldd	r10, Y+10	; 0x0a
    2980:	b9 84       	ldd	r11, Y+9	; 0x09
    2982:	c8 84       	ldd	r12, Y+8	; 0x08
    2984:	df 80       	ldd	r13, Y+7	; 0x07
    2986:	ee 80       	ldd	r14, Y+6	; 0x06
    2988:	fd 80       	ldd	r15, Y+5	; 0x05
    298a:	0c 81       	ldd	r16, Y+4	; 0x04
    298c:	1b 81       	ldd	r17, Y+3	; 0x03
    298e:	aa 81       	ldd	r26, Y+2	; 0x02
    2990:	b9 81       	ldd	r27, Y+1	; 0x01
    2992:	ce 0f       	add	r28, r30
    2994:	d1 1d       	adc	r29, r1
    2996:	0f b6       	in	r0, 0x3f	; 63
    2998:	f8 94       	cli
    299a:	de bf       	out	0x3e, r29	; 62
    299c:	0f be       	out	0x3f, r0	; 63
    299e:	cd bf       	out	0x3d, r28	; 61
    29a0:	ed 01       	movw	r28, r26
    29a2:	08 95       	ret

000029a4 <__tablejump2__>:
    29a4:	ee 0f       	add	r30, r30
    29a6:	ff 1f       	adc	r31, r31

000029a8 <__tablejump__>:
    29a8:	05 90       	lpm	r0, Z+
    29aa:	f4 91       	lpm	r31, Z+
    29ac:	e0 2d       	mov	r30, r0
    29ae:	09 94       	ijmp

000029b0 <_exit>:
    29b0:	f8 94       	cli

000029b2 <__stop_program>:
    29b2:	ff cf       	rjmp	.-2      	; 0x29b2 <__stop_program>
